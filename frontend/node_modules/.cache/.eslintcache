[{"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\index.js":"1","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\App.js":"2","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\store.js":"4","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\root-saga.js":"5","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\root-reducer.js":"6","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\sign-up-form\\sign-up-form.component.jsx":"7","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\sign-in-and-sign-up\\sign-in-and-sign-up.page.jsx":"8","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\index.js":"9","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\App.js":"10","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\reportWebVitals.js":"11","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\store.js":"12","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\root-saga.js":"13","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\root-reducer.js":"14","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\sign-in-and-sign-up\\sign-in-and-sign-up.page.jsx":"15","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\user\\user.reducer.js":"16","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\user\\user.sagas.js":"17","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\sign-up-form\\sign-up-form.component.jsx":"18","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\user\\user.types.js":"19","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\user\\user.actions.js":"20","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\user\\user.selectors.js":"21","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\sign-in-form\\sign-in-form.component.jsx":"22","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.actions.js":"23","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.sagas.js":"24","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.selectors.js":"25","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.types.js":"26","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.reducer.js":"27","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\all-projects\\all-projects.js":"28","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\projects-list\\projects-list.component.jsx":"29","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\project\\project.page.js":"30","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.reducer.js":"31","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.types.js":"32","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.sagas.js":"33","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.actions.js":"34","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.selectors.js":"35","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-project-form\\create-project-form.component.jsx":"36","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\tasks-list\\tasks-list.component.jsx":"37","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-task-form\\create-task-form.component.jsx":"38","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\user\\user.selectors.js":"39","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\all-projects\\all-projects.js":"40","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\project\\project.page.js":"41","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\task\\task.page.js":"42","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\individual-purchase-order\\individual-purchase-order.page.jsx":"43","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\user\\user.reducer.js":"44","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\user\\user.sagas.js":"45","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.reducer.js":"46","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.sagas.js":"47","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-project\\current-project.reducer.js":"48","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.sagas.js":"49","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-project\\current-project.sagas.js":"50","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-task\\current-task.sagas.js":"51","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-task\\current-task.reducer.js":"52","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-step\\current-step.reducer.js":"53","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-step\\current-step.sagas.js":"54","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.reducer.js":"55","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.sagas.js":"56","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.saga.js":"57","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.reducer.js":"58","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.reducer.js":"59","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.actions.js":"60","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.selectors.js":"61","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\user\\user.actions.js":"62","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.selectors.js":"63","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-project\\current-project.actions.js":"64","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-project\\current-project.selectors.js":"65","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-task\\current-task.actions.js":"66","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.actions.js":"67","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.selector.js":"68","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-task\\current-task.selectors.js":"69","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-step\\current-step.actions.js":"70","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-step\\current-step.selectors.js":"71","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.actions.js":"72","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-step-form\\create-step-form.component.jsx":"73","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\tasks-list\\tasks-list.component.jsx":"74","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\steps-list\\steps-list.component.jsx":"75","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-task-form\\create-task-form.component.jsx":"76","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-project-form\\create-project-form.component.jsx":"77","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-list\\projects-list.component.jsx":"78","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-orders-list.component.jsx":"79","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\sign-in-form\\sign-in-form.component.jsx":"80","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.component.jsx":"81","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-purchase-order-item-form\\create-purchase-order-item-form.component.jsx":"82","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\user\\user.types.js":"83","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.actions.js":"84","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-project\\current-project.types.js":"85","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.types.js":"86","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.types.js":"87","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.types.js":"88","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-task\\current-task.types.js":"89","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.types.js":"90","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.selector.js":"91","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-step\\current-step.types.js":"92","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\conformation-message\\comformation-message.component.jsx":"93","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\hamburger\\hamburger.component.jsx":"94","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-item\\project-item.component.jsx":"95","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-item\\project-item.styles.jsx":"96","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\hamburger\\hamburger.styles.jsx":"97","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\task-nav\\task-nav.component.jsx":"98","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\task-nav\\task-nav.styles.jsx":"99","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\task-item\\task-item.component.jsx":"100","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\task-item\\task-item.styles.jsx":"101","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\lower-nav-bar\\lower-nav-bar.component.js":"102","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\lower-nav-bar\\lower-nav-bar.styles.js":"103","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\project-purchase-orders\\project-purchase-orders.jsx":"104","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\task-purchase-orders\\task-purchase-orders.page.jsx":"105","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\task\\task.page.js":"106","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\task-purchase-orders\\task-purchase-orders.page.jsx":"107","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\individual-purchase-order\\individual-purchase-order.page.jsx":"108","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\project-purchase-orders\\project-purchase-orders.jsx":"109","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.sagas.js":"110","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.reducer.js":"111","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-task\\current-task.sagas.js":"112","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-project\\current-project.reducer.js":"113","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-project\\current-project.sagas.js":"114","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-step\\current-step.reducer.js":"115","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.reducer.js":"116","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-step\\current-step.sagas.js":"117","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-task\\current-task.reducer.js":"118","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.saga.js":"119","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.actions.js":"120","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-project\\current-project.actions.js":"121","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.selector.js":"122","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-task\\current-task.actions.js":"123","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-task\\current-task.selectors.js":"124","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-project\\current-project.selectors.js":"125","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\lower-nav-bar\\lower-nav-bar.component.js":"126","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.actions.js":"127","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-step\\current-step.actions.js":"128","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-step\\current-step.selectors.js":"129","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\task-nav\\task-nav.component.jsx":"130","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-step-form\\create-step-form.component.jsx":"131","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\steps-list\\steps-list.component.jsx":"132","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-orders-list.component.jsx":"133","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-purchase-order-item-form\\create-purchase-order-item-form.component.jsx":"134","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-step\\current-step.types.js":"135","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.types.js":"136","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-project\\current-project.types.js":"137","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-task\\current-task.types.js":"138","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.types.js":"139","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.selector.js":"140","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.component.jsx":"141","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\lower-nav-bar\\lower-nav-bar.styles.js":"142","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\task-nav\\task-nav.styles.jsx":"143","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\project-item\\project-item.component.jsx":"144","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\task-item\\task-item.component.jsx":"145","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\hamburger\\hamburger.component.jsx":"146","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\conformation-message\\comformation-message.component.jsx":"147","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\hamburger\\hamburger.styles.jsx":"148","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\task-item\\task-item.styles.jsx":"149","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\project-item\\project-item.styles.jsx":"150","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\steps-list\\steps-list.container.js":"151","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-list\\projects-list.container.js":"152","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\tasks-list\\tasks-list.container.js":"153","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\with-spinner\\with-spinner.component.jsx":"154","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\with-spinner\\with-spinner.styles.jsx":"155","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-item\\step-item.component.jsx":"156","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-item\\step-item.styles.jsx":"157","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\PO-item-nav\\PO-item-nav.component.js":"158","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\PO-item-menu\\PO-item-menu.component.js":"159","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-order-lists.container.js":"160","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\PO-item-nav\\PO-item-nav.styles.js":"161","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\PO-item-menu\\PO-item-menu.styles.js":"162","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-orders-list.styles.js":"163","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.component.styles.js":"164","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\checkbox\\Checkbox.styles.js":"165","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\delete-button\\delete-button.styles.js":"166","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\checkbox\\checkbox.component.js":"167","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\checkbox\\checkbox.styles.js":"168","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\long-button\\long-button.styles.js":"169","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\generic-button\\generic-button.styles.js":"170","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.container.js":"171","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\projects-list\\projects-list.container.js":"172","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\long-button\\long-button.styles.js":"173","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\steps-list\\steps-list.container.js":"174","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\tasks-list\\tasks-list.container.js":"175","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\generic-button\\generic-button.styles.js":"176","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.container.js":"177","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-order-lists.container.js":"178","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\PO-item-menu\\PO-item-menu.component.js":"179","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\PO-item-nav\\PO-item-nav.component.js":"180","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\PO-item-menu\\PO-item-menu.styles.js":"181","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\PO-item-nav\\PO-item-nav.styles.js":"182","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\with-spinner\\with-spinner.component.jsx":"183","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-orders-list.styles.js":"184","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.component.styles.js":"185","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\step-item\\step-item.component.jsx":"186","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\checkbox\\checkbox.component.js":"187","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\delete-button\\delete-button.styles.js":"188","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\with-spinner\\with-spinner.styles.jsx":"189","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\step-item\\step-item.styles.jsx":"190","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\checkbox\\checkbox.styles.js":"191","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\project-schedule\\project-schedule.jsx":"192","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\project-schedule\\project-schedule.jsx":"193","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\gantt-chart\\gantt-chart.component.jsx":"194","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\gantt-chart\\gantt-chart.component.jsx":"195","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.sagas.js":"196","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.reducer.js":"197","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\task-change-orders\\task-change-orders.page.js":"198","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\individual-change-order\\individual-change-order.page.js":"199","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.actions.js":"200","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.selectors.js":"201","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.types.js":"202","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\change-orders-list\\change-orders-list.component.js":"203","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\CO-item-menu\\CO-item-menu.component.js":"204","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-change-order-item-form\\create-change-order-item-form.component.js":"205","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\CO-item-nav\\CO-item-nav.component.js":"206","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\individual-change-order\\individual-change-order.component.js":"207","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-change-order-form\\create-change-order-form.js":"208","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\CO-item-menu\\CO-item-menu.styles.js":"209","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\CO-item-nav\\CO-item-nav.styles.js":"210","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\individual-change-order\\individual-change-order.styes.js":"211","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\individual-change-order\\individual-change-order.page.js":"212","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\task-change-orders\\task-change-orders.page.js":"213","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.reducer.js":"214","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.sagas.js":"215","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.actions.js":"216","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\CO-item-menu\\CO-item-menu.component.js":"217","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-change-order-item-form\\create-change-order-item-form.component.js":"218","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\CO-item-nav\\CO-item-nav.component.js":"219","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-change-order\\individual-change-order.component.js":"220","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\change-orders-list\\change-orders-list.component.js":"221","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-change-order-form\\create-change-order-form.js":"222","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.types.js":"223","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.selectors.js":"224","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-change-order\\individual-change-order.styes.js":"225","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\CO-item-nav\\CO-item-nav.styles.js":"226","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\CO-item-menu\\CO-item-menu.styles.js":"227","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\gantt-chart\\gantt-chart.container.jsx":"228","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\manage-team\\manage-team.component.js":"229","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\project-change-orders\\project-change-orders.page.js":"230","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\adduser-form\\adduser-form.component.js":"231","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\search-bar\\search-bar.component.js":"232","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\admin-panel-task-page\\admin-panel-task-page.component.js":"233","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\adduser-form\\adduser-form.styles.js":"234","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\styles\\no-style-button.style.js":"235","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\manage-team\\manage-team.styles.js":"236","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\team\\team.component.js":"237","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\access\\access.component.js":"238","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\search-bar\\search-bar.styles.js":"239","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\admin-panel-task-page\\admin-panel-task-page.styles.js":"240","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\access\\access.styles.js":"241","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\team\\team.styles.js":"242","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-project-form\\create-project-form.styles.jsx":"243","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\toggle-button\\toggle-button.component.jsx":"244","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\access-dropdown\\access-dropdown.component.jsx":"245","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\access-dropdown\\dropdown.styles.jsx":"246","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-dropdown\\form-dropdown.component.jsx":"247","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-dropdown\\form-dropdown.styles.jsx":"248","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\manage-roles\\manage-roles.component.js":"249","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\manage-roles\\manage-roles.styles.js":"250","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\addrole-form\\addrole-form.component.js":"251","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\addrole-form\\addrole-form.styles.js":"252","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-summary\\purchase-orders-summary.component.jsx":"253","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-summary\\purchase-orders-summary.styles.js":"254","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-button\\create-button.component.jsx":"255","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-button\\create-button.styles.jsx":"256","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\project-punch-list\\project-punch-list.jsx":"257","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\all-punch-list\\all-punch-list.component.jsx":"258","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\all-punch-list\\all-punch-list.styles.js":"259","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\no-result\\no-result.component.jsx":"260","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\team\\teamitem.component.js":"261","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-nav\\projects-nav.component.jsx":"262","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-nav\\projects-nav.styles.jsx":"263","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-filter\\projects-filter.component.js":"264","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-filter\\projects-filter.styles.js":"265","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-filter-dropdown\\projects-filter-dropdown.component.jsx":"266","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-filter-dropdown\\projects-filter-dropdown.styles.jsx":"267","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-nav\\step-nav.component.js":"268","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-nav\\step-nav.styles.js":"269","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-lower-nav\\step-lower-nav.component.js":"270","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-lower-nav\\step-lower-nav.styles.js":"271","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-info\\step-info.component.jsx":"272","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-info\\step-info.styles.jsx":"273","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\tasks-filter\\tasks-filter.component.js":"274","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\tasks-filter\\tasks-filter.styles.js":"275","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-task-form\\create-task-form.styles.jsx":"276","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-task\\create-task.js":"277","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-PO\\create-PO.js":"278","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-purchase-order-form\\create-purchase-order-form.component.jsx":"279","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-purchase-order-form\\create-purchase-order-form.styles.jsx":"280","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\costbook\\costbook.saga.js":"281","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\costbook\\costbook.types.js":"282","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\costbook\\costbook.actions.js":"283","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\costbook\\costbook.reducer.js":"284","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\cost-book\\cost-book.page.js":"285","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\cost-code\\cost-code.page.js":"286","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\cost-book-item\\cost-book-item.page.js":"287","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\costbook\\costbook.selectors.js":"288","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-category\\costbook-category.component.jsx":"289","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-category\\costbook-category.styles.jsx":"290","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-costcode\\costbook-costcode.component.jsx":"291","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-costcode\\costbook-costcode.styles.jsx":"292","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-costcodenav\\costbook-costcodenav.component.jsx":"293","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-costcodenav\\costbook-costcodenav.styles.jsx":"294","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\cost-code\\cost-code.styles.js":"295","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createbutton\\costbook-createbutton.component.jsx":"296","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createbutton\\costbook-createbutton.styles.jsx":"297","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-cost-book-category\\create-cost-book-category.page.js":"298","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcategory\\costbook-createcategory.jsx":"299","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcategory\\costbook-createcategory.styles.jsx":"300","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-cost-book-costcode\\create-cost-book-costcode.page.js":"301","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcostcode\\costbook-createcostcode.jsx":"302","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcostcode\\costbook-createcostcode.styles.jsx":"303","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcostcode\\form-dropdown\\form-dropdown.component.jsx":"304","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcostcode\\form-dropdown\\form-dropdown.styles.jsx":"305","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-editcostcode\\costbook-editcostcode.jsx":"306","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-editcostcode\\form-dropdown\\form-dropdown.component.jsx":"307","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-editcostcode\\form-dropdown\\form-dropdown.styles.jsx":"308","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-editcostcode\\costbook-editcostcode.styles.jsx":"309","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-createbutton\\costcode-createbutton.component.jsx":"310","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-createbutton\\costcode-createbutton.styles.jsx":"311","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-cost-code-item\\create-cost-code-item.js":"312","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-cost-code-item\\create-cost-code-item.styles.js":"313","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-createitem\\costcode-createitem.component.jsx":"314","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-createitem\\costcode-createitem.styles.jsx":"315","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\spinner\\spinner.component.jsx":"316","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\spinner\\spinner.styles.jsx":"317","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-displayitem\\costcode-displayitem.component.jsx":"318","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-displayitem\\costcode-displayitem.styles.jsx":"319","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-edititem\\costcode-edititem.component.jsx":"320","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-edititem\\costcode-edititem.styles.jsx":"321","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-fullscreen-selection\\form-fullscreen-selection.component.js":"322","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-fullscreen-selection\\form-fullscreen-selection.styles.js":"323","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\organisation\\organisation.page.js":"324","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-costbook-selection\\form-costbook-selection.component.js":"325","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-costbook-selection\\form-costbook-selection.styles.js":"326","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\organisation\\organisation.selectors.js":"327","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\organisation\\organisation.actions.js":"328","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\organisation\\organisation.types.js":"329","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\organisation\\organisation.reducer.js":"330","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\organisation\\organisation.sagas.js":"331","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\organisation-createbutton\\organisation-createbutton.component.jsx":"332","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\organisation-createbutton\\organisation-createbutton.styles.jsx":"333","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-organisation\\create-organisation.page.js":"334","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-organisation\\create-organisation.styles.js":"335","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\hamburger\\hamburger.page.js":"336","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-project\\create-project.page.jsx":"337","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-createbutton\\project-createbutton.component.jsx":"338","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-createbutton\\project-createbutton.styles.jsx":"339","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-choose-template\\project-choose-template.component.jsx":"340","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-choose-template\\project-choose-template.styles.jsx":"341","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-project-scratch\\create-project-scratch.page.jsx":"342","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-purchase-order-info\\individual-purchase-order-info.component.jsx":"343","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-purchase-order-info\\individual-purchase-order-info.styles.jsx":"344","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-list-admin\\purchase-orders-list-admin.component.jsx":"345","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-list-admin\\purchase-orders-list-admin.styles.js":"346","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\steps-list\\steps-list.component.styles.js":"347","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-CO\\create-CO.js":"348","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-change-order-form\\create-change-order-form.styles.js":"349","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\invite\\invite.jsx":"350","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\adduser-form\\form-dropdown.component.jsx":"351","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\adduser-form\\form-dropdown.styles.jsx":"352"},{"size":826,"mtime":1614277167544,"results":"353","hashOfConfig":"354"},{"size":5820,"mtime":1627556286365,"results":"355","hashOfConfig":"354"},{"size":375,"mtime":1613989985263,"results":"356","hashOfConfig":"354"},{"size":646,"mtime":1614366760469,"results":"357","hashOfConfig":"354"},{"size":1203,"mtime":1625846157534,"results":"358","hashOfConfig":"354"},{"size":1732,"mtime":1625944079517,"results":"359","hashOfConfig":"354"},{"size":5660,"mtime":1621686148435,"results":"360","hashOfConfig":"354"},{"size":575,"mtime":1614522252173,"results":"361","hashOfConfig":"354"},{"size":826,"mtime":1614277167544,"results":"362","hashOfConfig":"363"},{"size":2340,"mtime":1618040536675,"results":"364","hashOfConfig":"363"},{"size":375,"mtime":1613989985263,"results":"365","hashOfConfig":"363"},{"size":646,"mtime":1614366760469,"results":"366","hashOfConfig":"363"},{"size":1047,"mtime":1618040536719,"results":"367","hashOfConfig":"363"},{"size":1486,"mtime":1618040536718,"results":"368","hashOfConfig":"363"},{"size":575,"mtime":1614522252173,"results":"369","hashOfConfig":"363"},{"size":2997,"mtime":1614526099747,"results":"370","hashOfConfig":"363"},{"size":2291,"mtime":1614522252177,"results":"371","hashOfConfig":"363"},{"size":5648,"mtime":1614522252170,"results":"372","hashOfConfig":"363"},{"size":437,"mtime":1614522252180,"results":"373","hashOfConfig":"363"},{"size":1076,"mtime":1614522252174,"results":"374","hashOfConfig":"363"},{"size":1045,"mtime":1614525546026,"results":"375","hashOfConfig":"363"},{"size":2370,"mtime":1614522252168,"results":"376","hashOfConfig":"363"},{"size":1440,"mtime":1617171989468,"results":"377","hashOfConfig":"363"},{"size":2771,"mtime":1617171989471,"results":"378","hashOfConfig":"363"},{"size":566,"mtime":1616854111088,"results":"379","hashOfConfig":"363"},{"size":615,"mtime":1617171989473,"results":"380","hashOfConfig":"363"},{"size":2503,"mtime":1617171989470,"results":"381","hashOfConfig":"363"},{"size":2118,"mtime":1616958001419,"results":"382","hashOfConfig":"363"},{"size":506,"mtime":1616854111073,"results":"383","hashOfConfig":"363"},{"size":1762,"mtime":1617732449401,"results":"384","hashOfConfig":"363"},{"size":1638,"mtime":1614870126878,"results":"385","hashOfConfig":"363"},{"size":321,"mtime":1614871212754,"results":"386","hashOfConfig":"363"},{"size":2020,"mtime":1616854111093,"results":"387","hashOfConfig":"363"},{"size":799,"mtime":1616854111092,"results":"388","hashOfConfig":"363"},{"size":386,"mtime":1614870962513,"results":"389","hashOfConfig":"363"},{"size":3220,"mtime":1617171989466,"results":"390","hashOfConfig":"363"},{"size":723,"mtime":1616769702779,"results":"391","hashOfConfig":"363"},{"size":2848,"mtime":1616854111071,"results":"392","hashOfConfig":"363"},{"size":1184,"mtime":1619875902722,"results":"393","hashOfConfig":"354"},{"size":5671,"mtime":1625981238260,"results":"394","hashOfConfig":"354"},{"size":5804,"mtime":1627557646167,"results":"395","hashOfConfig":"354"},{"size":4330,"mtime":1626325511571,"results":"396","hashOfConfig":"354"},{"size":2250,"mtime":1626195776667,"results":"397","hashOfConfig":"354"},{"size":3313,"mtime":1620995239999,"results":"398","hashOfConfig":"354"},{"size":2521,"mtime":1619875902714,"results":"399","hashOfConfig":"354"},{"size":1751,"mtime":1615557694441,"results":"400","hashOfConfig":"354"},{"size":1934,"mtime":1625944079512,"results":"401","hashOfConfig":"354"},{"size":7030,"mtime":1625944079514,"results":"402","hashOfConfig":"354"},{"size":2020,"mtime":1616854111093,"results":"403","hashOfConfig":"354"},{"size":7994,"mtime":1627475771791,"results":"404","hashOfConfig":"354"},{"size":4435,"mtime":1619875902817,"results":"405","hashOfConfig":"354"},{"size":4220,"mtime":1618040536713,"results":"406","hashOfConfig":"354"},{"size":3421,"mtime":1616854111101,"results":"407","hashOfConfig":"354"},{"size":4022,"mtime":1616863630410,"results":"408","hashOfConfig":"354"},{"size":2978,"mtime":1616655665889,"results":"409","hashOfConfig":"354"},{"size":3550,"mtime":1625846137095,"results":"410","hashOfConfig":"354"},{"size":3483,"mtime":1625997057102,"results":"411","hashOfConfig":"354"},{"size":2066,"mtime":1625943750565,"results":"412","hashOfConfig":"354"},{"size":2529,"mtime":1625208508266,"results":"413","hashOfConfig":"354"},{"size":1438,"mtime":1625746742569,"results":"414","hashOfConfig":"354"},{"size":712,"mtime":1625208471549,"results":"415","hashOfConfig":"354"},{"size":1533,"mtime":1620995239997,"results":"416","hashOfConfig":"354"},{"size":641,"mtime":1625943757117,"results":"417","hashOfConfig":"354"},{"size":3398,"mtime":1621683878485,"results":"418","hashOfConfig":"354"},{"size":2803,"mtime":1625213319039,"results":"419","hashOfConfig":"354"},{"size":1956,"mtime":1618044320166,"results":"420","hashOfConfig":"354"},{"size":939,"mtime":1615557694440,"results":"421","hashOfConfig":"354"},{"size":790,"mtime":1616854111091,"results":"422","hashOfConfig":"354"},{"size":2460,"mtime":1618040536715,"results":"423","hashOfConfig":"354"},{"size":1788,"mtime":1616854111101,"results":"424","hashOfConfig":"354"},{"size":1482,"mtime":1615557694454,"results":"425","hashOfConfig":"354"},{"size":1520,"mtime":1618040536709,"results":"426","hashOfConfig":"354"},{"size":2705,"mtime":1616949428596,"results":"427","hashOfConfig":"354"},{"size":723,"mtime":1616769702779,"results":"428","hashOfConfig":"354"},{"size":1762,"mtime":1626325893621,"results":"429","hashOfConfig":"354"},{"size":9516,"mtime":1627551683175,"results":"430","hashOfConfig":"354"},{"size":8365,"mtime":1627560545647,"results":"431","hashOfConfig":"354"},{"size":936,"mtime":1625047097746,"results":"432","hashOfConfig":"354"},{"size":2970,"mtime":1626327629603,"results":"433","hashOfConfig":"354"},{"size":2370,"mtime":1614522252168,"results":"434","hashOfConfig":"354"},{"size":3511,"mtime":1626198414061,"results":"435","hashOfConfig":"354"},{"size":3199,"mtime":1616958038940,"results":"436","hashOfConfig":"354"},{"size":474,"mtime":1620995240000,"results":"437","hashOfConfig":"354"},{"size":864,"mtime":1625943063589,"results":"438","hashOfConfig":"354"},{"size":1471,"mtime":1621683773044,"results":"439","hashOfConfig":"354"},{"size":323,"mtime":1615557694443,"results":"440","hashOfConfig":"354"},{"size":353,"mtime":1625943030411,"results":"441","hashOfConfig":"354"},{"size":708,"mtime":1615557694451,"results":"442","hashOfConfig":"354"},{"size":845,"mtime":1618040536716,"results":"443","hashOfConfig":"354"},{"size":615,"mtime":1617171989473,"results":"444","hashOfConfig":"354"},{"size":1156,"mtime":1616958039033,"results":"445","hashOfConfig":"354"},{"size":782,"mtime":1616854111103,"results":"446","hashOfConfig":"354"},{"size":158,"mtime":1615197925601,"results":"447","hashOfConfig":"354"},{"size":289,"mtime":1619881485950,"results":"448","hashOfConfig":"354"},{"size":4904,"mtime":1621597941511,"results":"449","hashOfConfig":"354"},{"size":1537,"mtime":1623830447032,"results":"450","hashOfConfig":"354"},{"size":352,"mtime":1623830707898,"results":"451","hashOfConfig":"354"},{"size":1292,"mtime":1625980541579,"results":"452","hashOfConfig":"354"},{"size":1020,"mtime":1625980582911,"results":"453","hashOfConfig":"354"},{"size":3265,"mtime":1624092439677,"results":"454","hashOfConfig":"354"},{"size":2671,"mtime":1624115405088,"results":"455","hashOfConfig":"354"},{"size":2968,"mtime":1624987200081,"results":"456","hashOfConfig":"354"},{"size":756,"mtime":1621153044782,"results":"457","hashOfConfig":"354"},{"size":3730,"mtime":1626326992682,"results":"458","hashOfConfig":"354"},{"size":2115,"mtime":1624273813559,"results":"459","hashOfConfig":"354"},{"size":4287,"mtime":1618040536700,"results":"460","hashOfConfig":"363"},{"size":2215,"mtime":1616944261201,"results":"461","hashOfConfig":"363"},{"size":1490,"mtime":1616958039028,"results":"462","hashOfConfig":"363"},{"size":1746,"mtime":1616944261199,"results":"463","hashOfConfig":"363"},{"size":1753,"mtime":1616854111090,"results":"464","hashOfConfig":"363"},{"size":1751,"mtime":1615557694441,"results":"465","hashOfConfig":"363"},{"size":4032,"mtime":1618040536714,"results":"466","hashOfConfig":"363"},{"size":2418,"mtime":1618040536707,"results":"467","hashOfConfig":"363"},{"size":2209,"mtime":1616854111097,"results":"468","hashOfConfig":"363"},{"size":3421,"mtime":1616854111101,"results":"469","hashOfConfig":"363"},{"size":2978,"mtime":1616655665889,"results":"470","hashOfConfig":"363"},{"size":4022,"mtime":1616863630410,"results":"471","hashOfConfig":"363"},{"size":4220,"mtime":1618040536713,"results":"472","hashOfConfig":"363"},{"size":3476,"mtime":1618040536710,"results":"473","hashOfConfig":"363"},{"size":939,"mtime":1615557694440,"results":"474","hashOfConfig":"363"},{"size":1169,"mtime":1616854111095,"results":"475","hashOfConfig":"363"},{"size":790,"mtime":1616854111091,"results":"476","hashOfConfig":"363"},{"size":1956,"mtime":1618040536712,"results":"477","hashOfConfig":"363"},{"size":2460,"mtime":1618040536715,"results":"478","hashOfConfig":"363"},{"size":1401,"mtime":1618040536708,"results":"479","hashOfConfig":"363"},{"size":2109,"mtime":1617731797341,"results":"480","hashOfConfig":"363"},{"size":1520,"mtime":1618040536709,"results":"481","hashOfConfig":"363"},{"size":1788,"mtime":1616854111101,"results":"482","hashOfConfig":"363"},{"size":1482,"mtime":1615557694454,"results":"483","hashOfConfig":"363"},{"size":481,"mtime":1616148216506,"results":"484","hashOfConfig":"363"},{"size":2705,"mtime":1616949428596,"results":"485","hashOfConfig":"363"},{"size":1537,"mtime":1616864260771,"results":"486","hashOfConfig":"363"},{"size":1450,"mtime":1616944261189,"results":"487","hashOfConfig":"363"},{"size":3199,"mtime":1616958038940,"results":"488","hashOfConfig":"363"},{"size":782,"mtime":1616854111103,"results":"489","hashOfConfig":"363"},{"size":323,"mtime":1615557694443,"results":"490","hashOfConfig":"363"},{"size":528,"mtime":1616854111098,"results":"491","hashOfConfig":"363"},{"size":845,"mtime":1618040536716,"results":"492","hashOfConfig":"363"},{"size":708,"mtime":1615557694451,"results":"493","hashOfConfig":"363"},{"size":1156,"mtime":1616958039033,"results":"494","hashOfConfig":"363"},{"size":3998,"mtime":1616944261182,"results":"495","hashOfConfig":"363"},{"size":586,"mtime":1616659069292,"results":"496","hashOfConfig":"363"},{"size":769,"mtime":1616659190153,"results":"497","hashOfConfig":"363"},{"size":2023,"mtime":1616958038946,"results":"498","hashOfConfig":"363"},{"size":2478,"mtime":1616958039005,"results":"499","hashOfConfig":"363"},{"size":206,"mtime":1616142859982,"results":"500","hashOfConfig":"363"},{"size":158,"mtime":1615197925601,"results":"501","hashOfConfig":"363"},{"size":216,"mtime":1616147580323,"results":"502","hashOfConfig":"363"},{"size":1668,"mtime":1616948688074,"results":"503","hashOfConfig":"363"},{"size":955,"mtime":1616944261186,"results":"504","hashOfConfig":"363"},{"size":655,"mtime":1616854111076,"results":"505","hashOfConfig":"354"},{"size":585,"mtime":1616854111074,"results":"506","hashOfConfig":"354"},{"size":613,"mtime":1616854111077,"results":"507","hashOfConfig":"354"},{"size":433,"mtime":1616854111078,"results":"508","hashOfConfig":"354"},{"size":796,"mtime":1616944261196,"results":"509","hashOfConfig":"354"},{"size":6285,"mtime":1626326008469,"results":"510","hashOfConfig":"354"},{"size":3006,"mtime":1626326058682,"results":"511","hashOfConfig":"354"},{"size":1223,"mtime":1626327837661,"results":"512","hashOfConfig":"354"},{"size":1032,"mtime":1626095508605,"results":"513","hashOfConfig":"354"},{"size":659,"mtime":1625998639698,"results":"514","hashOfConfig":"354"},{"size":494,"mtime":1626097269908,"results":"515","hashOfConfig":"354"},{"size":545,"mtime":1626094825620,"results":"516","hashOfConfig":"354"},{"size":1189,"mtime":1625999580435,"results":"517","hashOfConfig":"354"},{"size":708,"mtime":1626198449752,"results":"518","hashOfConfig":"354"},{"size":799,"mtime":1621454581513,"results":"519","hashOfConfig":"354"},{"size":300,"mtime":1616947603760,"results":"520","hashOfConfig":"354"},{"size":285,"mtime":1619875902462,"results":"521","hashOfConfig":"354"},{"size":807,"mtime":1619875902459,"results":"522","hashOfConfig":"523"},{"size":333,"mtime":1624093681487,"results":"524","hashOfConfig":"354"},{"size":564,"mtime":1616949379291,"results":"525","hashOfConfig":"354"},{"size":714,"mtime":1616958038944,"results":"526","hashOfConfig":"354"},{"size":585,"mtime":1616854111074,"results":"527","hashOfConfig":"363"},{"size":299,"mtime":1616948018850,"results":"528","hashOfConfig":"363"},{"size":655,"mtime":1616854111076,"results":"529","hashOfConfig":"363"},{"size":613,"mtime":1616854111077,"results":"530","hashOfConfig":"363"},{"size":564,"mtime":1616949379291,"results":"531","hashOfConfig":"363"},{"size":714,"mtime":1616958038944,"results":"532","hashOfConfig":"363"},{"size":658,"mtime":1616944261187,"results":"533","hashOfConfig":"363"},{"size":602,"mtime":1616944261175,"results":"534","hashOfConfig":"363"},{"size":1114,"mtime":1616944261177,"results":"535","hashOfConfig":"363"},{"size":279,"mtime":1616944261176,"results":"536","hashOfConfig":"363"},{"size":449,"mtime":1616944261178,"results":"537","hashOfConfig":"363"},{"size":433,"mtime":1616854111078,"results":"538","hashOfConfig":"363"},{"size":492,"mtime":1616944261190,"results":"539","hashOfConfig":"363"},{"size":1414,"mtime":1616958038942,"results":"540","hashOfConfig":"363"},{"size":5602,"mtime":1616958038949,"results":"541","hashOfConfig":"363"},{"size":285,"mtime":1617172024531,"results":"542","hashOfConfig":"363"},{"size":300,"mtime":1616947603760,"results":"543","hashOfConfig":"363"},{"size":796,"mtime":1616944261196,"results":"544","hashOfConfig":"363"},{"size":2502,"mtime":1616948482616,"results":"545","hashOfConfig":"363"},{"size":807,"mtime":1616947004682,"results":"546","hashOfConfig":"363"},{"size":1057,"mtime":1617886574759,"results":"547","hashOfConfig":"363"},{"size":1075,"mtime":1618043491187,"results":"548","hashOfConfig":"354"},{"size":2496,"mtime":1618046513852,"results":"549","hashOfConfig":"354"},{"size":2679,"mtime":1617894653792,"results":"550","hashOfConfig":"363"},{"size":3446,"mtime":1618040536704,"results":"551","hashOfConfig":"363"},{"size":2888,"mtime":1618040536702,"results":"552","hashOfConfig":"363"},{"size":2428,"mtime":1618040536698,"results":"553","hashOfConfig":"363"},{"size":1579,"mtime":1618040536696,"results":"554","hashOfConfig":"363"},{"size":1474,"mtime":1618040536701,"results":"555","hashOfConfig":"363"},{"size":1142,"mtime":1618040536704,"results":"556","hashOfConfig":"363"},{"size":682,"mtime":1618040536706,"results":"557","hashOfConfig":"363"},{"size":1454,"mtime":1618040536685,"results":"558","hashOfConfig":"363"},{"size":602,"mtime":1618040536680,"results":"559","hashOfConfig":"363"},{"size":3241,"mtime":1618040536690,"results":"560","hashOfConfig":"363"},{"size":1111,"mtime":1618040536683,"results":"561","hashOfConfig":"363"},{"size":3952,"mtime":1618040536692,"results":"562","hashOfConfig":"363"},{"size":3364,"mtime":1618040536689,"results":"563","hashOfConfig":"363"},{"size":279,"mtime":1618040536681,"results":"564","hashOfConfig":"363"},{"size":449,"mtime":1618040536684,"results":"565","hashOfConfig":"363"},{"size":1406,"mtime":1618040536695,"results":"566","hashOfConfig":"363"},{"size":2434,"mtime":1626327945323,"results":"567","hashOfConfig":"354"},{"size":2320,"mtime":1624273787196,"results":"568","hashOfConfig":"354"},{"size":2888,"mtime":1618040536702,"results":"569","hashOfConfig":"354"},{"size":3446,"mtime":1618040536704,"results":"570","hashOfConfig":"354"},{"size":1474,"mtime":1618040536701,"results":"571","hashOfConfig":"354"},{"size":602,"mtime":1618040536680,"results":"572","hashOfConfig":"354"},{"size":3241,"mtime":1618040536690,"results":"573","hashOfConfig":"354"},{"size":1109,"mtime":1619875902405,"results":"574","hashOfConfig":"354"},{"size":3952,"mtime":1618040536692,"results":"575","hashOfConfig":"354"},{"size":1496,"mtime":1621455161414,"results":"576","hashOfConfig":"354"},{"size":13334,"mtime":1627538708140,"results":"577","hashOfConfig":"354"},{"size":682,"mtime":1618040536706,"results":"578","hashOfConfig":"354"},{"size":1142,"mtime":1618040536704,"results":"579","hashOfConfig":"354"},{"size":1406,"mtime":1618040536695,"results":"580","hashOfConfig":"354"},{"size":449,"mtime":1618040536684,"results":"581","hashOfConfig":"354"},{"size":279,"mtime":1618040536681,"results":"582","hashOfConfig":"354"},{"size":624,"mtime":1618043472066,"results":"583","hashOfConfig":"354"},{"size":2874,"mtime":1627557730340,"results":"584","hashOfConfig":"354"},{"size":3887,"mtime":1626327046864,"results":"585","hashOfConfig":"354"},{"size":5302,"mtime":1627559983467,"results":"586","hashOfConfig":"354"},{"size":1242,"mtime":1623836740661,"results":"587","hashOfConfig":"354"},{"size":6608,"mtime":1627557674500,"results":"588","hashOfConfig":"354"},{"size":274,"mtime":1627553509295,"results":"589","hashOfConfig":"354"},{"size":154,"mtime":1619875902582,"results":"590","hashOfConfig":"523"},{"size":937,"mtime":1627552598252,"results":"591","hashOfConfig":"354"},{"size":3835,"mtime":1627557816476,"results":"592","hashOfConfig":"354"},{"size":3462,"mtime":1620825654081,"results":"593","hashOfConfig":"354"},{"size":987,"mtime":1623833748385,"results":"594","hashOfConfig":"354"},{"size":1534,"mtime":1627553609451,"results":"595","hashOfConfig":"354"},{"size":140,"mtime":1621673758211,"results":"596","hashOfConfig":"354"},{"size":2752,"mtime":1627553873863,"results":"597","hashOfConfig":"354"},{"size":2095,"mtime":1627478560555,"results":"598","hashOfConfig":"354"},{"size":553,"mtime":1620488943081,"results":"599","hashOfConfig":"354"},{"size":3711,"mtime":1620825392639,"results":"600","hashOfConfig":"354"},{"size":1848,"mtime":1620822330324,"results":"601","hashOfConfig":"354"},{"size":3739,"mtime":1620844021496,"results":"602","hashOfConfig":"354"},{"size":1861,"mtime":1620844201322,"results":"603","hashOfConfig":"354"},{"size":1857,"mtime":1627553788664,"results":"604","hashOfConfig":"354"},{"size":547,"mtime":1621011442088,"results":"605","hashOfConfig":"354"},{"size":5379,"mtime":1621011324122,"results":"606","hashOfConfig":"354"},{"size":1162,"mtime":1621011476318,"results":"607","hashOfConfig":"354"},{"size":1506,"mtime":1626328602493,"results":"608","hashOfConfig":"354"},{"size":865,"mtime":1626328549989,"results":"609","hashOfConfig":"354"},{"size":3097,"mtime":1627538708136,"results":"610","hashOfConfig":"354"},{"size":1090,"mtime":1624299271097,"results":"611","hashOfConfig":"354"},{"size":2332,"mtime":1621606734405,"results":"612","hashOfConfig":"354"},{"size":1625,"mtime":1621606679355,"results":"613","hashOfConfig":"354"},{"size":899,"mtime":1621158459957,"results":"614","hashOfConfig":"354"},{"size":373,"mtime":1621602142540,"results":"615","hashOfConfig":"354"},{"size":3489,"mtime":1625997057096,"results":"616","hashOfConfig":"354"},{"size":1108,"mtime":1625980234690,"results":"617","hashOfConfig":"354"},{"size":1062,"mtime":1625980393986,"results":"618","hashOfConfig":"354"},{"size":4390,"mtime":1624036239210,"results":"619","hashOfConfig":"354"},{"size":1383,"mtime":1624034849288,"results":"620","hashOfConfig":"354"},{"size":3415,"mtime":1624035931248,"results":"621","hashOfConfig":"354"},{"size":1925,"mtime":1624034681369,"results":"622","hashOfConfig":"354"},{"size":1521,"mtime":1626325946254,"results":"623","hashOfConfig":"354"},{"size":871,"mtime":1624038010166,"results":"624","hashOfConfig":"354"},{"size":1805,"mtime":1624112440893,"results":"625","hashOfConfig":"354"},{"size":698,"mtime":1624038592255,"results":"626","hashOfConfig":"354"},{"size":1445,"mtime":1624114767095,"results":"627","hashOfConfig":"354"},{"size":742,"mtime":1624113018979,"results":"628","hashOfConfig":"354"},{"size":4268,"mtime":1624118086401,"results":"629","hashOfConfig":"354"},{"size":1383,"mtime":1624117968135,"results":"630","hashOfConfig":"354"},{"size":3360,"mtime":1627543514478,"results":"631","hashOfConfig":"354"},{"size":914,"mtime":1624127348046,"results":"632","hashOfConfig":"354"},{"size":947,"mtime":1624273830452,"results":"633","hashOfConfig":"354"},{"size":13317,"mtime":1625997057093,"results":"634","hashOfConfig":"354"},{"size":4292,"mtime":1625762088717,"results":"635","hashOfConfig":"354"},{"size":5266,"mtime":1625746742574,"results":"636","hashOfConfig":"354"},{"size":1306,"mtime":1625746742575,"results":"637","hashOfConfig":"354"},{"size":2764,"mtime":1625746742571,"results":"638","hashOfConfig":"354"},{"size":5082,"mtime":1625746742573,"results":"639","hashOfConfig":"354"},{"size":2687,"mtime":1625315893584,"results":"640","hashOfConfig":"354"},{"size":4899,"mtime":1625315999970,"results":"641","hashOfConfig":"354"},{"size":4169,"mtime":1625316448119,"results":"642","hashOfConfig":"354"},{"size":841,"mtime":1625319873893,"results":"643","hashOfConfig":"354"},{"size":217,"mtime":1625211415495,"results":"644","hashOfConfig":"354"},{"size":244,"mtime":1625217630562,"results":"645","hashOfConfig":"354"},{"size":191,"mtime":1625753293808,"results":"646","hashOfConfig":"354"},{"size":218,"mtime":1625217648365,"results":"647","hashOfConfig":"354"},{"size":898,"mtime":1625217457503,"results":"648","hashOfConfig":"354"},{"size":1025,"mtime":1625214079600,"results":"649","hashOfConfig":"354"},{"size":369,"mtime":1625243844241,"results":"650","hashOfConfig":"354"},{"size":2178,"mtime":1625222875751,"results":"651","hashOfConfig":"354"},{"size":1090,"mtime":1625216571627,"results":"652","hashOfConfig":"354"},{"size":924,"mtime":1625219524337,"results":"653","hashOfConfig":"354"},{"size":3445,"mtime":1625318608642,"results":"654","hashOfConfig":"354"},{"size":2713,"mtime":1625218292740,"results":"655","hashOfConfig":"354"},{"size":924,"mtime":1625219594913,"results":"656","hashOfConfig":"354"},{"size":3773,"mtime":1625319272747,"results":"657","hashOfConfig":"354"},{"size":2713,"mtime":1625219364749,"results":"658","hashOfConfig":"354"},{"size":3346,"mtime":1625319155695,"results":"659","hashOfConfig":"354"},{"size":1762,"mtime":1625242971720,"results":"660","hashOfConfig":"354"},{"size":3350,"mtime":1625247105832,"results":"661","hashOfConfig":"354"},{"size":3324,"mtime":1625246813706,"results":"662","hashOfConfig":"354"},{"size":1760,"mtime":1625245161610,"results":"663","hashOfConfig":"354"},{"size":2720,"mtime":1625246762895,"results":"664","hashOfConfig":"354"},{"size":1980,"mtime":1625297809991,"results":"665","hashOfConfig":"354"},{"size":1090,"mtime":1625296269639,"results":"666","hashOfConfig":"354"},{"size":1483,"mtime":1625301317021,"results":"667","hashOfConfig":"354"},{"size":369,"mtime":1625297875627,"results":"668","hashOfConfig":"354"},{"size":5506,"mtime":1625319917532,"results":"669","hashOfConfig":"354"},{"size":2746,"mtime":1625298688769,"results":"670","hashOfConfig":"354"},{"size":249,"mtime":1625301316982,"results":"671","hashOfConfig":"354"},{"size":797,"mtime":1625301227281,"results":"672","hashOfConfig":"354"},{"size":2852,"mtime":1625305531594,"results":"673","hashOfConfig":"354"},{"size":2536,"mtime":1625305505576,"results":"674","hashOfConfig":"354"},{"size":4903,"mtime":1625305485048,"results":"675","hashOfConfig":"354"},{"size":2746,"mtime":1625301962521,"results":"676","hashOfConfig":"354"},{"size":2485,"mtime":1625388967354,"results":"677","hashOfConfig":"354"},{"size":1157,"mtime":1625388876289,"results":"678","hashOfConfig":"354"},{"size":2981,"mtime":1625944122390,"results":"679","hashOfConfig":"354"},{"size":8572,"mtime":1625997741954,"results":"680","hashOfConfig":"354"},{"size":1735,"mtime":1625759237781,"results":"681","hashOfConfig":"354"},{"size":824,"mtime":1625942113448,"results":"682","hashOfConfig":"354"},{"size":1595,"mtime":1625942348603,"results":"683","hashOfConfig":"354"},{"size":909,"mtime":1625942323661,"results":"684","hashOfConfig":"354"},{"size":3655,"mtime":1625944079549,"results":"685","hashOfConfig":"354"},{"size":2620,"mtime":1625942334014,"results":"686","hashOfConfig":"354"},{"size":2137,"mtime":1625846839933,"results":"687","hashOfConfig":"354"},{"size":1090,"mtime":1625846537933,"results":"688","hashOfConfig":"354"},{"size":4301,"mtime":1625942523438,"results":"689","hashOfConfig":"354"},{"size":897,"mtime":1625847421023,"results":"690","hashOfConfig":"354"},{"size":1972,"mtime":1625997057099,"results":"691","hashOfConfig":"354"},{"size":816,"mtime":1625983363148,"results":"692","hashOfConfig":"354"},{"size":1837,"mtime":1625982823054,"results":"693","hashOfConfig":"354"},{"size":1090,"mtime":1625980673998,"results":"694","hashOfConfig":"354"},{"size":6040,"mtime":1625989166902,"results":"695","hashOfConfig":"354"},{"size":2261,"mtime":1625988958464,"results":"696","hashOfConfig":"354"},{"size":938,"mtime":1625989581474,"results":"697","hashOfConfig":"354"},{"size":2402,"mtime":1626328644178,"results":"698","hashOfConfig":"354"},{"size":4316,"mtime":1626096679292,"results":"699","hashOfConfig":"354"},{"size":3721,"mtime":1626327670347,"results":"700","hashOfConfig":"354"},{"size":1829,"mtime":1626201447102,"results":"701","hashOfConfig":"354"},{"size":426,"mtime":1626325911781,"results":"702","hashOfConfig":"354"},{"size":1050,"mtime":1627538708148,"results":"703","hashOfConfig":"354"},{"size":4292,"mtime":1627538708143,"results":"704","hashOfConfig":"354"},{"size":941,"mtime":1627557929365,"results":"705","hashOfConfig":"354"},{"size":3810,"mtime":1627559831012,"results":"706","hashOfConfig":"354"},{"size":1764,"mtime":1627558931686,"results":"707","hashOfConfig":"354"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},"1dhutph",{"filePath":"711","messages":"712","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"710"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"710"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"710"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},"1u7ckll",{"filePath":"732","messages":"733","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"731"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"742","messages":"743","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"731"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"731"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"731"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772","usedDeprecatedRules":"731"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"731"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"784","usedDeprecatedRules":"731"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"789"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"731"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"731"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"802","usedDeprecatedRules":"710"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808","usedDeprecatedRules":"710"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"710"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"710"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"710"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"710"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"784","usedDeprecatedRules":"710"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"829","usedDeprecatedRules":"710"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832","usedDeprecatedRules":"710"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"835","usedDeprecatedRules":"710"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"710"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843","usedDeprecatedRules":"710"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"848","usedDeprecatedRules":"710"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851","usedDeprecatedRules":"710"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"710"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"710"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"710"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"710"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889","usedDeprecatedRules":"710"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"892","usedDeprecatedRules":"710"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"895"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"710"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"907"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"930"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"710"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"710"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"943","usedDeprecatedRules":"710"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948","usedDeprecatedRules":"710"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957","usedDeprecatedRules":"710"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960","usedDeprecatedRules":"710"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"963","messages":"964","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"731"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"731"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"971","usedDeprecatedRules":"731"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"974","usedDeprecatedRules":"731"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"731"},{"filePath":"977","messages":"978","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"979","messages":"980","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843","usedDeprecatedRules":"731"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"731"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"991","messages":"992","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1009","messages":"1010","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"731"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1019","usedDeprecatedRules":"731"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1022","usedDeprecatedRules":"731"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039","usedDeprecatedRules":"731"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1050","usedDeprecatedRules":"731"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1061","usedDeprecatedRules":"710"},{"filePath":"1062","messages":"1063","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1064","messages":"1065","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1070","messages":"1071","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1072","usedDeprecatedRules":"710"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1097"},"18dffzi",{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1061","usedDeprecatedRules":"731"},{"filePath":"1110","messages":"1111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1112","messages":"1113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1130","messages":"1131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1134","usedDeprecatedRules":"731"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"731"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149","usedDeprecatedRules":"710"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1152","usedDeprecatedRules":"710"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1179","messages":"1180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1191","usedDeprecatedRules":"710"},{"filePath":"1192","messages":"1193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1194","usedDeprecatedRules":"710"},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1197","usedDeprecatedRules":"710"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"930"},{"filePath":"1202","messages":"1203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"930"},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"930"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1208","usedDeprecatedRules":"930"},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1211","usedDeprecatedRules":"710"},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214","usedDeprecatedRules":"710"},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"930"},{"filePath":"1221","messages":"1222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"930"},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"930"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1229"},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1232","usedDeprecatedRules":"710"},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1235"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1240"},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1245"},{"filePath":"1246","messages":"1247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1248","messages":"1249","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1250"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253","usedDeprecatedRules":"710"},{"filePath":"1254","messages":"1255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1260","messages":"1261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1262","messages":"1263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"710"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"710"},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1272","messages":"1273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1274","usedDeprecatedRules":"710"},{"filePath":"1275","messages":"1276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1283","usedDeprecatedRules":"710"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288","usedDeprecatedRules":"710"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"710"},{"filePath":"1294","messages":"1295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1296","messages":"1297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1298","usedDeprecatedRules":"710"},{"filePath":"1299","messages":"1300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1301","usedDeprecatedRules":"710"},{"filePath":"1302","messages":"1303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1304","messages":"1305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1306","messages":"1307","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1308","usedDeprecatedRules":"710"},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1311","usedDeprecatedRules":"710"},{"filePath":"1312","messages":"1313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1314","usedDeprecatedRules":"710"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1317","usedDeprecatedRules":"710"},{"filePath":"1318","messages":"1319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1320","messages":"1321","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1322","usedDeprecatedRules":"710"},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1325","messages":"1326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1327","messages":"1328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1333","messages":"1334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1335","usedDeprecatedRules":"710"},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1340","usedDeprecatedRules":"710"},{"filePath":"1341","messages":"1342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1347","messages":"1348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1349","messages":"1350","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"710"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1356","usedDeprecatedRules":"710"},{"filePath":"1357","messages":"1358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1359","messages":"1360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1361","messages":"1362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1363","usedDeprecatedRules":"710"},{"filePath":"1364","messages":"1365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1366","messages":"1367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1368","messages":"1369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1370","usedDeprecatedRules":"710"},{"filePath":"1371","messages":"1372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1373","messages":"1374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1375","usedDeprecatedRules":"710"},{"filePath":"1376","messages":"1377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"710"},{"filePath":"1381","messages":"1382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1383","messages":"1384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1385","messages":"1386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1387","messages":"1388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1389","messages":"1390","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1391","usedDeprecatedRules":"710"},{"filePath":"1392","messages":"1393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1394","messages":"1395","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"710"},{"filePath":"1397","messages":"1398","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1399","usedDeprecatedRules":"710"},{"filePath":"1400","messages":"1401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1402","messages":"1403","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1404","usedDeprecatedRules":"710"},{"filePath":"1405","messages":"1406","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1407","usedDeprecatedRules":"710"},{"filePath":"1408","messages":"1409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1410","messages":"1411","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1412","usedDeprecatedRules":"710"},{"filePath":"1413","messages":"1414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1415","messages":"1416","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1417","usedDeprecatedRules":"710"},{"filePath":"1418","messages":"1419","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1420","usedDeprecatedRules":"710"},{"filePath":"1421","messages":"1422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1423","messages":"1424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1425","messages":"1426","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1427","usedDeprecatedRules":"710"},{"filePath":"1428","messages":"1429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1430","messages":"1431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1432","usedDeprecatedRules":"710"},{"filePath":"1433","messages":"1434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1435","messages":"1436","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1437","usedDeprecatedRules":"710"},{"filePath":"1438","messages":"1439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1440","messages":"1441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1442","messages":"1443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1446","usedDeprecatedRules":"710"},{"filePath":"1447","messages":"1448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1449","messages":"1450","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1451","usedDeprecatedRules":"710"},{"filePath":"1452","messages":"1453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1454","messages":"1455","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1456","usedDeprecatedRules":"710"},{"filePath":"1457","messages":"1458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1459","messages":"1460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1461","messages":"1462","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1463","usedDeprecatedRules":"710"},{"filePath":"1464","messages":"1465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1466","messages":"1467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1468","messages":"1469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1470","messages":"1471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1472","messages":"1473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1474","messages":"1475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1476","usedDeprecatedRules":"710"},{"filePath":"1477","messages":"1478","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1479","usedDeprecatedRules":"710"},{"filePath":"1480","messages":"1481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1482","messages":"1483","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1484","usedDeprecatedRules":"710"},{"filePath":"1485","messages":"1486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1487","messages":"1488","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1489","usedDeprecatedRules":"710"},{"filePath":"1490","messages":"1491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1492","messages":"1493","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1494","usedDeprecatedRules":"710"},{"filePath":"1495","messages":"1496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1497","messages":"1498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1499","usedDeprecatedRules":"710"},{"filePath":"1500","messages":"1501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1502","messages":"1503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1504","usedDeprecatedRules":"710"},{"filePath":"1505","messages":"1506","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1507","usedDeprecatedRules":"710"},{"filePath":"1508","messages":"1509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1510","messages":"1511","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512","usedDeprecatedRules":"710"},{"filePath":"1513","messages":"1514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1515","messages":"1516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1517","messages":"1518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1519","usedDeprecatedRules":"710"},{"filePath":"1520","messages":"1521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"710"},{"filePath":"1522","messages":"1523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1524","usedDeprecatedRules":"710"},{"filePath":"1525","messages":"1526","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1527"},{"filePath":"1528","messages":"1529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\index.js",[],["1530","1531"],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\App.js",["1532"],"import \"./App.css\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.page\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectCurrentUserFirstName,\r\n} from \"./redux/user/user.selectors\";\r\nimport AllProjects from \"./pages/all-projects/all-projects\";\r\nimport Project from \"./pages/project/project.page\";\r\nimport Task from \"./pages/task/task.page\";\r\n// import Step from './pages/step/step.page'\r\nimport PurchaseOrder from \"./pages/task-purchase-orders/task-purchase-orders.page\";\r\nimport IndividualPurchaseOrder from \"./pages/individual-purchase-order/individual-purchase-order.page\";\r\nimport projectPurchaseOrders from \"./pages/project-purchase-orders/project-purchase-orders\";\r\nimport ChangeOrder from \"./pages/task-change-orders/task-change-orders.page\";\r\nimport IndividualChangeOrder from \"./pages/individual-change-order/individual-change-order.page\";\r\nimport projectSchedule from \"./pages/project-schedule/project-schedule\";\r\nimport ManageTeam from \"./components/manage-team/manage-team.component\";\r\nimport ProjectChangeOrders from \"./pages/project-change-orders/project-change-orders.page\";\r\nimport projectPunchList from \"./pages/project-punch-list/project-punch-list\";\r\nimport createTask from \"./pages/create-task/create-task\";\r\nimport createPO from \"./pages/create-PO/create-PO\";\r\nimport CostBook from \"./pages/cost-book/cost-book.page\";\r\nimport costCode from \"./pages/cost-code/cost-code.page\";\r\nimport CostBookItem from \"./pages/cost-book-item/cost-book-item.page\";\r\nimport createCostBookCategoryPage from \"./pages/create-cost-book-category/create-cost-book-category.page\";\r\nimport createCostBookCostcodePage from \"./pages/create-cost-book-costcode/create-cost-book-costcode.page\";\r\nimport createCostCodeItem from \"./pages/create-cost-code-item/create-cost-code-item\";\r\nimport Organisation from \"./pages/organisation/organisation.page\";\r\nimport createOrganisationPage from \"./pages/create-organisation/create-organisation.page\";\r\nimport hamburgerPage from \"./pages/hamburger/hamburger.page\";\r\nimport CreateProject from \"./pages/create-project/create-project.page\";\r\nimport createProjectScratchPage from \"./pages/create-project-scratch/create-project-scratch.page\";\r\nimport CreateCO from \"./pages/create-CO/create-CO\";\r\nimport Invite from \"./pages/invite/invite\";\r\n\r\nfunction App(props) {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route\r\n          path=\"/login\"\r\n          exact\r\n          render={() =>\r\n            props.currentUser ? (\r\n              <Redirect to=\"/organisations\" />\r\n            ) : (\r\n              <SignInAndSignUpPage />\r\n            )\r\n          }\r\n        />\r\n        <Route path=\"/all-projects/:orgId\" exact component={AllProjects} />\r\n        <Route path=\"/createProject/:orgId\" exact component={CreateProject} />\r\n        <Route\r\n          path=\"/createProject/FromScratch/:orgId\"\r\n          exact\r\n          component={createProjectScratchPage}\r\n        />\r\n        <Route path=\"/project/:projectId\" exact component={Project} />\r\n        <Route path=\"/project/:projectId/invite\" exact component={Invite} />\r\n        <Route path=\"/task/:taskId\" exact component={Task} />\r\n        {/* <Route path='/step/:stepId' exact component={Step} /> */}\r\n        <Route path=\"/purchaseOrders/:taskId\" exact component={PurchaseOrder} />\r\n        <Route path=\"/changeOrders/:taskId\" exact component={ChangeOrder} />\r\n        <Route\r\n          path=\"/changeOrder/:COid\"\r\n          exact\r\n          component={IndividualChangeOrder}\r\n        />\r\n        <Route\r\n          path=\"/purchaseOrder/:POid\"\r\n          exact\r\n          component={IndividualPurchaseOrder}\r\n        />\r\n        <Route\r\n          path=\"/projectPurchaseOrders/:projectId\"\r\n          exact\r\n          component={projectPurchaseOrders}\r\n        />\r\n        <Route path=\"/schedule/:projectId\" exact component={projectSchedule} />\r\n        <Route path=\"/ManageTeam\" exact component={ManageTeam} />\r\n        <Route\r\n          path=\"/projectChangeOrders/:projectId\"\r\n          exact\r\n          component={ProjectChangeOrders}\r\n        />\r\n        <Route\r\n          path=\"/punchList/:projectId\"\r\n          exact\r\n          component={projectPunchList}\r\n        />\r\n        <Route path=\"/createTask/:projectId\" exact component={createTask} />\r\n        <Route path=\"/costbook\" exact component={CostBook} />\r\n        <Route\r\n          path=\"/cost-code/:categoryId/:costCodeId\"\r\n          exact\r\n          component={costCode}\r\n        />\r\n        <Route path=\"/createPO/:projectId\" exact component={createPO} />\r\n        <Route\r\n          path=\"/cost-item/:categoryId/:costCodeId/:itemId\"\r\n          exact\r\n          component={CostBookItem}\r\n        />\r\n        <Route\r\n          path=\"/costbook/createcategory\"\r\n          exact\r\n          component={createCostBookCategoryPage}\r\n        />\r\n        <Route\r\n          path=\"/costbook/createcostcode\"\r\n          exact\r\n          component={createCostBookCostcodePage}\r\n        />\r\n        <Route\r\n          path=\"/costbook/:categoryId/:costCodeId/createItem\"\r\n          exact\r\n          component={createCostCodeItem}\r\n        />\r\n        <Route path=\"/organisations\" exact component={Organisation} />\r\n        <Route\r\n          path=\"/createOrganisation\"\r\n          exact\r\n          component={createOrganisationPage}\r\n        />\r\n        <Route path=\"/createCO/:projectId\" exact component={CreateCO} />\r\n\r\n        <Route path=\"/nav\" exact component={hamburgerPage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUserFirstName,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\store.js",["1533"],"import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './root-reducer';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistStore };\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\root-saga.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\root-reducer.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\sign-up-form\\sign-up-form.component.jsx",["1534"],"import React from \"react\";\r\nimport {signUpStart} from \"../../redux/user/user.actions\";\r\nimport {selectSignInSignUpMessage, selectSignUpFail, selectSignUpStart, selectSignUpSuccessful} from \"../../redux/user/user.selectors\";\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SignUpForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      resp: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        username: \"\",\r\n      },\r\n      confirmPassword: \"\",\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"confirmPassword\") {\r\n      this.setState({ confirmPassword: value });\r\n    } \r\n    else {\r\n      let response = this.state.resp;\r\n      response[name] = value;\r\n\r\n      this.setState({resp: response});\r\n    }\r\n  };\r\n\r\n  handleOnSubmit = (e) => {\r\n      e.preventDefault()\r\n\r\n      if (this.state.resp.password !== this.state.confirmPassword){\r\n        alert('Password and Confirm Password don\\'t match!')\r\n      }\r\n      else{\r\n        this.props.signUpStart(this.state.resp)\r\n        this.setState({\r\n          resp: {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            permission: '',\r\n          },\r\n          confirmPassword: '',\r\n        });\r\n      }\r\n      const {signUpSuccessful, history} = this.props\r\n      if(signUpSuccessful){\r\n        history.push('/login')\r\n      } \r\n\r\n      \r\n\r\n  }\r\n\r\n  render() {\r\n    const {message} = this.props\r\n    return (\r\n      <div style={{ margin: \"10px\" }}>\r\n        {\r\n          message ? <div>{message}</div> : null\r\n        }\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n          onSubmit={this.handleOnSubmit}>\r\n          <div>\r\n            <label htmlFor=\"firstName\"> First Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.resp.firstName}\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"lastName\"> Last Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.resp.lastName}\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"email\"> Email: </label>\r\n            <input\r\n              type=\"email\"\r\n              value={this.state.resp.email}\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"phoneNumber\"> Phone Number: </label>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.resp.phoneNumber}\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* <div>\r\n            <label htmlFor=\"permission\"> Role: </label>\r\n            <select \r\n                value={this.state.resp.permission} \r\n                name=\"permission\" \r\n                id=\"permission\"\r\n                onChange={(e) => this.handleOnChange(e)}\r\n                required>\r\n              <option value=\"\">Please choose an option</option>\r\n              <option value=\"PROJECT_OWNER\">Project Owner</option>\r\n              <option value=\"TRADE_PARTNER\">Trade Partner</option>\r\n              <option value=\"TASK_OWNER\">Task Owner</option>\r\n            </select>\r\n          </div> */}\r\n\r\n          <div>\r\n            <label htmlFor=\"username\"> Username: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.resp.username}\r\n              name=\"username\"\r\n              id=\"username\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"password\"> Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.resp.password}\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"confirmPassword\"> Confirm Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.confirmPassword}\r\n              name=\"confirmPassword\"\r\n              id=\"confirmPassword\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <input type=\"submit\" value=\"Submit\"/>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  signUpStart: selectSignUpStart,\r\n  signUpSuccessful: selectSignUpSuccessful,\r\n  signUpFail: selectSignUpFail,\r\n  message: selectSignInSignUpMessage\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (data) => dispatch(signUpStart(data)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUpForm);\r\n\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\sign-in-and-sign-up\\sign-in-and-sign-up.page.jsx",["1535"],"import React from 'react';\r\nimport SignInForm from '../../components/sign-in-form/sign-in-form.component';\r\nimport SignUpForm from '../../components/sign-up-form/sign-up-form.component';\r\n\r\nclass SignInAndSignUpPage extends React.Component{\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>SIGN UP FORM</h1>\r\n                <SignUpForm />\r\n                <h1>SIGN IN FORM</h1>\r\n                <SignInForm />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default SignInAndSignUpPage;","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\index.js",[],["1536","1537"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\App.js",["1538"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\store.js",["1539"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\root-saga.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\root-reducer.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\sign-in-and-sign-up\\sign-in-and-sign-up.page.jsx",["1540"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\user\\user.reducer.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\user\\user.sagas.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\sign-up-form\\sign-up-form.component.jsx",["1541"],"import React from \"react\";\r\nimport {signUpStart} from \"../../redux/user/user.actions\";\r\nimport {selectSignInSignUpMessage, selectSignUpFail, selectSignUpStart, selectSignUpSuccessful} from \"../../redux/user/user.selectors\";\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SignUpForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      resp: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        role: \"\",\r\n        username: \"\",\r\n      },\r\n      confirmPassword: \"\",\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"confirmPassword\") {\r\n      this.setState({ confirmPassword: value });\r\n    } \r\n    else {\r\n      let response = this.state.resp;\r\n      response[name] = value;\r\n\r\n      this.setState({resp: response});\r\n    }\r\n  };\r\n\r\n  handleOnSubmit = (e) => {\r\n      e.preventDefault()\r\n\r\n      if (this.state.resp.password !== this.state.confirmPassword){\r\n        alert('Password and Confirm Password don\\'t match!')\r\n      }\r\n      else{\r\n        this.props.signUpStart(this.state.resp)\r\n        this.setState({\r\n          resp: {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            role: 'STUDENT',\r\n          },\r\n          confirmPassword: '',\r\n        });\r\n      }\r\n      const {signUpSuccessful, history} = this.props\r\n      if(signUpSuccessful){\r\n        history.push('/login')\r\n      } \r\n\r\n      \r\n\r\n  }\r\n\r\n  render() {\r\n    const {message} = this.props\r\n    return (\r\n      <div style={{ margin: \"10px\" }}>\r\n        {\r\n          message ? <div>{message}</div> : null\r\n        }\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n          onSubmit={this.handleOnSubmit}>\r\n          <div>\r\n            <label htmlFor=\"firstName\"> First Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.resp.firstName}\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"lastName\"> Last Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.resp.lastName}\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"email\"> Email: </label>\r\n            <input\r\n              type=\"email\"\r\n              value={this.state.resp.email}\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"phoneNumber\"> Phone Number: </label>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.resp.phoneNumber}\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"role\"> Role: </label>\r\n            <select \r\n                value={this.state.resp.role} \r\n                name=\"role\" \r\n                id=\"role\"\r\n                onChange={(e) => this.handleOnChange(e)}\r\n                required>\r\n              <option value=\"\">Please choose an option</option>\r\n              <option value=\"PROJECT_OWNER\">Project Owner</option>\r\n              <option value=\"TRADE_PARTNER\">Trade Partner</option>\r\n              <option value=\"TASK_OWNER\">Task Owner</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"username\"> Username: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.resp.username}\r\n              name=\"username\"\r\n              id=\"username\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"password\"> Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.resp.password}\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"confirmPassword\"> Confirm Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.confirmPassword}\r\n              name=\"confirmPassword\"\r\n              id=\"confirmPassword\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <input type=\"submit\" value=\"Submit\"/>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  signUpStart: selectSignUpStart,\r\n  signUpSuccessful: selectSignUpSuccessful,\r\n  signUpFail: selectSignUpFail,\r\n  message: selectSignInSignUpMessage\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (data) => dispatch(signUpStart(data)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUpForm);\r\n\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\user\\user.types.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\user\\user.selectors.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\sign-in-form\\sign-in-form.component.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.actions.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.sagas.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.selectors.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.types.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.reducer.js",["1542","1543"],"import { ProjectActionTypes } from \"./all-projects.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  createProjectStart: false,\r\n  createProjectSucessful: false,\r\n  createProjectFail: false,\r\n  fetchProjectStart: false,\r\n  fetchProjectSuccess: false,\r\n  fetchProjectFailure: false,\r\n  errorMessage: undefined,\r\n  message: null,\r\n  projects: null,\r\n  isProjectTemplateBeingCreated: null,\r\n\r\n};\r\n\r\nconst projectReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ProjectActionTypes.CREATE_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        createProjectStart: true,\r\n        createProjectFail: false,\r\n        createProjectSuccesful: false,\r\n        errorMessage: null,\r\n      };\r\n    case ProjectActionTypes.CREATE_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createProjectStart: false,\r\n        createProjectSuccessful: true,\r\n        message: \"PROJECT CREATED SUCCESSFULLY!\",\r\n      };\r\n   \r\n    case ProjectActionTypes.CREATE_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        createProjectStart: false,\r\n        createProjectFail: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    case ProjectActionTypes.FETCH_PROJECTS_START:\r\n      return{\r\n        ...state,\r\n        fetchProjectStart: true\r\n      }\r\n      case ProjectActionTypes.FETCH_PROJECTS_SUCCESS:\r\n        return{\r\n          ...state,\r\n          fetchProjectStart: false,\r\n          fetchProjectSuccess: true,\r\n          projects: action.payload\r\n        }\r\n      case ProjectActionTypes.FETCH_PROJECTS_START:\r\n          return{\r\n            ...state,\r\n            fetchProjectStart: false,\r\n            fetchProjectFailure: true,\r\n            errorMessage: action.payload\r\n          }\r\n      case ProjectActionTypes.DELETE_PROJECT:\r\n        let updatedProjects = state.projects.filter(project => project._id != action.payload)\r\n        return{\r\n          ...state,\r\n          projects: updatedProjects\r\n        }\r\n      case ProjectActionTypes.CREATE_PROJECT_TEMPLATE_START:\r\n        return{\r\n          ...state,\r\n          isProjectTemplateBeingCreated: true,\r\n        }\r\n      case ProjectActionTypes.CREATE_PROJECT_TEMPLATE_SUCCESS:\r\n        return{\r\n          ...state,\r\n          isProjectTemplateBeingCreated: false,\r\n        }\r\n      case ProjectActionTypes.CREATE_PROJECT_TEMPLATE_FAILURE:\r\n        return{\r\n          ...state,\r\n          isProjectTemplateBeingCreated: false,\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\all-projects\\all-projects.js",["1544"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport ProjectList from \"../../components/projects-list/projects-list.component\";\r\nimport { createProjectStart, fetchProjectsStart } from \"../../redux/all-projects/all-projects.actions\";\r\nimport { selectUserProjects } from \"../../redux/all-projects/all-projects.selectors\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\r\nimport CreateProjectForm from \"../../components/create-project-form/create-project-form.component\"\r\nimport { ProjectNav } from \"../../components/project-nav/project-nav.component\";\r\nimport ProjectListContainer from \"../../components/projects-list/projects-list.container\";\r\nimport { GenericButton } from \"../../components/generic-button/generic-button.styles\";\r\n\r\n\r\n class AllProjects extends Component {\r\n     componentDidMount(){\r\n         const {fetchProjects} = this.props;\r\n        fetchProjects()\r\n     }\r\n\r\n     signOut = () => {\r\n        const { history, signOut } = this.props;\r\n        signOut();\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"user\");\r\n        history.push(\"/login\");\r\n      };\r\n    render() {\r\n        const {projects} = this.props\r\n        \r\n        return (\r\n            <div>\r\n                <ProjectNav title = \"Projects\" />\r\n                <ProjectListContainer projects={projects}/>\r\n                <CreateProjectForm/>\r\n                <GenericButton onClick={this.signOut}>Sign out</GenericButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    name: selectCurrentUserFirstName,\r\n    projects: selectUserProjects\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    signOut: () => dispatch(signOut()),\r\n    createProject: (projectDetails) => dispatch(createProjectStart(projectDetails)),\r\n    fetchProjects : () => dispatch(fetchProjectsStart())\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(AllProjects);\r\n\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\projects-list\\projects-list.component.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\project\\project.page.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.reducer.js",["1545"],"import { TaskActionTypes } from \"./all-tasks.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  createTaskStart: false,\r\n  createTaskSucessful: false,\r\n  createTaskFail: false,\r\n  fetchTaskStart: false,\r\n  fetchTaskSuccess: false,\r\n  fetchTaskFailure: false,\r\n  errorMessage: undefined,\r\n  message: null,\r\n  tasks: null\r\n};\r\n\r\nconst taskReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case TaskActionTypes.CREATE_TASK_START:\r\n      return {\r\n        ...state,\r\n        createTaskStart: true,\r\n        createTaskFail: false,\r\n        createTaskSuccesful: false,\r\n        errorMessage: null,\r\n      };\r\n    case TaskActionTypes.CREATE_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createTaskStart: false,\r\n        createTaskSuccessful: true,\r\n        message: \"TASK CREATED SUCCESSFULLY!\",\r\n      };\r\n   \r\n    case TaskActionTypes.CREATE_TASK_FAILURE:\r\n      return {\r\n        ...state,\r\n        createTaskStart: false,\r\n        createTaskFail: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    case TaskActionTypes.FETCH_TASKS_START:\r\n      return{\r\n        ...state,\r\n        fetchTaskStart: true\r\n      }\r\n      case TaskActionTypes.FETCH_TASKS_SUCCESS:\r\n        return{\r\n          ...state,\r\n          fetchTaskStart: false,\r\n          fetchTaskSuccess: true,\r\n          tasks: action.payload\r\n        }\r\n      case TaskActionTypes.FETCH_TASKS_START:\r\n          return{\r\n            ...state,\r\n            fetchTaskStart: false,\r\n            fetchTaskFailure: true,\r\n            errorMessage: action.payload\r\n          }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.types.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.sagas.js",["1546","1547"],"import { all, call, put, takeLatest, select, delay} from \"redux-saga/effects\";\r\nimport { selectUserId } from \"../user/user.selectors\";\r\nimport { createTaskSucessful, createTaskFail, fetchTasksStart, fetchTasksFailure, fetchTasksSuccess } from \"./all-tasks.actions\";\r\nimport { TaskActionTypes } from \"./all-tasks.types\";\r\nimport {selectCurrentProjectId, selectCurrentProjectTasks} from '../current-project/current-project.selectors'\r\nimport { fetchCurrentProjectStart } from \"../current-project/current-project.actions\";\r\n\r\nexport function* createTask({payload}){\r\n  try {\r\n    let data = payload;\r\n    let userId = yield select(selectUserId)\r\n    let projectTasks = yield select(selectCurrentProjectTasks)\r\n    let projectId = yield select(selectCurrentProjectId)\r\n    data['userId'] = userId\r\n    let resp = yield fetch(`http://127.0.0.1:5000/create-task/${data.projectId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    resp = yield resp.json()\r\n    console.log(resp)\r\n    if(resp.done){\r\n        yield put(createTaskSucessful(resp.message));\r\n    }else{\r\n      yield put(createTaskFail(resp.error))\r\n    }\r\n    yield delay(500)\r\n    yield put(fetchCurrentProjectStart(projectId))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function* fetchTasks({payload}){\r\n  try {\r\n    let tasks = yield fetch(`http://127.0.0.1:5000/project/${payload}/task`)\r\n    tasks = yield tasks.json()\r\n\r\n    tasks.done\r\n    ? yield put(fetchTasksSuccess(tasks.tasks.tasks))\r\n    : yield put(fetchTasksFailure('Error.'))\r\n  } catch (error) {\r\n    fetchTasksFailure(error)\r\n  }\r\n}\r\n\r\n\r\nexport function* onTaskCreateStart(){\r\n  yield takeLatest(TaskActionTypes.CREATE_TASK_START, createTask)\r\n}\r\n\r\nexport function* onTaskFetchStart(){\r\n  yield takeLatest(TaskActionTypes.FETCH_TASKS_START, fetchTasks)\r\n}\r\n\r\nexport function* taskSagas() {\r\n  yield all([\r\n    call(onTaskCreateStart),\r\n    call(onTaskFetchStart)\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.actions.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.selectors.js",[],["1548","1549"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-project-form\\create-project-form.component.jsx",["1550"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { createProjectStart, createProjectTemplateStart, fetchProjectsStart} from \"../../redux/all-projects/all-projects.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\r\n\r\n\r\nclass CreateProjectForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectDetails: {\r\n        projectName: \"\",\r\n        projectStatus: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n \r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let project = this.state.projectDetails;\r\n    project[name] = value;\r\n\r\n    this.setState({ projectDetails: project });\r\n  };\r\n\r\n  createProject = (e) => {\r\n    e.preventDefault();\r\n    let projectDetails = this.state.projectDetails;\r\n    this.props.createProject(projectDetails);\r\n  };\r\n\r\n  createProjectTemplate = (e) => {\r\n    e.preventDefault()\r\n    let projectDetails = this.state.projectDetails;\r\n    console.log(projectDetails)\r\n    this.props.createProjectTemplate(projectDetails)\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { name, projects } = this.props;\r\n    \r\n    return (\r\n      <div style={{padding:\"10px\"}}>\r\n        <h1>Hi {name}!</h1>\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n        >\r\n          <div>\r\n            <label htmlFor=\"projectName\"> Project Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.projectDetails.projectName}\r\n              name=\"projectName\"\r\n              id=\"projectName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"projectStatus\"> Project Status: </label>\r\n            <select\r\n              value={this.state.projectDetails.projectStatus}\r\n              name=\"projectStatus\"\r\n              id=\"projectStatus\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            >\r\n              <option value=\"\">Please choose an option</option>\r\n              <option value=\"ACTIVE\">Active</option>\r\n              <option value=\"PLANNED\">Planned</option>\r\n              <option value=\"COMPLETED\">Completed</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <button onClick={this.createProject}>Create Project</button>\r\n            <button onClick={this.createProjectTemplate}>Create Project Templates</button>\r\n          </div>\r\n        </form>\r\n\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  name: selectCurrentUserFirstName\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createProject: (projectDetails) => dispatch(createProjectStart(projectDetails)),\r\n  createProjectTemplate: (projectDetails) => dispatch(createProjectTemplateStart(projectDetails)),\r\n  fetchProjects: () => dispatch(fetchProjectsStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProjectForm);\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\tasks-list\\tasks-list.component.jsx",["1551"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport TaskItem from \"../task-item/task-item.component\";\r\n\r\n\r\nexport default function TaskList({tasks}) {\r\n    console.log(tasks);\r\n    if(!tasks){\r\n      tasks = []\r\n    }\r\n  return (\r\n    <div>\r\n        {tasks.map(({ taskName, taskStartDate, taskEndDate, completedSteps, totalSteps, completionPercentage, _id, isTaskDone },index) => {\r\n          const taskDetails = {taskName, taskStartDate, taskEndDate, completedSteps, totalSteps, completionPercentage, _id, isTaskDone, index};\r\n          return (  \r\n            <div  key={_id}>\r\n              <TaskItem taskDetails= {taskDetails}/>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-task-form\\create-task-form.component.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\user\\user.selectors.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\all-projects\\all-projects.js",["1552","1553","1554","1555","1556","1557","1558","1559","1560"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport ProjectList from \"../../components/projects-list/projects-list.component\";\r\nimport {\r\n  createProjectStart,\r\n  fetchProjectsStart,\r\n} from \"../../redux/all-projects/all-projects.actions\";\r\nimport {\r\n  selectAreProjectsFetching,\r\n  selectProjectsFetched,\r\n  selectUserProjects,\r\n} from \"../../redux/all-projects/all-projects.selectors\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\r\nimport CreateProjectForm from \"../../components/create-project-form/create-project-form.component\";\r\nimport ProjectsNav from \"../../components/projects-nav/projects-nav.component\";\r\nimport ProjectListContainer from \"../../components/projects-list/projects-list.container\";\r\nimport { GenericButton } from \"../../components/generic-button/generic-button.styles\";\r\nimport AddUserForm from \"../../components/adduser-form/adduser-form.component\";\r\nimport SearchBar from \"../../components/search-bar/search-bar.component\";\r\nimport NoResult from \"../../components/no-result/no-result.component\";\r\nimport { Overlay } from \"../../components/admin-panel-task-page/admin-panel-task-page.styles\";\r\nimport ProjectsFilter from \"../../components/projects-filter/projects-filter.component\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\nimport { fetchOrganisationStart } from \"../../redux/organisation/organisation.actions\";\r\nimport { selectCurrentOrganisationId } from \"./../../redux/organisation/organisation.selectors\";\r\nimport ProjectCreateButton from \"../../components/project-createbutton/project-createbutton.component\";\r\n\r\nclass AllProjects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectsList: [], //will change based on search\r\n      showSearch: false,\r\n      showFilter: false,\r\n      filters: {},\r\n      setProjects: 0,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //window.location.reload() //remove this, just a juagad.\r\n    const { fetchProjects, fetchOrg } = this.props;\r\n    const orgId = this.props.match.params.orgId;\r\n    fetchProjects(orgId);\r\n    fetchOrg(orgId);\r\n  }\r\n\r\n  search = (searchedText) => {\r\n    let temp = this.props.projects;\r\n\r\n    if (searchedText) {\r\n      temp = temp.filter(({ projectName }) => {\r\n        return projectName.toLowerCase().includes(searchedText.toLowerCase());\r\n      });\r\n    }\r\n\r\n    this.setState({ projectsList: temp });\r\n  };\r\n\r\n  filter = (filters) => {\r\n    console.log(\"filters\", filters);\r\n\r\n    let temp = this.props.projects;\r\n\r\n    for (let filter in filters) {\r\n      if (filters[filter] != \"\") {\r\n        temp = temp.filter((project) => {\r\n          console.log(project[filter], filter, filters, filters[filter]);\r\n          return project[filter] == filters[filter];\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({ projectsList: temp, filters: filters });\r\n  };\r\n\r\n  toggleSearchBar = () => {\r\n    console.log(\"search\");\r\n    this.setState(\r\n      (prevState) => ({\r\n        showSearch: !prevState.showSearch,\r\n      }),\r\n      () => {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n\r\n  toggleFilter = () => {\r\n    this.setState(\r\n      (prevState) => ({\r\n        showFilter: !prevState.showFilter,\r\n      }),\r\n      () => {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n\r\n  setProjectState = () => {\r\n    this.setState({\r\n      projectsList: this.props.projects,\r\n      setProjects: 1,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { projectsList } = this.state;\r\n    let { projectsFetched, organisationId } = this.props;\r\n    let { orgId } = this.props.match.params;\r\n\r\n    if (!projectsFetched) {\r\n      return <Spinner />;\r\n    } else if (\r\n      projectsFetched &&\r\n      organisationId == orgId &&\r\n      this.state.setProjects == 0\r\n    ) {\r\n      this.setProjectState();\r\n    }\r\n\r\n    if (!projectsList) {\r\n      projectsList = [];\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <ProjectsNav title=\"Projects\" toggleSearchBar={this.toggleSearchBar} />\r\n        {this.state.showSearch ? (\r\n          <SearchBar\r\n            placeholder=\"Search Projects...\"\r\n            search={this.search}\r\n            toggleFilter={this.toggleFilter}\r\n          />\r\n        ) : null}\r\n\r\n        {projectsList.length === 0 ? (\r\n          <NoResult />\r\n        ) : (\r\n          <ProjectListContainer projects={projectsList} />\r\n        )}\r\n\r\n        {this.state.showFilter ? (\r\n          <Overlay\r\n            backgroundcolor=\"rgba(0,0,0,0.3)\"\r\n            style={{\r\n              bottom: \"0\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <ProjectsFilter exit={this.toggleFilter} onSubmit={this.filter} />\r\n          </Overlay>\r\n        ) : null}\r\n\r\n        <ProjectCreateButton orgId={orgId} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  name: selectCurrentUserFirstName,\r\n  projects: selectUserProjects,\r\n  projectsFetched: selectProjectsFetched,\r\n  organisationId: selectCurrentOrganisationId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createProject: (projectDetails) =>\r\n    dispatch(createProjectStart(projectDetails)),\r\n  fetchProjects: (orgId) => dispatch(fetchProjectsStart(orgId)),\r\n  fetchOrg: (orgId) => dispatch(fetchOrganisationStart(orgId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllProjects);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\project\\project.page.js",["1561","1562","1563","1564"],"import React, { Component } from \"react\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport CreateTaskForm from \"../../components/create-task-form/create-task-form.component\";\r\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport {\r\n  selectCurrentProjectFetchSuccess,\r\n  selectCurrentProjectId,\r\n  selectCurrentProjectName,\r\n  selectCurrentProjectStatus,\r\n  selectCurrentProjectTasks,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport { TaskNav } from \"../../components/task-nav/task-nav.component\";\r\nimport LowerNavBar from \"../../components/lower-nav-bar/lower-nav-bar.component\";\r\nimport TaskListContainer from \"../../components/tasks-list/tasks-list.container\";\r\nimport SearchBar from \"../../components/search-bar/search-bar.component\";\r\nimport AdminPanelTaskPage from \"../../components/admin-panel-task-page/admin-panel-task-page.component\";\r\nimport ToggleButton from \"../../components/toggle-button/toggle-button.component\";\r\nimport { Overlay } from \"../../components/admin-panel-task-page/admin-panel-task-page.styles\";\r\nimport NoResult from \"../../components/no-result/no-result.component\";\r\nimport TasksFilter from \"../../components/tasks-filter/tasks-filter.component\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\nimport adduserFormComponent from \"../../components/adduser-form/adduser-form.component\";\r\n\r\nclass Project extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      adminSwitch: false,\r\n      tasksList: [],\r\n      showSearch: false,\r\n      showFilter: false,\r\n      setTasks: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const projectId = this.props.match.params.projectId;\r\n    console.log(this.props.match.params.projectId);\r\n    this.props.fetchProjects(projectId);\r\n    this.setState({ tasksList: this.props.tasks });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"component updated.\");\r\n  }\r\n\r\n  adminToggle = () => {\r\n    this.setState((prevState) => ({\r\n      adminSwitch: !prevState.adminSwitch,\r\n    }));\r\n  };\r\n\r\n  search = (searchedText) => {\r\n    let temp = this.props.tasks;\r\n\r\n    if (searchedText) {\r\n      temp = temp.filter(({ taskName }) => {\r\n        return taskName.toLowerCase().includes(searchedText.toLowerCase());\r\n      });\r\n    }\r\n\r\n    this.setState({ tasksList: temp });\r\n  };\r\n\r\n  toggleSearchBar = () => {\r\n    this.setState((prevState) => ({\r\n      showSearch: !prevState.showSearch,\r\n    }));\r\n  };\r\n\r\n  toggleFilter = () => {\r\n    this.setState((prevState) => ({\r\n      showFilter: !prevState.showFilter,\r\n    }));\r\n  };\r\n\r\n  setTaskState = () => {\r\n    console.log(\"settask\", this.props.tasks);\r\n    this.setState({\r\n      tasksList: this.props.tasks,\r\n      setTasks: 1,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { projectName, projectId } = this.props;\r\n    let { tasksList } = this.state;\r\n    console.log(\"project page rendered.\");\r\n    console.log(tasksList);\r\n\r\n    let { fetchTasksSuccess } = this.props;\r\n    console.log(\"success\", fetchTasksSuccess);\r\n    if (!fetchTasksSuccess) {\r\n      return <Spinner />;\r\n    } else if (\r\n      fetchTasksSuccess &&\r\n      projectId == this.props.match.params.projectId &&\r\n      this.state.setTasks == 0\r\n    ) {\r\n      this.setTaskState();\r\n    }\r\n\r\n    if (!tasksList) {\r\n      tasksList = [];\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginBottom: \"5em\" }}>\r\n        <TaskNav title={projectName} toggleSearch={this.toggleSearchBar} />\r\n        {this.state.showSearch ? (\r\n          <SearchBar\r\n            placeholder=\"Search Tasks...\"\r\n            search={this.search}\r\n            toggleFilter={this.toggleFilter}\r\n          />\r\n        ) : null}\r\n        <div\r\n          style={{\r\n            padding: \"1em\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            borderBottom: \"1px solid #BCC5D3\",\r\n          }}\r\n        >\r\n          <ToggleButton\r\n            onToggleFunction={this.adminToggle}\r\n            checked={this.state.adminSwitch}\r\n            color=\"#6C5FCF\"\r\n          />\r\n          <p\r\n            style={{\r\n              fontSize: \"1em\",\r\n              color: \"#666666\",\r\n              margin: \"0\",\r\n              paddingLeft: \"0.5em\",\r\n            }}\r\n          >\r\n            Admin\r\n          </p>\r\n        </div>\r\n\r\n        {this.state.adminSwitch ? (\r\n          <AdminPanelTaskPage projectId={projectId} />\r\n        ) : null}\r\n        {tasksList.length === 0 ? (\r\n          <NoResult />\r\n        ) : (\r\n          <TaskListContainer tasks={tasksList} />\r\n        )}\r\n        {/* <CreateTaskForm projectId = {this.props.match.params.projectId}/> */}\r\n        <LowerNavBar projectId={this.props.match.params.projectId} />\r\n\r\n        {this.state.showFilter ? (\r\n          <Overlay\r\n            backgroundcolor=\"rgba(0,0,0,0.3)\"\r\n            style={{\r\n              bottom: \"0\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <TasksFilter exit={this.toggleFilter} />\r\n          </Overlay>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  projectName: selectCurrentProjectName,\r\n  projectStatus: selectCurrentProjectStatus,\r\n  tasks: selectCurrentProjectTasks,\r\n  fetchTasksSuccess: selectCurrentProjectFetchSuccess,\r\n  projectId: selectCurrentProjectId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchProjects: (projectId) => dispatch(fetchCurrentProjectStart(projectId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\task\\task.page.js",["1565","1566","1567","1568","1569","1570","1571"],"import React, { Component } from \"react\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport CreateStepForm from \"../../components/create-step-form/create-step-form.component\";\r\nimport {\r\n  completeCurrentTaskStart,\r\n  fetchCurrentTaskStart,\r\n} from \"../../redux/current-task/current-task.actions\";\r\nimport {\r\n  selectCurrentTaskCompletionMessage,\r\n  selectCurrentTaskCompletionPercentage,\r\n  selectCurrentTaskEndDate,\r\n  selectCurrentTaskIsDone,\r\n  selectCurrentTaskName,\r\n  selectCurrentTaskOwner,\r\n  selectCurrentTaskStartDate,\r\n  selectCurrentTaskSteps,\r\n} from \"../../redux/current-task/current-task.selectors\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { selectCurrentProjectId } from \"../../redux/current-project/current-project.selectors\";\r\nimport {\r\n  completeStepQuestionStart,\r\n  completeStepStart,\r\n} from \"../../redux/current-step/current-step.actions\";\r\nimport { fetchCurrentStepStart } from \"../../redux/current-step/current-step.actions\";\r\nimport {\r\n  selectCurrentStepCompletionMessage,\r\n  selectCurrentStepId,\r\n  selectCurrentStepIsDone,\r\n  selectCurrentStepName,\r\n  selectCurrentStepQuestion,\r\n  selectCurrentStepQuestionAnswerConfirmation,\r\n  selectCurrentStepQuestionAnswered,\r\n} from \"../../redux/current-step/current-step.selectors\";\r\nimport { selectCurrentTaskId } from \"../../redux/current-task/current-task.selectors\";\r\nimport { LongButton } from \"../../components/long-button/long-button.styles\";\r\nimport StepNav from \"../../components/step-nav/step-nav.component\";\r\nimport StepLowerNav from \"../../components/step-lower-nav/step-lower-nav.component\";\r\n\r\nclass Task extends Component {\r\n  componentDidMount() {\r\n    const taskId = this.props.match.params.taskId;\r\n    this.props.fetchSteps(taskId);\r\n    console.log(taskId);\r\n  }\r\n\r\n  completeTask = () => {\r\n    const taskId = this.props.match.params.taskId;\r\n    this.props.completeTask(taskId);\r\n    if (this.props.completionPercentage == 100) {\r\n      console.log(\"back\");\r\n      this.props.history.goBack();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      steps,\r\n      projectId,\r\n      taskName,\r\n      isTaskDone,\r\n      taskCompletionMessage,\r\n      taskOwner,\r\n      taskEndDate,\r\n      taskStartDate,\r\n    } = this.props;\r\n    console.log(\"task page\");\r\n    console.log(steps);\r\n    const taskId = this.props.match.params.taskId;\r\n    console.log(taskId);\r\n    return (\r\n      <div>\r\n        <StepNav projectId={projectId} />\r\n        <StepLowerNav\r\n          steps={steps}\r\n          taskOwner={taskOwner}\r\n          taskStartDate={taskStartDate}\r\n          taskEndDate={taskEndDate}\r\n          completeTask={this.completeTask}\r\n        />\r\n\r\n        {/* <CreateStepForm taskId = {this.props.match.params.taskId} />\r\n                <Link to={`/purchaseOrders/${taskId}`}><button>PURCHASE ORDERS</button></Link>\r\n                <Link to={`/changeOrders/${taskId}`}><button>CHANGE ORDERS</button></Link> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  steps: selectCurrentTaskSteps,\r\n  taskName: selectCurrentTaskName,\r\n  isTaskDone: selectCurrentTaskIsDone,\r\n  taskCompletionMessage: selectCurrentTaskCompletionMessage,\r\n  projectId: selectCurrentProjectId,\r\n  stepName: selectCurrentStepName,\r\n  stepQuestion: selectCurrentStepQuestion,\r\n  isStepQuestionAnswered: selectCurrentStepQuestionAnswered,\r\n  stepId: selectCurrentStepId,\r\n  questionCompletion: selectCurrentStepQuestionAnswerConfirmation,\r\n  stepCompletionMessage: selectCurrentStepCompletionMessage,\r\n  isStepDone: selectCurrentStepIsDone,\r\n  taskId: selectCurrentTaskId,\r\n  completionPercentage: selectCurrentTaskCompletionPercentage,\r\n\r\n  taskOwner: selectCurrentTaskOwner,\r\n  taskStartDate: selectCurrentTaskStartDate,\r\n  taskEndDate: selectCurrentTaskEndDate,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchSteps: (taskId) => dispatch(fetchCurrentTaskStart(taskId)),\r\n  completeTask: (taskId) => dispatch(completeCurrentTaskStart(taskId)),\r\n  fetchCurrentStep: (stepId) => dispatch(fetchCurrentStepStart(stepId)),\r\n  completeStepQuestion: (stepId) => dispatch(completeStepQuestionStart(stepId)),\r\n  completeStep: (data) => dispatch(completeStepStart(data)),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Task));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\individual-purchase-order\\individual-purchase-order.page.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\user\\user.reducer.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\user\\user.sagas.js",["1572","1573","1574","1575","1576"],"import { all, call, put, select, takeLatest } from \"redux-saga/effects\";\r\nimport { fetchCurrentProjectStart } from \"../current-project/current-project.actions\";\r\nimport { selectCurrentProjectId } from \"../current-project/current-project.selectors\";\r\nimport { inviteUserFailure, inviteUserSuccess, signInFailure, signInSuccessful, signUpFail, signUpSuccesful, taskOwnerAndTradePartnerSignUpSuccessful } from \"./user.actions\";\r\nimport { UserActionTypes } from \"./user.types\";\r\n\r\nexport function* signUp({ payload }) {\r\n  console.log(\"Sign Up has started.\");\r\n  console.log(payload);\r\n\r\n  try {\r\n    let data = payload;\r\n    console.log(JSON.stringify(data));\r\n    let resp = yield fetch(\"http://127.0.0.1:5000/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    console.log(resp);\r\n    resp = yield resp.json();\r\n    if (resp.done) {\r\n      if (resp.user) {\r\n        const user = yield resp.user;\r\n        const token = yield resp.token;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        yield put(signUpSuccesful(user));\r\n      } else {\r\n        yield put(taskOwnerAndTradePartnerSignUpSuccessful(resp.message));\r\n      }\r\n    } else {\r\n      yield put(signUpFail(\"Failed to sign up.\"));\r\n    }\r\n  } catch (error) {\r\n    yield put(signUpFail(error));\r\n  }\r\n}\r\n\r\nexport function* signIn({payload}){\r\n  try {\r\n    let data = payload;\r\n    let resp = yield fetch(\"http://127.0.0.1:5000/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    resp = yield resp.json()\r\n    if(resp.done){\r\n      if(resp.user){\r\n        const user = yield resp.user;\r\n        const token = yield resp.token;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        yield put(signInSuccessful(user));\r\n      }else{\r\n        yield put(signInFailure(resp.message))\r\n      }\r\n    }else{\r\n      yield put(signInFailure(resp.error))\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* onSignInStart(){\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signIn)\r\n}\r\n\r\n\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onSignUpStart),\r\n    call(onSignInStart)\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.reducer.js",["1577"],"import { StepActionTypes } from \"./all-steps.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  createStepStart: false,\r\n  createStepSucessful: false,\r\n  createStepFail: false,\r\n  fetchStepStart: false,\r\n  fetchStepSuccess: false,\r\n  fetchStepFailure: false,\r\n  errorMessage: undefined,\r\n  message: null,\r\n  steps: null,\r\n  isStepQuestionBeingAnswered: false,\r\n  isStepQuestionAnswered: false,\r\n  completionMessage: null,\r\n  isStepAnswered: false\r\n};\r\n\r\nconst stepReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case StepActionTypes.CREATE_STEP_START:\r\n      return {\r\n        ...state,\r\n        createStepStart: true,\r\n        createStepFail: false,\r\n        createStepSuccesful: false,\r\n        errorMessage: null,\r\n      };\r\n    case StepActionTypes.CREATE_STEP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createStepStart: false,\r\n        createStepSuccessful: true,\r\n        message: action.payload,\r\n      };\r\n   \r\n    case StepActionTypes.CREATE_STEP_FAILURE:\r\n      return {\r\n        ...state,\r\n        createStepStart: false,\r\n        createStepFail: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    case StepActionTypes.FETCH_STEPS_START:\r\n      return{\r\n        ...state,\r\n        fetchStepStart: true\r\n      }\r\n      case StepActionTypes.FETCH_STEPS_SUCCESS:\r\n        return{\r\n          ...state,\r\n          fetchStepStart: false,\r\n          fetchStepSuccess: true,\r\n          steps: action.payload\r\n        }\r\n      case StepActionTypes.FETCH_STEPS_START:\r\n          return{\r\n            ...state,\r\n            fetchStepStart: false,\r\n            fetchStepFailure: true,\r\n            errorMessage: action.payload\r\n          }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default stepReducer;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.sagas.js",["1578","1579","1580"],"import { all, call, put, takeLatest, select, delay} from \"redux-saga/effects\";\r\nimport { selectCurrentProjectId } from \"../current-project/current-project.selectors\";\r\nimport { fetchCurrentTaskStart } from \"../current-task/current-task.actions\";\r\nimport { completeStepQuestionFailure, completeStepQuestionSuccess, createStepFail, createStepSucessful, fetchStepsFailure, fetchStepsStart, fetchStepsSuccess } from \"./all-steps.actions\";\r\nimport { StepActionTypes } from \"./all-steps.types\";\r\n\r\nexport function* createStep({payload}){\r\n  try {\r\n    let data = payload;\r\n    let projectId = yield select(selectCurrentProjectId)\r\n    data['projectId'] = projectId\r\n    const taskId = data.taskId\r\n    console.log(data);\r\n    let resp = yield fetch(`http://127.0.0.1:5000/create-step/${taskId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    resp = yield resp.json()\r\n    if(resp.done){\r\n      yield put(createStepSucessful(resp.message));\r\n    }\r\n    yield delay(500)\r\n    yield put(fetchCurrentTaskStart(taskId))\r\n    \r\n  } catch (error) {\r\n    console.log(error)\r\n    yield put(createStepFail(error))\r\n  }\r\n}\r\n\r\nexport function* fetchSteps({payload}){\r\n  const taskId = payload\r\n  try {\r\n    let steps = yield fetch(`http://127.0.0.1:5000/task/${taskId}/step`)\r\n    steps = yield steps.json()\r\n    steps.done\r\n    ? yield put(fetchStepsSuccess(steps.steps.steps))\r\n    : yield put(fetchStepsFailure('Steps not fetched!'))\r\n  } catch (error) {\r\n    yield put(fetchStepsFailure(error))\r\n  }\r\n}\r\n\r\n\r\nexport function* onStepCreateStart(){\r\n  yield takeLatest(StepActionTypes.CREATE_STEP_START, createStep)\r\n}\r\n\r\nexport function* onStepFetchStart(){\r\n  yield takeLatest(StepActionTypes.FETCH_STEPS_START, fetchSteps)\r\n}\r\n\r\nexport function* stepSagas() {\r\n  yield all([\r\n    call(onStepCreateStart),\r\n    call(onStepFetchStart),\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-project\\current-project.reducer.js",["1581"],"import { CurrentProjectActionTypes } from \"./current-project.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  currentProjectFetchStart: false,\r\n  currentProjectFetchSuccess: false,\r\n  currentProjectFetchFailure: false,\r\n  isCurrentProjectFetching: false,\r\n  currentProjectId: null,\r\n  currentProjectName: null,\r\n  currentProjectStatus: null,\r\n  currentProjectPurchaseOrders: null,\r\n  currentProjectChangeOrders: null,\r\n  currentProjectTasks: null,\r\n  currentProjectMessage: null,\r\n  currentProjectRoles: null,\r\n  currentProjectUsers: null,\r\n  currentProjectType: null,\r\n  currentPropertyType: null,\r\n  currentProjectOwner: null,\r\n  currentProjectBudget: null,\r\n  currentProjectPunchLists: null,\r\n  currentProjectPublished: null,\r\n  errorMessage: null,\r\n  isCurrentProjectDeleting: false,\r\n  deletionMessage: null,\r\n  deletionError: null,\r\n  inviteUserStart: false,\r\n  inviteUserMessage: null,\r\n  updateUserInProjectStart: null,\r\n  updateUserInProjectMessage: null,\r\n  updatePublishedInProjectStart: null,\r\n  updatePublishedInProjectMessage: null,\r\n  updateRolesInProjectStart: null,\r\n  updateRolesInProjectMessage: null,\r\n  isuserDeleting: null,\r\n  userDeletionMessage: null,\r\n};\r\n\r\nconst currentProjectReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        //isCurrentProjectFetching: true,\r\n        currentProjectFetchStart: true,\r\n        currentProjectFetchFailure: false,\r\n        currentProjectFetchSuccess: false,\r\n      };\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_SUCCESS:\r\n      const {\r\n        tasks,\r\n        purchaseOrders,\r\n        _id,\r\n        projectName,\r\n        projectStatus,\r\n        changeOrders,\r\n        projectOwner,\r\n        projectType,\r\n        propertyType,\r\n        projectRoles,\r\n        projectBudget,\r\n        published,\r\n        Users,\r\n        punchList,\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        currentProjectFetchSuccess: true,\r\n        currentProjectFetchStart: false,\r\n        currentProjectFetchFailure: false,\r\n        //isCurrentProjectFetching: false,\r\n        currentProjectStatus: projectStatus,\r\n        currentProjectName: projectName,\r\n        currentProjectTasks: tasks,\r\n        currentProjectPurchaseOrders: purchaseOrders,\r\n        currentProjectChangeOrders: changeOrders,\r\n        currentProjectId: _id,\r\n        currentProjectType: projectType,\r\n        currentProjectOwner: projectOwner,\r\n        currentPropertyType: propertyType,\r\n        currentProjectRoles: projectRoles,\r\n        currentProjectUsers: Users,\r\n        currentProjectBudget: projectBudget,\r\n        currentProjectPublished: published,\r\n        currentProjectPunchLists: punchList,\r\n        currentProjectMessage: \"PROJECT FETCHED!\",\r\n      };\r\n\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        //isCurrentProjectFetching: false,\r\n        currentProjectFetchStart: false,\r\n        currentProjectFetchFailure: true,\r\n        currentProjectFetchSuccess: false,\r\n        errorMessage: action.payload,\r\n      };\r\n\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_TASK_IN_REDUCER:\r\n      console.log(state);\r\n      let updatedTasks = state.currentProjectTasks.filter(\r\n        (task) => task._id != action.payload\r\n      );\r\n      console.log(\"current project reducer\", updatedTasks);\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        currentProjectTasks: updatedTasks,\r\n      };\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_START:\r\n      return {\r\n        isCurrentProjectDeleting: true,\r\n      };\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_SUCCESS:\r\n      return {\r\n        isCurrentProjectDeleting: false,\r\n        deletionMessage: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_FAILURE:\r\n      return {\r\n        isCurrentProjectDeleting: false,\r\n        deletionError: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.INVITE_USER_START:\r\n      return {\r\n        ...state,\r\n        inviteUserStart: true,\r\n        inviteUserMessage: null,\r\n      };\r\n    case CurrentProjectActionTypes.INVITE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        inviteUserStart: false,\r\n        inviteUserMessage: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.INVITE_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        inviteUserStart: false,\r\n        inviteUserMessage: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        updateUserInProjectStart: true,\r\n        updateUserInProjectMessage: null,\r\n      };\r\n    case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateUserInProjectStart: false,\r\n        updateUserInProjectMessage: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        updateUserInProjectStart: false,\r\n        updateUserInProjectMessage: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        updatePublishedInProjectStart: true,\r\n        updatePublishedInProjectMessage: null,\r\n      };\r\n    case CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updatePublishedInProjectStart: false,\r\n        updatePublishedInProjectMessage: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        updatePublishedInProjectStart: false,\r\n        updatePublishedInProjectMessage: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        updateRolesInProjectStart: true,\r\n      };\r\n    case CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateRolesInProjectStart: false,\r\n        updateRolesInProjectMessage: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        updateRolesInProjectStart: false,\r\n        updateRolesInProjectMessage: action.payload,\r\n      };\r\n\r\n    case CurrentProjectActionTypes.DELETE_USER_START:\r\n      return {\r\n        ...state,\r\n        isuserDeleting: true,\r\n        userDeletionMessage: null,\r\n      };\r\n\r\n    case CurrentProjectActionTypes.DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isuserDeleting: false,\r\n        userDeletionMessage: action.payload,\r\n      };\r\n\r\n    case CurrentProjectActionTypes.DELETE_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        isuserDeleting: false,\r\n        userDeletionMessage: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentProjectReducer;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.sagas.js",["1582","1583"],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-project\\current-project.sagas.js",["1584","1585","1586"],"import { all, call, put, takeLatest, select, delay } from \"redux-saga/effects\";\r\nimport {\r\n  UpdatePublishedInProjectFailure,\r\n  UpdatePublishedInProjectSuccess,\r\n  deleteCurrentProjectFailure,\r\n  deleteCurrentProjectSuccess,\r\n  fetchCurrentProjectFailure,\r\n  fetchCurrentProjectStart,\r\n  fetchCurrentProjectSuccess,\r\n  inviteUserFailure,\r\n  inviteUserSuccess,\r\n  UpdateUserInProjectFailure,\r\n  UpdateUserInProjectSuccess,\r\n  UpdateRolesInProjectSuccess,\r\n  UpdateRolesInProjectFailure,\r\n  deleteUserSuccess,\r\n  deleteUserFailure\r\n} from \"./current-project.actions\";\r\nimport { CurrentProjectActionTypes } from \"./current-project.types\";\r\nimport { selectUserId } from \"../user/user.selectors\";\r\nimport { deleteProject } from \"../all-projects/all-projects.actions\";\r\nimport { selectCurrentProjectId } from \"./current-project.selectors\";\r\nimport currentProjectReducer from \"./current-project.reducer\";\r\nimport { setUserPermission } from \"../user/user.actions\";\r\nimport { selectCurrentOrganisationId } from \"../organisation/organisation.selectors\";\r\n\r\nexport function* fetchCurrentProject({ payload }) {\r\n  try {\r\n    const projectId = payload;\r\n    const userId = yield select(selectUserId);\r\n    const token = localStorage.getItem(\"token\");\r\n    let currentProject = yield fetch(\r\n      `http://127.0.0.1:5000/project/${projectId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          role: \"ADMIN\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    currentProject = yield currentProject.json();\r\n \r\n    console.log(\"saga\", currentProject);\r\n    currentProject.done\r\n      ? yield put(fetchCurrentProjectSuccess(currentProject.project))\r\n      : yield put(\r\n          fetchCurrentProjectFailure(\"CURRENT PROJECCT FETTCHING FAILED\")\r\n        );\r\n  } catch (error) {\r\n    fetchCurrentProjectFailure(error);\r\n  }\r\n}\r\n\r\nexport function* deleteCurrentProject({ payload }) {\r\n  try {\r\n    const projectId = payload;\r\n    console.log(projectId);\r\n    yield put(deleteProject(projectId));\r\n    let userId = yield select(selectUserId);\r\n    userId = { userId: userId };\r\n    console.log(userId);\r\n    let projectDeletion = yield fetch(\r\n      `http://127.0.0.1:5000/project/${projectId}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userId),\r\n      }\r\n    );\r\n    projectDeletion = yield projectDeletion.json();\r\n    projectDeletion.done\r\n      ? yield put(deleteCurrentProjectSuccess(projectDeletion.message))\r\n      : yield put(deleteCurrentProjectFailure(projectDeletion.error));\r\n  } catch (error) {\r\n    console.log(error);\r\n    deleteCurrentProjectFailure(error);\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* deleteUser({ payload }) {\r\n  try {\r\n    const {projectId, userId} = payload;\r\n    const organisationId = yield select(selectCurrentOrganisationId)\r\n    let data = {\r\n      userId,\r\n      organisationId\r\n    }\r\n    console.log(data, payload)\r\n\r\n    let userDeletion = yield fetch(\r\n      `http://127.0.0.1:5000/deleteUser/${projectId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data)\r\n      }\r\n    );\r\n   \r\n    \r\n    userDeletion = yield userDeletion.json();\r\n    \r\n    userDeletion.done\r\n      ? yield put(deleteUserSuccess(userDeletion.message))\r\n      : yield put(deleteUserFailure(userDeletion.error));\r\n  } catch (error) {\r\n    console.log(error);\r\n    deleteUserFailure(error);\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* inviteUser({ payload }) {\r\n  try {\r\n    let data = payload;\r\n    let projectId = yield select(selectCurrentProjectId);\r\n    let organisationId = yield select(selectCurrentOrganisationId)\r\n    data[\"projectId\"] = projectId;\r\n    data['organisationId'] = organisationId\r\n    let resp = yield fetch(\"http://127.0.0.1:5000/inviteUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    resp = yield resp.json();\r\n    if (resp.done) {\r\n      yield put(inviteUserSuccess(resp.message));\r\n      yield put(fetchCurrentProjectStart(projectId));\r\n    } else {\r\n      yield put(inviteUserFailure(resp.message));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(inviteUserFailure(error));\r\n  }\r\n}\r\n\r\nexport function* updateUserInProject({ payload }) {\r\n  try {\r\n    let data = payload;\r\n    let projectId = yield select(selectCurrentProjectId);\r\n    console.log(data, \"saga data\");\r\n    console.log(projectId);\r\n    let resp = yield fetch(\r\n      `http://127.0.0.1:5000/updatePermissions/${projectId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    );\r\n    resp = yield resp.json();\r\n    if (resp.done) {\r\n      yield put(UpdateUserInProjectSuccess(resp.message));\r\n      yield delay(500);\r\n      yield put(fetchCurrentProjectStart(projectId));\r\n    } else {\r\n      yield put(UpdateUserInProjectFailure(resp.message));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* updatePublishedInProject() {\r\n  try {\r\n    console.log(\"Inside update published saga\");\r\n    let projectId = yield select(selectCurrentProjectId);\r\n    let resp = yield fetch(`http://127.0.0.1:5000/publish/${projectId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    resp = yield resp.json();\r\n    if (resp.done) {\r\n      yield put(UpdatePublishedInProjectSuccess(resp.message));\r\n      yield delay(500);\r\n      yield put(fetchCurrentProjectStart(projectId));\r\n    } else {\r\n      yield put(UpdatePublishedInProjectFailure(resp.message));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* updateRoles({payload}){\r\n  try {\r\n    let data = payload\r\n    let projectId = yield select(selectCurrentProjectId);\r\n    let resp = yield fetch(`http://127.0.0.1:5000/updateRoles/${projectId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n    resp = yield resp.json();\r\n    if (resp.done) {\r\n      yield put(UpdateRolesInProjectSuccess(resp.message));\r\n      yield delay(500);\r\n      yield put(fetchCurrentProjectStart(projectId));\r\n    } else {\r\n      yield put(UpdateRolesInProjectFailure(resp.message));\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function* onCurrentProjectFetchStart() {\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START,\r\n    fetchCurrentProject\r\n  );\r\n}\r\n\r\nexport function* onCurrentProjectDeleteStart() {\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_START,\r\n    deleteCurrentProject\r\n  );\r\n}\r\n\r\nexport function* onInviteUserStart() {\r\n  yield takeLatest(CurrentProjectActionTypes.INVITE_USER_START, inviteUser);\r\n}\r\n\r\nexport function* onUpdateUserStart() {\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_START,\r\n    updateUserInProject\r\n  );\r\n}\r\n\r\nexport function* onDeleteUserStart() {\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.DELETE_USER_START,\r\n    deleteUser\r\n  );\r\n}\r\n\r\nexport function* onUpdateRolesStart(){\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_START,\r\n    updateRoles\r\n  )\r\n}\r\n\r\nexport function* onUpdatePublishedStart() {\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_START,\r\n    updatePublishedInProject\r\n  );\r\n}\r\n\r\nexport function* currentProjectSagas() {\r\n  yield all([\r\n    call(onCurrentProjectFetchStart),\r\n    call(onCurrentProjectDeleteStart),\r\n    call(onInviteUserStart),\r\n    call(onUpdateUserStart),\r\n    call(onUpdatePublishedStart),\r\n    call(onUpdateRolesStart),\r\n    call(onDeleteUserStart)\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-task\\current-task.sagas.js",["1587","1588"],"import { all, call, put, takeLatest, select } from \"redux-saga/effects\";\r\nimport { deleteCurrentTaskInReducer } from \"../current-project/current-project.actions\";\r\nimport { selectCurrentProjectId } from \"../current-project/current-project.selectors\";\r\nimport {\r\n  completeCurrentTaskFailure,\r\n  completeCurrentTaskSuccess,\r\n  fetchCurrentTaskFailure,\r\n  fetchCurrentTaskSuccess,\r\n  deleteCurrentTaskSuccess,\r\n  deleteCurrentTaskFailure,\r\n  updateCurrentTaskSuccess,\r\n  updateCurrentTaskFailure,\r\n} from \"./current-task.actions\";\r\nimport { selectCurrentTaskId } from \"./current-task.selectors\";\r\nimport { CurrentTaskActionTypes } from \"./current-task.types\";\r\n\r\nexport function* fetchCurrentTask({ payload }) {\r\n  try {\r\n    const taskId = payload;\r\n    console.log(taskId);\r\n    let currentTask = yield fetch(`http://127.0.0.1:5000/task/${taskId}`);\r\n    currentTask = yield currentTask.json();\r\n    currentTask.done\r\n      ? yield put(fetchCurrentTaskSuccess(currentTask.task))\r\n      : yield put(fetchCurrentTaskFailure(\"CURRENT PROJECCT FETTCHING FAILED\"));\r\n  } catch (error) {\r\n    fetchCurrentTaskFailure(error);\r\n  }\r\n}\r\n\r\nexport function* completeTask({ payload }) {\r\n  try {\r\n    console.log('task completion starts at saga')\r\n    let taskId = payload\r\n    let projectId = yield select(selectCurrentProjectId);\r\n    projectId = yield { projectId: projectId }\r\n    console.log('saga project id', projectId)\r\n    let taskCompletion = yield fetch(\r\n      `http://127.0.0.1:5000/complete-task/${taskId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(projectId),\r\n      }\r\n    );\r\n    taskCompletion = yield taskCompletion.json();\r\n    taskCompletion.done\r\n      ? yield put(completeCurrentTaskSuccess(taskCompletion.message))\r\n      : yield put(completeCurrentTaskFailure(taskCompletion.error));\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(completeCurrentTaskFailure(error));\r\n  }\r\n}\r\n\r\nexport function* deleteTask({ payload }) {\r\n  try {\r\n    let taskId = payload;\r\n    yield put(deleteCurrentTaskInReducer(taskId));\r\n    let projectId = yield select(selectCurrentProjectId);\r\n    projectId = { projectId: projectId };\r\n    console.log(projectId);\r\n    let taskDeletion = yield fetch(`http://127.0.0.1:5000/task/${taskId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(projectId),\r\n    });\r\n    taskDeletion = yield taskDeletion.json();\r\n    if (taskDeletion.done) {\r\n      yield put(deleteCurrentTaskSuccess(taskDeletion.message));\r\n    } else {\r\n      yield put(deleteCurrentTaskFailure(taskDeletion.error));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(deleteCurrentTaskFailure(error));\r\n  }\r\n}\r\n\r\nexport function* updateTask({ payload }) {\r\n  try {\r\n    let {taskId} = payload;\r\n    let data = {};\r\n    console.log(payload)\r\n    for (const key of Object.keys(payload)) {\r\n      console.log(key);\r\n      if(key != \"taskId\"){\r\n        data[key] = payload[key];\r\n      }\r\n    }\r\n    \r\n    let taskUpdate = yield fetch(`http://127.0.0.1:5000/task/${taskId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    taskUpdate = yield taskUpdate.json();\r\n    if (taskUpdate.done) {\r\n      yield put(updateCurrentTaskSuccess(taskUpdate.message));\r\n    } else {\r\n      yield put(updateCurrentTaskFailure(taskUpdate.error));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(updateCurrentTaskFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onCurrentTaskFetchStart() {\r\n  yield takeLatest(\r\n    CurrentTaskActionTypes.FETCH_CURRENT_TASK_START,\r\n    fetchCurrentTask\r\n  );\r\n}\r\n\r\nexport function* onTaskCompletionStart() {\r\n  yield takeLatest(\r\n    CurrentTaskActionTypes.COMPLETE_CURRENT_TASK_START,\r\n    completeTask\r\n  );\r\n}\r\n\r\nexport function* onDeleteTaskStart() {\r\n  yield takeLatest(\r\n    CurrentTaskActionTypes.DELETE_CURRENT_TASK_START,\r\n    deleteTask\r\n  );\r\n}\r\n\r\nexport function* onUpdateTaskStart() {\r\n  yield takeLatest(\r\n    CurrentTaskActionTypes.UPDATE_CURRENT_TASK_START,\r\n    updateTask\r\n  );\r\n}\r\n\r\nexport function* currentTaskSagas() {\r\n  yield all([\r\n    call(onCurrentTaskFetchStart),\r\n    call(onTaskCompletionStart),\r\n    call(onDeleteTaskStart),\r\n    call(onUpdateTaskStart)\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-task\\current-task.reducer.js",["1589","1590"],"import { CurrentTaskActionTypes } from \"./current-task.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  isCurrentTaskFetching: false,\r\n  currentTaskId: null,\r\n  currentTaskName: null,\r\n  currentTaskPurchaseOrders: null,\r\n  currentTaskChangeOrders: null,\r\n  currentTaskSteps: null,\r\n  currentTaskTotalSteps: null,\r\n  currentTaskCompletedSteps: null,\r\n  currentTaskCompletionPercentage: null,\r\n  currentTaskIsDone: null,\r\n  currentTaskStartDate: null,\r\n  currentTaskEndDate: null,\r\n  currentTaskOwner: null,\r\n  currentTaskMessage: null,\r\n  errorMessage: null,\r\n  currentTaskCompletionMessage: null,\r\n  isCurrentTaskCompleting: null,\r\n  isCurrentTaskDeleting: false,\r\n  currentTaskDeletingMessage: null,\r\n  currentTaskUpdateMessage: null\r\n};\r\n\r\nconst currentTaskReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrentTaskActionTypes.FETCH_CURRENT_TASK_START:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskFetching: true,\r\n        currentTaskCompletionMessage: null,\r\n      };\r\n    case CurrentTaskActionTypes.FETCH_CURRENT_TASK_SUCCESS:\r\n      const {\r\n        taskName,\r\n        taskStartDate,\r\n        taskEndDate,\r\n        taskOwner,\r\n        purchaseOrders,\r\n        _id,\r\n        steps,\r\n        completionPercentage,\r\n        completedSteps,\r\n        totalSteps,\r\n        isTaskDone,\r\n        changeOrders,\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        isCurrentTaskFetching: false,\r\n        currentTaskId: _id,\r\n        currentTaskName: taskName,\r\n        currentTaskStartDate: taskStartDate,\r\n        currentTaskEndDate: taskEndDate,\r\n        currentTaskOwner: taskOwner,\r\n        currentTaskPurchaseOrders: purchaseOrders,\r\n        currentTaskSteps: steps,\r\n        currentTaskCompletedSteps: completedSteps,\r\n        currentTaskCompletionPercentage: completionPercentage,\r\n        currentTaskTotalSteps: totalSteps,\r\n        currentTaskIsDone: isTaskDone,\r\n        currentTaskChangeOrders: changeOrders,\r\n        currentTaskUpdating: null,\r\n      };\r\n\r\n    case CurrentTaskActionTypes.FETCH_CURRENT_TASK_FAILURE:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskFetching: false,\r\n        errorMessage: action.payload,\r\n      };\r\n    case CurrentTaskActionTypes.COMPLETE_CURRENT_TASK_START:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskCompleting: true,\r\n        currentTaskCompletionMessage: null,\r\n      };\r\n    case CurrentTaskActionTypes.COMPLETE_CURRENT_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskCompleting: false,\r\n        currentTaskCompletionMessage: action.payload,\r\n      };\r\n    case CurrentTaskActionTypes.COMPLETE_CURRENT_TASK_FAILURE:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskCompleting: false,\r\n        currentTaskCompletionMessage: action.payload,\r\n        isCurrentTaskCompleting: false,\r\n      };\r\n    case CurrentTaskActionTypes.DELETE_CURRENT_TASK_START:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskDeleting: true,\r\n        currentTaskDeletionMessage: null,\r\n      };\r\n    case CurrentTaskActionTypes.DELETE_CURRENT_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskDeleting: false,\r\n        currentTaskDeletionMessage: action.payload,\r\n      };\r\n    case CurrentTaskActionTypes.DELETE_CURRENT_TASK_FAILURE:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskDeleting: false,\r\n        currentTaskDeletionMessage: action.payload,\r\n      };\r\n    case CurrentTaskActionTypes.DELETE_STEP:\r\n      let updatedSteps = state.currentTaskSteps.filter(\r\n        (step) => step._id != action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        currentTaskSteps: updatedSteps,\r\n      };\r\n    case CurrentTaskActionTypes.UPDATE_CURRENT_TASK_START:\r\n      return {\r\n        currentTaskUpdating: true,\r\n      };\r\n    case CurrentTaskActionTypes.UPDATE_CURRENT_TASK_SUCCESS:\r\n      return {\r\n        currentTaskUpdating: false,\r\n        currentTaskUpdateMessage: action.payload\r\n\r\n      };\r\n    case CurrentTaskActionTypes.UPDATE_CURRENT_TASK_FAILURE:\r\n      return {\r\n        currentTaskUpdating: false,\r\n        errorMessage: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentTaskReducer;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-step\\current-step.reducer.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-step\\current-step.sagas.js",["1591"],"import { all, call, put, takeLatest, select, delay} from \"redux-saga/effects\";\r\nimport { selectCurrentTaskId } from \"../current-task/current-task.selectors\";\r\nimport {completeStepQuestionSuccess, fetchCurrentStepFailure, fetchCurrentStepSuccess, completeStepQuestionFailure, completeStepSuccess, completeStepFailure, deleteCurrentStepSuccess, deleteCurrentStepFailure, fetchCurrentStepStart } from \"./current-step.actions\";\r\nimport { selectCurrentStepId } from \"./current-step.selectors\";\r\nimport { CurrentStepActionTypes } from \"./current-step.types\";\r\nimport {deleteStepFromReducer} from '../current-task/current-task.actions'\r\n\r\nexport function* fetchCurrentStep({payload}){\r\n  try {\r\n      const stepId = payload\r\n      console.log(stepId)\r\n    let currentStep = yield fetch(`http://127.0.0.1:5000/step/${stepId}`)\r\n    currentStep = yield currentStep.json()\r\n    console.log(currentStep.step)\r\n    currentStep.done\r\n    ? yield put(fetchCurrentStepSuccess(currentStep.step))\r\n    : yield put(fetchCurrentStepFailure('CURRENT PROJECCT FETTCHING FAILED'))\r\n  } catch (error) {\r\n    fetchCurrentStepFailure(error)\r\n  }\r\n}\r\n\r\nexport function* completeStepQuestion({payload}){\r\n  const stepId = payload\r\n  try {\r\n    let stepQuestionCompletion = yield fetch(`http://127.0.0.1:5000/complete-step-question/${stepId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n    stepQuestionCompletion = yield stepQuestionCompletion.json()\r\n    stepQuestionCompletion.done ? \r\n    yield put(completeStepQuestionSuccess(stepQuestionCompletion.message)):\r\n    yield put(completeStepQuestionFailure(stepQuestionCompletion.error))\r\n    yield delay(500)\r\n    yield put(fetchCurrentStepStart(stepId))\r\n  } catch (error) {\r\n    yield put(completeStepQuestionFailure(error))\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function* completeStep({payload}){\r\n  let data = payload\r\n  const stepId = data.stepId\r\n  try {\r\n    let stepCompletion = yield fetch(`http://127.0.0.1:5000/complete-step/${stepId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    stepCompletion = yield stepCompletion.json()\r\n    stepCompletion.done ? \r\n    yield put(completeStepSuccess(stepCompletion.message)):\r\n    yield put(completeStepFailure(stepCompletion.error))\r\n  } catch (error) {\r\n    yield put(completeStepFailure(error))\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function* deleteStep({ payload }) {\r\n  try {\r\n    let stepId = payload;\r\n    let taskId = yield select(selectCurrentTaskId)\r\n    yield put(deleteStepFromReducer(stepId))\r\n    taskId = { taskId: taskId };\r\n    console.log(taskId);\r\n    let stepDeleteion = yield fetch(`http://127.0.0.1:5000/step/${stepId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(taskId),\r\n    });\r\n    stepDeleteion = yield stepDeleteion.json();\r\n    if (stepDeleteion.done) {\r\n      yield put(deleteCurrentStepSuccess(stepDeleteion.message));\r\n    } else {\r\n      yield put(deleteCurrentStepFailure(stepDeleteion.error));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(deleteCurrentStepFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onStepQuestionCompletionStart(){\r\n  yield takeLatest(CurrentStepActionTypes.COMPLETE_STEP_QUESTION_START, completeStepQuestion)\r\n}\r\n\r\nexport function* onStepCompletionStart(){\r\n  yield takeLatest(CurrentStepActionTypes.COMPLETE_STEP_START, completeStep)\r\n}\r\n\r\nexport function* onCurrentStepFetchStart(){\r\n  yield takeLatest(CurrentStepActionTypes.FETCH_CURRENT_STEP_START , fetchCurrentStep)\r\n}\r\n\r\nexport function* deleteCurrentStep(){\r\n  yield takeLatest(CurrentStepActionTypes.DELETE_CURRENT_STEP_START , deleteStep)\r\n}\r\n\r\nexport function* currentStepSagas() {\r\n  yield all([\r\n    call(onCurrentStepFetchStart),\r\n    call(onStepQuestionCompletionStart),\r\n    call(onStepCompletionStart),\r\n    call(deleteCurrentStep)\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.reducer.js",["1592"],"import { CurrentPurchaseOrderActionTypes } from \"./current-purchase-order.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  createPurchaseOrderStart: null,\r\n  createPurchaseOrderMessage: null,\r\n  currentPurchaseOrderFrom: null,\r\n  currentPurchaseOrderItem: null,\r\n  currentPurchaseOrderTotalAmount: null,\r\n  currentPurchaseOrderPaidAmount: null,\r\n  currentPurchaseOrderPurchasedItems: null,\r\n  currentPurchaseOrderId: null,\r\n  isCurrentPurchaseOrderBeingFetched: null,\r\n  currentPurchaseOrderMessage: null,\r\n  isPOitemBeingCreated: null,\r\n  poItemCreationMessage: null,\r\n};\r\n\r\nconst currentPurchaseOrderReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrentPurchaseOrderActionTypes.CREATE_PURCHASE_ORDER_START:\r\n      return {\r\n        ...state,\r\n        createPurchaseOrderStart: true,\r\n        createPurchaseOrderMessage: null,\r\n      };\r\n    case CurrentPurchaseOrderActionTypes.CREATE_PURCHASE_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createPurchaseOrderStart: false,\r\n        createPurchaseOrderMessage: action.payload,\r\n      };\r\n\r\n    case CurrentPurchaseOrderActionTypes.CREATE_PURCHASE_ORDER_FAILURE:\r\n      return {\r\n        createPurchaseOrderMessage: action.payload,\r\n        createPurchaseOrderStart: false,\r\n      };\r\n    case CurrentPurchaseOrderActionTypes.FETCH_CURRENT_PURCHASE_ORDER_START:\r\n      return {\r\n        isCurrentPurchaseOrderBeingFetched: true,\r\n      };\r\n    case CurrentPurchaseOrderActionTypes.FETCH_CURRENT_PURCHASE_ORDER_SUCCESS:\r\n      const {\r\n        _id,\r\n        orderFrom,\r\n        totalOrderAmount,\r\n        totalPaidAmount,\r\n        purchasedItem,\r\n      } = action.payload;\r\n      if(action.payload.purchasedItems){\r\n        const {purchasedItems} = action.payload\r\n      }\r\n      return {\r\n        isCurrentPurchaseOrderBeingFetched: false,\r\n        currentPurchaseOrderFrom: orderFrom,\r\n        currentPurchaseOrderId: _id,\r\n        currentPurchaseOrderItem: purchasedItem,\r\n        currentPurchaseOrderPaidAmount: totalPaidAmount,\r\n        currentPurchaseOrderTotalAmount: totalOrderAmount,\r\n        currentPurchaseOrderPurchasedItems: action.payload.purchasedItems,\r\n      };\r\n    case CurrentPurchaseOrderActionTypes.FETCH_CURRENT_PURCHASE_ORDER_FAILURE:\r\n      return {\r\n        isCurrentPurchaseOrderBeingFetched: false,\r\n        currentPurchaseOrderMessage: action.payload,\r\n      };\r\n    case CurrentPurchaseOrderActionTypes.CREATE_CURRENT_PO_ITEM_START:\r\n      return {\r\n        isPOitemBeingCreated: true,\r\n      };\r\n    case CurrentPurchaseOrderActionTypes.CREATE_CURRENT_PO_ITEM_SUCCESS:\r\n      return {\r\n        isPOitemBeingCreated: false,\r\n        poItemCreationMessage: action.payload,\r\n      };\r\n    case CurrentPurchaseOrderActionTypes.CREATE_CURRENT_PO_ITEM_FAILURE:\r\n      return {\r\n        isPOitemBeingCreated: false,\r\n        poItemCreationMessage: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentPurchaseOrderReducer;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.sagas.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.saga.js",["1593","1594","1595"],"import { all, call, put, takeLatest, select, delay} from \"redux-saga/effects\";\r\nimport { selectCurrentProjectId } from \"../current-project/current-project.selectors\";\r\nimport { fetchCurrentTaskStart } from \"../current-task/current-task.actions\";\r\nimport { fetchCurrentTask } from \"../current-task/current-task.sagas\";\r\nimport { selectUserId } from \"../user/user.selectors\";\r\nimport {createPOitemFailure, createPOitemSuccess, createPurchaseOrderFailure, createPurchaseOrderSuccess, fetchCurrentPurchaseOrderFailure, fetchCurrentPurchaseOrderStart, fetchCurrentPurchaseOrderSuccess} from './current-purchase-order.actions'\r\nimport { selectCurrentPOId } from \"./current-purchase-order.selector\";\r\nimport { CurrentPurchaseOrderActionTypes } from \"./current-purchase-order.types\";\r\n\r\nexport function* createPurchaseOrderStart({payload}){\r\n  try {\r\n      let data = payload\r\n      const projectId = yield select(selectCurrentProjectId)\r\n      const userId = yield select(selectUserId)\r\n      console.log(projectId)\r\n      const taskId = data.taskId\r\n      data['projectId'] = projectId\r\n      data['userId'] = userId\r\n      console.log(data)\r\n    let purchaseOrderCreation = yield fetch(`http://127.0.0.1:5000/create-purchase-order/${taskId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n      purchaseOrderCreation = yield purchaseOrderCreation.json()\r\n      purchaseOrderCreation.done ? \r\n      yield put(createPurchaseOrderSuccess(purchaseOrderCreation.message)):\r\n      yield put(createPurchaseOrderFailure('ERROR'))\r\n      // yield delay(500)\r\n      // yield put(fetchCurrentTaskStart(taskId)) \r\n  } catch (error) {\r\n      console.log(error)\r\n  }\r\n}\r\n\r\nexport function* fetchCurrentPOStart({payload}){\r\n    let POid = payload\r\n    try {\r\n        let PO = yield fetch(`http://127.0.0.1:5000/purchaseOrder/${POid}`)\r\n        PO = yield PO.json()\r\n        PO.done?\r\n        yield put(fetchCurrentPurchaseOrderSuccess(PO.PO)):\r\n        yield put(fetchCurrentPurchaseOrderFailure('error'))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* createPOitem({payload}){\r\n    let data = payload\r\n    let POid = data.poId\r\n    try {\r\n        \r\n        let POitem = yield fetch(`http://127.0.0.1:5000/create-purchase-order-items/${POid}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n      POitem = yield POitem.json()\r\n      POitem.done ? \r\n      yield put(createPOitemSuccess(POitem.message)):\r\n      yield put(createPOitemFailure('ERROR'))\r\n      yield delay(500)\r\n      yield put(fetchCurrentPurchaseOrderStart(POid))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* onCreatePurchaseOrderStart(){\r\n  yield takeLatest(CurrentPurchaseOrderActionTypes.CREATE_PURCHASE_ORDER_START , createPurchaseOrderStart)\r\n}\r\n\r\nexport function* onFetchCurrentPurchaseOrderStart(){\r\n    yield takeLatest(CurrentPurchaseOrderActionTypes.FETCH_CURRENT_PURCHASE_ORDER_START, fetchCurrentPOStart)\r\n}\r\n\r\nexport function* onCreatePOitemStart(){\r\n    yield takeLatest(CurrentPurchaseOrderActionTypes.CREATE_CURRENT_PO_ITEM_START, createPOitem)\r\n}\r\n\r\nexport function* currentPurchaseOrderSagas() {\r\n  yield all([\r\n    call(onCreatePurchaseOrderStart),\r\n    call(onFetchCurrentPurchaseOrderStart),\r\n    call(onCreatePOitemStart)\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.reducer.js",["1596"],"import { TaskActionTypes } from \"./all-tasks.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  createTaskStart: false,\r\n  createTaskSuccessful: false,\r\n  createTaskFail: false,\r\n  fetchTaskStart: false,\r\n  fetchTaskSuccess: false,\r\n  fetchTaskFailure: false,\r\n  errorMessage: undefined,\r\n  message: null,\r\n  tasks: null,\r\n};\r\n\r\nconst taskReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case TaskActionTypes.CLEAR_TASKS_DATA:\r\n      return {\r\n        createTaskStart: false,\r\n        createTaskSuccessful: false,\r\n        createTaskFail: false,\r\n        fetchTaskStart: false,\r\n        fetchTaskSuccess: false,\r\n        fetchTaskFailure: false,\r\n        errorMessage: undefined,\r\n        message: null,\r\n        tasks: null,\r\n      };\r\n    case TaskActionTypes.CREATE_TASK_START:\r\n      return {\r\n        ...state,\r\n        createTaskStart: true,\r\n        createTaskFail: false,\r\n        createTaskSuccessful: false,\r\n        errorMessage: null,\r\n      };\r\n    case TaskActionTypes.CREATE_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createTaskStart: false,\r\n        createTaskSuccessful: true,\r\n        message: \"TASK CREATED SUCCESSFULLY!\",\r\n      };\r\n\r\n    case TaskActionTypes.CREATE_TASK_FAILURE:\r\n      return {\r\n        ...state,\r\n        createTaskStart: false,\r\n        createTaskFail: true,\r\n        createTaskSuccessful: false,\r\n        errorMessage: action.payload,\r\n      };\r\n    case TaskActionTypes.FETCH_TASKS_START:\r\n      return {\r\n        ...state,\r\n        fetchTaskStart: true,\r\n        fetchTaskFailure: false,\r\n        fetchTaskSuccess: false,\r\n      };\r\n    case TaskActionTypes.FETCH_TASKS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetchTaskStart: false,\r\n        fetchTaskSuccess: true,\r\n        tasks: action.payload,\r\n      };\r\n    case TaskActionTypes.FETCH_TASKS_START:\r\n      return {\r\n        ...state,\r\n        fetchTaskStart: false,\r\n        fetchTaskFailure: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.reducer.js",["1597","1598"],"import { ProjectActionTypes } from \"./all-projects.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  createProjectStart: false,\r\n  createProjectSucessful: false,\r\n  createProjectFail: false,\r\n  fetchProjectStart: false,\r\n  fetchProjectSuccess: false,\r\n  fetchProjectFailure: false,\r\n  errorMessage: undefined,\r\n  message: null,\r\n  projects: null,\r\n  isProjectTemplateBeingCreated: null,\r\n};\r\n\r\nconst projectReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ProjectActionTypes.CREATE_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        createProjectStart: true,\r\n        createProjectFail: false,\r\n        createProjectSuccesful: false,\r\n        errorMessage: null,\r\n      };\r\n    case ProjectActionTypes.CREATE_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createProjectStart: false,\r\n        createProjectSuccessful: true,\r\n        message: \"PROJECT CREATED SUCCESSFULLY!\",\r\n      };\r\n\r\n    case ProjectActionTypes.CREATE_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        createProjectStart: false,\r\n        createProjectFail: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    case ProjectActionTypes.FETCH_PROJECTS_START:\r\n      return {\r\n        ...state,\r\n        fetchProjectStart: true,\r\n        fetchProjectFailure: false,\r\n        fetchProjectSuccess: false,\r\n      };\r\n    case ProjectActionTypes.FETCH_PROJECTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetchProjectStart: false,\r\n        fetchProjectSuccess: true,\r\n        projects: action.payload,\r\n      };\r\n    case ProjectActionTypes.FETCH_PROJECTS_START:\r\n      return {\r\n        ...state,\r\n        fetchProjectStart: false,\r\n        fetchProjectFailure: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    case ProjectActionTypes.DELETE_PROJECT:\r\n      let updatedProjects = state.projects.filter(\r\n        (project) => project._id != action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        projects: updatedProjects,\r\n      };\r\n    case ProjectActionTypes.CREATE_PROJECT_TEMPLATE_START:\r\n      return {\r\n        ...state,\r\n        isProjectTemplateBeingCreated: true,\r\n      };\r\n    case ProjectActionTypes.CREATE_PROJECT_TEMPLATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isProjectTemplateBeingCreated: false,\r\n      };\r\n    case ProjectActionTypes.CREATE_PROJECT_TEMPLATE_FAILURE:\r\n      return {\r\n        ...state,\r\n        isProjectTemplateBeingCreated: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.actions.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.selectors.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\user\\user.actions.js",["1599","1600"],"import { UserActionTypes } from \"./user.types\"\r\n\r\nexport const signUpStart = (userCredentials) => {\r\n    console.log(userCredentials)\r\n    return({type: UserActionTypes.SIGN_UP_START,\r\n        payload: userCredentials})\r\n}\r\n\r\nexport const signUpSuccesful = (user) => ({\r\n    type: UserActionTypes.SIGN_UP_SUCCESS,\r\n    payload: user\r\n});\r\n\r\nexport const taskOwnerAndTradePartnerSignUpSuccessful = (message) => ({\r\n    type: UserActionTypes.TASK_OWNER_TRADE_PARTNER_SIGN_UP_SUCCESS,\r\n    payload: message\r\n})\r\n\r\nexport const signUpFail = (error) => ({\r\n    type: UserActionTypes.SIGN_UP_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const signInStart = (userCredentials) => ({\r\n    type: UserActionTypes.EMAIL_SIGN_IN_START,\r\n    payload: userCredentials\r\n})\r\n\r\nexport const signInSuccessful = (user) => ({\r\n    type: UserActionTypes.EMAIL_SIGN_IN_SUCCESS,\r\n    payload: user\r\n})\r\n\r\nexport const signInFailure = (error) => ({\r\n    type: UserActionTypes.EMAIL_SIGN_IN_FAILURE,\r\n    payload: error\r\n})\r\n\r\n\r\n\r\nexport const signOut = () => ({\r\n    type: UserActionTypes.USER_SIGN_OUT\r\n})\r\n\r\nexport const setUserPermission = ({projectList, userId}) => {\r\n    console.log(projectList, userId, 'user action material')\r\n    var permission\r\n    projectList.map((user) => {\r\n        console.log(user.user._id)\r\n        if(user.user._id == userId){\r\n            permission =  user.permission\r\n            console.log(permission)\r\n        }\r\n    })\r\n    return({\r\n        type: UserActionTypes.SET_USER_ROLE,\r\n        payload: permission\r\n    })\r\n}","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.selectors.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-project\\current-project.actions.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-project\\current-project.selectors.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-task\\current-task.actions.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.actions.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.selector.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-task\\current-task.selectors.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-step\\current-step.actions.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-step\\current-step.selectors.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.actions.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-step-form\\create-step-form.component.jsx",["1601"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStepStart } from \"../../redux/all-steps/all-steps.actions\";\r\nimport { createTaskStart} from \"../../redux/all-tasks/all-tasks.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\n\r\n\r\nclass CreateStepForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stepDetails: {\r\n        stepName: '',\r\n        questionStatement: '',\r\n        questionType: '',\r\n        taskId: this.props.taskId.toString()\r\n      },\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let step = this.state.stepDetails;\r\n    step[name] = value;\r\n    this.setState({ stepDetails: step });\r\n  };\r\n\r\n  createStep = (e) => {\r\n    e.preventDefault();\r\n    let stepDetails = this.state.stepDetails;\r\n    const {createStep} = this.props;\r\n    createStep(stepDetails)\r\n    console.log(stepDetails)\r\n    // window.location.reload()\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div style={{padding:\"10px\"}}>\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n          onSubmit={this.createStep}\r\n        >\r\n          <div>\r\n            <label htmlFor=\"stepName\"> Step Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.stepDetails.stepName}\r\n              name=\"stepName\"\r\n              id=\"stepName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required/>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"questionStatement\"> Question Statement: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.stepDetails.questionStatement}\r\n              name=\"questionStatement\"\r\n              id=\"questionStatement\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"questionType\"> Question Type </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.stepDetails.questionType}\r\n              name=\"questionType\"\r\n              id=\"questionType\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              />\r\n          </div>\r\n          \r\n          <div>\r\n            <input type=\"submit\" value=\"Create Step\" />\r\n   \r\n          </div>\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createStep: (stepDetails) => dispatch(createStepStart(stepDetails))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateStepForm);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\tasks-list\\tasks-list.component.jsx",["1602"],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\steps-list\\steps-list.component.jsx",["1603"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  completeStepQuestionStart,\r\n  deleteCurrentStepStart,\r\n} from \"../../redux/current-step/current-step.actions\";\r\nimport StepItem from \"../step-item/step-item.component\";\r\nimport { LongButton } from \"./steps-list.component.styles\";\r\n\r\nclass StepList extends React.Component {\r\n  render() {\r\n    let steps = this.props.steps;\r\n    console.log(steps);\r\n    if (!steps) {\r\n      steps = [];\r\n    }\r\n    return (\r\n      <>\r\n        <div>\r\n          {steps.map(\r\n            (\r\n              {\r\n                stepName,\r\n                questionStatement,\r\n                _id,\r\n                isStepDone,\r\n                isQuestionAnswered,\r\n              },\r\n              index\r\n            ) => {\r\n              console.log(_id);\r\n              const stepDetails = {\r\n                stepName,\r\n                questionStatement,\r\n                _id,\r\n                isStepDone,\r\n                isQuestionAnswered,\r\n                index,\r\n              };\r\n              return <StepItem key={_id} stepDetails={stepDetails} />;\r\n            }\r\n          )}\r\n        </div>\r\n        <center>\r\n          <LongButton onClick={this.props.completeTask}>\r\n            Complete Task\r\n          </LongButton>\r\n        </center>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  completeStepQuestion: (stepId) => dispatch(completeStepQuestionStart(stepId)),\r\n  deleteStep: (stepId) => dispatch(deleteCurrentStepStart(stepId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StepList);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-task-form\\create-task-form.component.jsx",["1604","1605"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  clearTaskData,\r\n  createTaskStart,\r\n} from \"../../redux/all-tasks/all-tasks.actions\";\r\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  Overlay,\r\n  GreenButton,\r\n  StepDiv,\r\n  SmallCircle,\r\n} from \"./create-task-form.styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { selectCreateTaskStart } from \"../../redux/all-tasks/all-tasks.selectors\";\r\nimport { selectCreateTaskSuccessful } from \"./../../redux/all-tasks/all-tasks.selectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\nimport dustbin from \"../../assets/dustbin.png\";\r\n\r\nclass CreateTaskForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskDetails: {\r\n        taskName: \"\",\r\n        taskStartDate: \"\",\r\n        taskEndDate: \"\",\r\n        projectId: this.props.match.params.projectId.toString(),\r\n      },\r\n      stepDetails: {\r\n        stepName: \"\",\r\n        questionStatement: \"\",\r\n      },\r\n      active: \"Info\",\r\n      steps: [],\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let task = this.state.taskDetails;\r\n    task[name] = value;\r\n\r\n    this.setState({ taskDetails: task });\r\n    console.log(this.state);\r\n  };\r\n\r\n  handleOnStepChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let step = this.state.stepDetails;\r\n    step[name] = value;\r\n    console.log(this.state);\r\n    this.setState({ stepDetails: step }, () => {\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  handleOnStepSubmit = (e) => {\r\n    console.log(\"step submit\");\r\n    e.preventDefault();\r\n    let steps = this.state.steps;\r\n    let step = this.state.stepDetails;\r\n    steps.push(step);\r\n    this.setState(\r\n      { steps: steps, stepDetails: { stepName: \"\", questionStatement: \"\" } },\r\n      () => {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n\r\n  createTask = async (e) => {\r\n    e.preventDefault();\r\n    let taskDetails = this.state.taskDetails;\r\n    taskDetails[\"steps\"] = this.state.steps;\r\n    console.log(taskDetails);\r\n    console.log(taskDetails);\r\n    this.props.createTask(taskDetails);\r\n  };\r\n\r\n  handleOnClick = (e) => {\r\n    let { key } = e.target.dataset;\r\n\r\n    this.setState({\r\n      active: key,\r\n    });\r\n  };\r\n\r\n  removeStep = (index) => {\r\n    console.log(\"remove\", index, this.state.steps[index]);\r\n    let steps = this.state.steps;\r\n    steps.splice(index, 1);\r\n\r\n    this.setState({ steps: steps }, () => {\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.clearTaskData();\r\n  }\r\n\r\n  render() {\r\n    let { active } = this.state;\r\n    let { projectId } = this.state.taskDetails;\r\n\r\n    console.log(this.props.createTaskStart, this.props.createTaskSuccessful);\r\n\r\n    if (this.props.createTaskStart && !this.props.createTaskSuccessful) {\r\n      return <Spinner />;\r\n    } else if (this.props.createTaskSuccessful) {\r\n      this.props.history.push(`/project/${projectId}`);\r\n    }\r\n\r\n    return (\r\n      <Overlay>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n            <Link\r\n              to={`/project/${projectId}`}\r\n              style={{ textDecoration: \"none\", color: \"#205284\" }}\r\n            >\r\n              Cancel\r\n            </Link>\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n            New Task\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"flex-end\"\r\n            color=\"#205284\"\r\n            onClick={this.createTask}\r\n          >\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n        <LowerNavDiv>\r\n          <OneHalfDiv\r\n            data-key=\"Info\"\r\n            onClick={this.handleOnClick}\r\n            active={active === \"Info\"}\r\n          >\r\n            INFO\r\n          </OneHalfDiv>\r\n          <OneHalfDiv\r\n            data-key=\"Steps\"\r\n            onClick={this.handleOnClick}\r\n            active={active === \"Steps\"}\r\n          >\r\n            STEPS\r\n          </OneHalfDiv>\r\n        </LowerNavDiv>\r\n\r\n        {this.state.active === \"Info\" ? (\r\n          <form\r\n            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            onChange={(e) => this.handleOnChange(e)}\r\n          >\r\n            <div>\r\n              <LongInput\r\n                type=\"text\"\r\n                value={this.state.taskDetails.taskName}\r\n                name=\"taskName\"\r\n                id=\"taskName\"\r\n                placeholder=\"Task Title\"\r\n                onChange={(e) => this.handleOnChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <Container>\r\n              <InfoDiv>\r\n                <InfoTitle>Start Date</InfoTitle>\r\n                <InfoInput\r\n                  type=\"date\"\r\n                  value={this.state.taskDetails.taskStartDate}\r\n                  name=\"taskStartDate\"\r\n                  id=\"taskStartDate\"\r\n                  onChange={(e) => this.handleOnChange(e)}\r\n                  required\r\n                />\r\n              </InfoDiv>\r\n\r\n              <InfoDiv>\r\n                <InfoTitle>End Date</InfoTitle>\r\n                <InfoInput\r\n                  type=\"date\"\r\n                  value={this.state.taskDetails.taskEndDate}\r\n                  name=\"taskEndDate\"\r\n                  id=\"taskEndDate\"\r\n                  onChange={(e) => this.handleOnChange(e)}\r\n                  required\r\n                />\r\n              </InfoDiv>\r\n            </Container>\r\n          </form>\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <LongInput\r\n                type=\"text\"\r\n                value={this.state.taskDetails.taskName}\r\n                name=\"taskName\"\r\n                id=\"taskName\"\r\n                placeholder=\"Task Title\"\r\n                onChange={(e) => this.handleOnChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", padding: \"1em 0em 0em 1em\" }}>\r\n              <InfoTitle style={{ fontSize: \"1em\" }}>Add Step</InfoTitle>\r\n            </div>\r\n\r\n            <div>\r\n              <LongInput\r\n                type=\"text\"\r\n                value={this.state.stepDetails.stepName}\r\n                name=\"stepName\"\r\n                id=\"stepName\"\r\n                placeholder=\"Step Title\"\r\n                onChange={(e) => this.handleOnStepChange(e)}\r\n                required\r\n              />\r\n              <LongInput\r\n                type=\"text\"\r\n                value={this.state.stepDetails.questionStatement}\r\n                name=\"questionStatement\"\r\n                id=\"questionStatement\"\r\n                placeholder=\"Step Description\"\r\n                onChange={(e) => this.handleOnStepChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <GreenButton onClick={this.handleOnStepSubmit}>\r\n                Add Step\r\n              </GreenButton>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", padding: \"1em 0em 0em 1em\" }}>\r\n              <InfoTitle style={{ fontSize: \"1em\" }}>Steps</InfoTitle>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              {this.state.steps.map((step, index) => {\r\n                console.log(step, \"hi\");\r\n                return (\r\n                  <>\r\n                    <StepDiv>\r\n                      <div>\r\n                        <InfoTitle style={{ fontSize: \"1em\" }}>\r\n                          {step.stepName}\r\n                        </InfoTitle>\r\n                        <InfoTitle\r\n                          style={{ fontSize: \"1em\", fontWeight: \"300\" }}\r\n                        >\r\n                          {step.questionStatement}\r\n                        </InfoTitle>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        onClick={() => {\r\n                          this.removeStep(index);\r\n                        }}\r\n                      >\r\n                        <img src={dustbin} />\r\n                      </div>\r\n                    </StepDiv>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  createTaskStart: selectCreateTaskStart,\r\n  createTaskSuccessful: selectCreateTaskSuccessful,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createTask: (taskDetails) => dispatch(createTaskStart(taskDetails)),\r\n  fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId)),\r\n  clearTaskData: () => dispatch(clearTaskData()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CreateTaskForm));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-project-form\\create-project-form.component.jsx",["1606","1607"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createProjectStart,\r\n  createProjectTemplateStart,\r\n  fetchProjectsStart,\r\n} from \"../../redux/all-projects/all-projects.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\r\nimport {\r\n  FormDiv,\r\n  FormInput,\r\n  FormLabel,\r\n  FormSelect,\r\n  FormButton,\r\n  FormHeading,\r\n  NavBar,\r\n  OneThirdDiv,\r\n} from \"./create-project-form.styles\";\r\nimport downArrow from \"../../assets/down-arrow.png\";\r\nimport { selectCurrentOrganisationId } from \"../../redux/organisation/organisation.selectors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass CreateProjectForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectDetails: {\r\n        projectName: \"\",\r\n        projectStatus: \"\",\r\n        projectBudget: 0,\r\n        projectLocation: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let project = this.state.projectDetails;\r\n    project[name] = value;\r\n\r\n    this.setState({ projectDetails: project });\r\n  };\r\n\r\n  createProject = (e) => {\r\n    e.preventDefault();\r\n    let projectDetails = this.state.projectDetails;\r\n    this.props.createProject(projectDetails);\r\n    this.props.history.push(`/all-projects/${this.props.orgId}`);\r\n  };\r\n\r\n  createProjectTemplate = (e) => {\r\n    e.preventDefault();\r\n    let projectDetails = this.state.projectDetails;\r\n    console.log(projectDetails);\r\n    this.props.createProjectTemplate(projectDetails);\r\n    this.props.addProject();\r\n  };\r\n\r\n  render() {\r\n    const { orgId } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n            <Link\r\n              to={`/all-projects/${orgId}`}\r\n              style={{ textDecoration: \"none\", color: \"#205284\" }}\r\n            >\r\n              Cancel\r\n            </Link>\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n            New Project\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"flex-end\"\r\n            color=\"#205284\"\r\n            onClick={this.createProject}\r\n          >\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n        <FormDiv\r\n          onChange={(e) => this.handleOnChange(e)}\r\n          style={{ padding: \"1em\", boxSizing: \"border-box\" }}\r\n        >\r\n          <div>\r\n            <FormLabel htmlFor=\"projectName\">\r\n              {\" \"}\r\n              What is the name of the Project?{\" \"}\r\n            </FormLabel>\r\n            <br />\r\n            <FormInput\r\n              type=\"text\"\r\n              placeholder=\"Project Name\"\r\n              value={this.state.projectDetails.projectName}\r\n              name=\"projectName\"\r\n              id=\"projectName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <FormLabel htmlFor=\"projectStatus\">\r\n              {\" \"}\r\n              What is the project status?{\" \"}\r\n            </FormLabel>\r\n            <br />\r\n            <FormSelect\r\n              style={{ backgroundImage: `url(${downArrow})` }}\r\n              value={this.state.projectDetails.projectStatus}\r\n              name=\"projectStatus\"\r\n              id=\"projectStatus\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            >\r\n              <option style={{ color: \"#666666\" }} value=\"\">\r\n                Select Status\r\n              </option>\r\n              <option value=\"ACTIVE\">Active</option>\r\n              <option value=\"PLANNED\">Planned</option>\r\n              <option value=\"COMPLETED\">Completed</option>\r\n            </FormSelect>\r\n          </div>\r\n          <div>\r\n            <FormLabel htmlFor=\"projectType\">\r\n              {\" \"}\r\n              What type of project is this?{\" \"}\r\n            </FormLabel>\r\n            <br />\r\n            <FormSelect\r\n              style={{ backgroundImage: `url(${downArrow})` }}\r\n              value={this.state.projectDetails.projectType}\r\n              name=\"projectType\"\r\n              id=\"projectType\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Project Type</option>\r\n              <option value=\"REMODEL\">Remodel</option>\r\n              <option value=\"NEWBUILD\">New Build</option>\r\n              <option value=\"ADDITION\">Addition</option>\r\n            </FormSelect>\r\n          </div>\r\n          <div>\r\n            <FormLabel htmlFor=\"propertyType\">\r\n              {\" \"}\r\n              What is the type of property?{\" \"}\r\n            </FormLabel>\r\n            <br />\r\n            <FormSelect\r\n              style={{ backgroundImage: `url(${downArrow})` }}\r\n              value={this.state.projectDetails.propertyType}\r\n              name=\"propertyType\"\r\n              id=\"propertyType\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Property Type</option>\r\n              <option value=\"OFFICE\">Office</option>\r\n              <option value=\"RETAIL\">Retail</option>\r\n              <option value=\"INDUSTRIAL\">Industrial</option>\r\n              <option value=\"HOSPITALITY\">Hospitality</option>\r\n              <option value=\"RESIDENTIAL\">Residential</option>\r\n              <option value=\"LAND\">Land</option>\r\n              <option value=\"AGRICULTURAL\">Agricultural</option>\r\n              <option value=\"ENTERTAINMENT\">Entertainment</option>\r\n            </FormSelect>\r\n          </div>\r\n          <div>\r\n            <FormLabel htmlFor=\"projectName\">\r\n              {\" \"}\r\n              What is the name of the project?{\" \"}\r\n            </FormLabel>\r\n            <br />\r\n            <FormInput\r\n              type=\"text\"\r\n              placeholder=\"Project Name\"\r\n              value={this.state.projectDetails.projectName}\r\n              name=\"projectName\"\r\n              id=\"projectName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormLabel htmlFor=\"projectLocation\"> Location </FormLabel>\r\n            <br />\r\n            <FormInput\r\n              type=\"text\"\r\n              placeholder=\"Street Address\"\r\n              value={this.state.projectDetails.projectLocation}\r\n              name=\"projectLocation\"\r\n              id=\"projectLocation\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormLabel htmlFor=\"projectBudget\"> Project Budget </FormLabel>\r\n            <br />\r\n            <FormInput\r\n              type=\"number\"\r\n              value={this.state.projectDetails.projectBudget}\r\n              name=\"projectBudget\"\r\n              id=\"projectBudget\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormLabel htmlFor=\"projectFinishDate\">\r\n              {\" \"}\r\n              Estimated Finish Date{\" \"}\r\n            </FormLabel>\r\n            <br />\r\n            <FormInput\r\n              type=\"date\"\r\n              placeholder=\"Finish Date\"\r\n              value={this.state.projectDetails.projectFinishDate}\r\n              name=\"projectFinishDate\"\r\n              id=\"projectFinishDate\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n        </FormDiv>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  name: selectCurrentUserFirstName,\r\n  orgId: selectCurrentOrganisationId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createProject: (projectDetails) =>\r\n    dispatch(createProjectStart(projectDetails)),\r\n  createProjectTemplate: (projectDetails) =>\r\n    dispatch(createProjectTemplateStart(projectDetails)),\r\n  fetchProjects: () => dispatch(fetchProjectsStart()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CreateProjectForm));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-list\\projects-list.component.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-orders-list.component.jsx",["1608","1609","1610","1611","1612","1613","1614"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { BigText, SmallText } from \"../project-item/project-item.styles\";\r\nimport SearchBar from \"../search-bar/search-bar.component\";\r\nimport {\r\n  POSummaryDiv,\r\n  PODetailsDiv,\r\n  PODiv,\r\n  POName,\r\n  PONameDiv,\r\n  PONumber,\r\n  TinyText,\r\n  POGreyHeading,\r\n} from \"./purchase-orders-list.styles\";\r\n\r\nclass PurchaseOrderList extends React.Component {\r\n  render() {\r\n    let purchaseOrders = this.props.purchaseOrders;\r\n    console.log(purchaseOrders);\r\n    let purchasedItemsAmounts = [];\r\n    let purchasedItemPaid = [];\r\n    let openAmount = 0;\r\n\r\n    purchaseOrders.map(({ purchasedItems, paid }) => {\r\n      let Amount = 0;\r\n      purchasedItems.map(({ itemNumber, itemValue }) => {\r\n        Amount += itemNumber * itemValue;\r\n      });\r\n      purchasedItemsAmounts.push(Amount);\r\n      if (paid) {\r\n        purchasedItemPaid.push(Amount);\r\n      } else {\r\n        purchasedItemPaid.push(0);\r\n      }\r\n    });\r\n\r\n    console.log(purchasedItemsAmounts, purchasedItemPaid);\r\n    const sum = (accumulator, currentValue) => accumulator + currentValue;\r\n    openAmount = purchasedItemsAmounts.reduce(sum);\r\n\r\n    if (!purchaseOrders) {\r\n      purchaseOrders = [];\r\n    }\r\n    return (\r\n      <div style={{ marginBottom: \"5em\" }}>\r\n        <POGreyHeading>\r\n          <div>OPEN: ${openAmount}</div>\r\n          <div>STATUS</div>\r\n        </POGreyHeading>\r\n        {purchaseOrders.map(\r\n          (\r\n            {\r\n              orderFrom,\r\n              totalOrderAmount,\r\n              totalPaidAmount,\r\n              _id,\r\n              PoTitle,\r\n              CoTitle,\r\n            },\r\n            index\r\n          ) => {\r\n            return (\r\n              <Link\r\n                to={\r\n                  this.props.VPO\r\n                    ? `/changeOrder/${_id}`\r\n                    : `/purchaseOrder/${_id}`\r\n                }\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <PODiv key={_id}>\r\n                  <PONameDiv>\r\n                    <TinyText>\r\n                      {this.props.VPO ? `VPO` : `PO`} #{index + 1000}\r\n                    </TinyText>\r\n                    <BigText>{this.props.VPO ? CoTitle : PoTitle}</BigText>\r\n                  </PONameDiv>\r\n                  <PODetailsDiv>\r\n                    <BigText>\r\n                      {purchasedItemsAmounts[index] === purchasedItemPaid[index]\r\n                        ? \"Paid\"\r\n                        : \"Open\"}\r\n                    </BigText>\r\n                  </PODetailsDiv>\r\n                </PODiv>\r\n              </Link>\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseOrderList);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\sign-in-form\\sign-in-form.component.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.component.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-purchase-order-item-form\\create-purchase-order-item-form.component.jsx",[],["1615","1616"],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\user\\user.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.actions.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-project\\current-project.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-tasks\\all-tasks.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-task\\current-task.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\all-projects\\all-projects.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.selector.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-step\\current-step.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\conformation-message\\comformation-message.component.jsx",[],["1617","1618"],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\hamburger\\hamburger.component.jsx",["1619"],"import react from 'react';\r\nimport {HamburgerDiv,HamburgerLine} from \"./hamburger.styles\";\r\n\r\nexport const Hamburger = () => {\r\n    return (\r\n        <HamburgerDiv>\r\n            <HamburgerLine/>\r\n            <HamburgerLine/>\r\n            <HamburgerLine/>\r\n        </HamburgerDiv>\r\n    )\r\n}","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-item\\project-item.component.jsx",["1620"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { deleteCurrentProjectStart } from '../../redux/current-project/current-project.actions';\r\nimport { DeleteButton } from '../delete-button/delete-button.styles';\r\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, UpperDiv, LowerDiv, Image, ProgressCircle} from \"./project-item.styles\";\r\nimport checkCircle from '../../assets/check-circle.png';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport check from '../../assets/check_box.png'\r\n\r\nclass ProjectItem extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.id,\r\n            projectName: this.props.projectName,\r\n            totalTasks: this.props.totalTasks,\r\n            completedTasks: this.props.completedTasks, \r\n            projectBudget: this.props.projectBudget,\r\n            published: this.props.published\r\n        }\r\n    }\r\n    deleteProject(e){\r\n        console.log(\"delete button\", this.state.id);\r\n        let projectId = this.state.id\r\n        this.props.deleteProject(projectId);\r\n        window.location.reload()\r\n    }\r\n    render() {\r\n        const {id, published, projectName, totalTasks, completedTasks,projectBudget} = this.state;\r\n        let progress = completedTasks/totalTasks*100;\r\n        progress = progress.toFixed(0)\r\n\r\n        if (isNaN(progress)){\r\n            progress = 0;\r\n        }\r\n\r\n        return (\r\n            <Link to={`/project/${id}`} style={{textDecoration:'none'}}>\r\n                <ProjectDiv key={id}>\r\n                    <LeftDiv>\r\n                            <UpperDiv>\r\n                                <BigText>{projectName}</BigText>\r\n                                <SmallText>Total: ${projectBudget}</SmallText>\r\n                            </UpperDiv>\r\n                            <LowerDiv>\r\n                                {published? <div style={{display:'flex', flexDirection: 'row', justifyContent:'center', alignItems:'center'}}>\r\n                                    <Image src = {checkCircle}/>PUBLISHED\r\n                                </div>:null}\r\n                                \r\n                            </LowerDiv>\r\n                    </LeftDiv>\r\n                    \r\n                    <RightDiv>\r\n                        <UpperDiv>\r\n                            <ProgressCircle>\r\n                                <CircularProgressbar value={progress} text={`${progress}%`}\r\n                                styles={buildStyles({\r\n                                    // Rotation of path and trail, in number of turns (0-1)\r\n                                    rotation: 1,\r\n                                \r\n                                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                    strokeLinecap: 'round',\r\n                                \r\n                                    // Text size\r\n                                    textSize: '1em',\r\n                                \r\n                                    // How long animation takes to go from one percentage to another, in seconds\r\n                                    pathTransitionDuration: 0.5,\r\n                                \r\n                                    // Can specify path transition in more detail, or remove it entirely\r\n                                    // pathTransition: 'none',\r\n                                \r\n                                    // Colors\r\n                                    pathColor: '#429629',\r\n                                    textColor: '#666666'\r\n                                  })}/>\r\n\r\n                            </ProgressCircle>\r\n                            \r\n                        </UpperDiv>\r\n                        <LowerDiv>\r\n                            <div style={{color: '#BCC5D3', fontWeight: 'normal', display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\r\n                                <Image src={check}/>\r\n                                {completedTasks}/{totalTasks} TASKS\r\n                            </div>\r\n\r\n                            {/* <DeleteButton onClick={(e)=>this.deleteProject(e)}>DELETE</DeleteButton> */}\r\n                            \r\n                        </LowerDiv>\r\n                    </RightDiv>\r\n                </ProjectDiv>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteProject: (projectId) => dispatch(deleteCurrentProjectStart(projectId))\r\n  });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectItem)\r\n\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-item\\project-item.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\hamburger\\hamburger.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\task-nav\\task-nav.component.jsx",["1621","1622","1623"],"import React from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentOrganisationId } from \"../../redux/organisation/organisation.selectors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  SearchDiv,\r\n  NavBar,\r\n  Heading,\r\n  Back,\r\n  Image,\r\n  OneThirdDiv,\r\n} from \"./task-nav.styles\";\r\nimport backArrow from \"../../assets/backArrowBlack.png\";\r\nimport search from \"../../assets/navsearch.png\";\r\n\r\nexport const TaskNav = ({ title, toggleSearch, orgId }) => {\r\n  const org = useSelector((state) => state.organisation);\r\n  console.log(org.organisationId);\r\n  return (\r\n    <NavBar>\r\n      <OneThirdDiv align=\"flex-start\" width=\"1\">\r\n        <Back>\r\n          <Link\r\n            to={`/all-projects/${org.organisationId}`}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n          >\r\n            <Image src={backArrow} /> Projects\r\n          </Link>\r\n        </Back>\r\n      </OneThirdDiv>\r\n\r\n      <OneThirdDiv align=\"center\" width=\"1.5\">\r\n        <Heading> {title} </Heading>\r\n      </OneThirdDiv>\r\n\r\n      <OneThirdDiv align=\"flex-end\" width=\"1\" onClick={toggleSearch}>\r\n        <SearchDiv src={search} />\r\n      </OneThirdDiv>\r\n    </NavBar>\r\n  );\r\n};\r\n\r\nexport default TaskNav;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\task-nav\\task-nav.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\task-item\\task-item.component.jsx",["1624","1625","1626","1627","1628","1629"],"import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Image, DropDownContent, DropDownOption , SmallCircle, TaskDiv, LeftDiv, RightDiv, BigText, SmallText, Circle, ProgressBar, Progress, ProgressDiv} from \"./task-item.styles\";\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { deleteCurrentTaskStart } from \"../../redux/current-task/current-task.actions\";\r\nimport { CheckBox } from \"../checkbox/checkbox.component\";\r\nimport { DeleteButton } from \"../delete-button/delete-button.styles\";\r\nimport removeImage from \"../../assets/remove.png\"\r\n\r\n\r\nclass TaskItem extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.dropdownContainer = React.createRef();\r\n        this.state = {\r\n            taskDetails: this.props.taskDetails, \r\n            removeDropdownSwitch: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside = (event) => {\r\n        if (\r\n          this.dropdownContainer.current &&\r\n          !this.dropdownContainer.current.contains(event.target)\r\n        ) {\r\n          this.setState({\r\n            removeDropdownSwitch: false,\r\n          });\r\n        }\r\n      };\r\n\r\n    toggleRemoveDropdown = () => {\r\n        this.setState((prevState)=>({\r\n            removeDropdownSwitch: !prevState.removeDropdownSwitch\r\n        }))\r\n    }\r\n\r\n    deleteTask = (e) => {\r\n        e.preventDefault()\r\n        \r\n        this.props.deleteTask(e.target.dataset.id);\r\n\r\n        window.location.reload()\r\n    }\r\n    \r\n    render (){\r\n        const {_id, index, taskName, completionPercentage, completedSteps, totalSteps, isTaskDone} = this.state.taskDetails;\r\n        console.log(this.state.taskDetails)\r\n        return (\r\n            <TaskDiv>\r\n                <LeftDiv>\r\n                <Link to={`/task/${_id}`} style={{textDecoration:'none'}}> \r\n                    <SmallText>TASK - {index + 1}</SmallText>\r\n                    <BigText>{taskName}</BigText>\r\n                    <ProgressDiv>\r\n                        <ProgressBar>\r\n                            <Progress style={{width:`${completionPercentage}%`}}/>\r\n                        </ProgressBar>\r\n                        <SmallText style={{color:\"#666666\"}}> \r\n                        {completedSteps}/{totalSteps}  &nbsp;\r\n                        ({isNaN(completedSteps/totalSteps*100)?0:completedSteps/totalSteps*100}%)\r\n                        </SmallText>\r\n                    </ProgressDiv>\r\n                    </Link>\r\n                </LeftDiv>\r\n                \r\n                <RightDiv>\r\n                    {\r\n                        isTaskDone? <CheckBox/>: <Circle/>\r\n                    }\r\n  \r\n                </RightDiv>\r\n            </TaskDiv>\r\n        \r\n    )}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    \r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    deleteTask : (taskId) => dispatch(deleteCurrentTaskStart(taskId))\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TaskItem);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\task-item\\task-item.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\lower-nav-bar\\lower-nav-bar.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\lower-nav-bar\\lower-nav-bar.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\project-purchase-orders\\project-purchase-orders.jsx",["1630","1631"],"import React, { Component } from \"react\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport PurchaseOrderList from \"../../components/purchase-orders-list/purchase-orders-list.component\";\r\nimport {\r\n  selectCurrentProjectName,\r\n  selectCurrentProjectPurchaseOrders,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport LowerNavBar from \"../../components/lower-nav-bar/lower-nav-bar.component\";\r\nimport PurchaseOrderListContainer from \"../../components/purchase-orders-list/purchase-order-lists.container\";\r\nimport { TaskNav } from \"../../components/task-nav/task-nav.component\";\r\nimport SearchBar from \"../../components/search-bar/search-bar.component\";\r\nimport ToggleButton from \"../../components/toggle-button/toggle-button.component\";\r\nimport NoResult from \"../../components/no-result/no-result.component\";\r\nimport PurchaseOrdersListAdmin from \"../../components/purchase-orders-list-admin/purchase-orders-list-admin.component\";\r\n\r\nclass ProjectPurchaseOrders extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      POsList: \"\",\r\n      search: false,\r\n      adminSwitch: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const projectId = this.props.match.params.projectId;\r\n    this.props.fetchProject(projectId);\r\n    this.setState({ POsList: this.props.purchaseOrders });\r\n  }\r\n\r\n  toggleSearch = () => {\r\n    this.setState((prevState) => ({\r\n      search: !prevState.search,\r\n    }));\r\n  };\r\n\r\n  adminToggle = () => {\r\n    this.setState((prevState) => ({\r\n      adminSwitch: !prevState.adminSwitch,\r\n    }));\r\n  };\r\n  search = (searchedText) => {\r\n    let temp = this.props.purchaseOrders;\r\n\r\n    if (searchedText) {\r\n      temp = temp.filter(({ purchasedItem }) => {\r\n        return purchasedItem.toLowerCase().includes(searchedText.toLowerCase());\r\n      });\r\n    }\r\n\r\n    this.setState({ POsList: temp });\r\n  };\r\n\r\n  render() {\r\n    const { projectName, purchaseOrders } = this.props;\r\n    const { POsList, search } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <TaskNav title={projectName} toggleSearch={this.toggleSearch} />\r\n        {search ? (\r\n          <SearchBar placeholder=\"Search POs...\" search={this.search} />\r\n        ) : null}\r\n        <div\r\n          style={{\r\n            padding: \"1em\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            borderBottom: \"1px solid #BCC5D3\",\r\n          }}\r\n        >\r\n          <ToggleButton\r\n            onToggleFunction={this.adminToggle}\r\n            checked={this.state.adminSwitch}\r\n            color=\"#6C5FCF\"\r\n          />\r\n          <p\r\n            style={{\r\n              fontSize: \"1em\",\r\n              color: \"#666666\",\r\n              margin: \"0\",\r\n              paddingLeft: \"0.5em\",\r\n            }}\r\n          >\r\n            Admin\r\n          </p>\r\n        </div>\r\n        {POsList.length === 0 ? (\r\n          <NoResult />\r\n        ) : this.state.adminSwitch ? (\r\n          <PurchaseOrdersListAdmin purchaseOrders={POsList} />\r\n        ) : (\r\n          <PurchaseOrderListContainer purchaseOrders={POsList} />\r\n        )}\r\n        <LowerNavBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  purchaseOrders: selectCurrentProjectPurchaseOrders,\r\n  projectName: selectCurrentProjectName,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectPurchaseOrders);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\task-purchase-orders\\task-purchase-orders.page.jsx",["1632","1633","1634","1635"],"import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport {fetchStepsStart} from '../../redux/all-steps/all-steps.actions'\r\nimport CreateStepForm from '../../components/create-step-form/create-step-form.component';\r\nimport { selectUserSteps } from '../../redux/all-steps/all-steps.selector';\r\nimport StepList from '../../components/steps-list/steps-list.component'\r\n\r\nimport PurchaseOrderList from '../../components/purchase-orders-list/purchase-orders-list.component'\r\nimport { selectCurrentTaskPurchaseOrders } from '../../redux/current-task/current-task.selectors';\r\nimport { fetchCurrentPurchaseOrderStart } from '../../redux/current-purchase-order/current-purchase-order.actions';\r\nimport { fetchCurrentTaskStart } from '../../redux/current-task/current-task.actions';\r\nimport { selectCurrentProjectName } from '../../redux/current-project/current-project.selectors';\r\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\r\nclass PurchaseOrder extends Component {\r\n    componentDidMount(){\r\n        const taskId = this.props.match.params.taskId\r\n       this.props.fetchTask(taskId)\r\n       console.log(taskId)\r\n    }\r\n    \r\n    render() {\r\n        const {purchaseOrders, projectName} = this.props;\r\n        console.log('task page')\r\n        console.log(purchaseOrders)\r\n        \r\n        return (\r\n             <div>\r\n                <TaskNav title = {projectName}/>\r\n                <PurchaseOrderList purchaseOrders = {purchaseOrders} />\r\n                {/* <CreatePurchaseOrderForm taskId = {this.props.match.params.taskId} /> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    purchaseOrders: selectCurrentTaskPurchaseOrders,\r\n    projectName: selectCurrentProjectName\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    fetchSteps : (taskId) => dispatch(fetchStepsStart(taskId)),\r\n    fetchTask: (taskId) => dispatch(fetchCurrentTaskStart(taskId))\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(PurchaseOrder);","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\task\\task.page.js",["1636"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\task-purchase-orders\\task-purchase-orders.page.jsx",["1637","1638","1639","1640"],"import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport {fetchStepsStart} from '../../redux/all-steps/all-steps.actions'\r\nimport CreateStepForm from '../../components/create-step-form/create-step-form.component';\r\nimport { selectUserSteps } from '../../redux/all-steps/all-steps.selector';\r\nimport StepList from '../../components/steps-list/steps-list.component'\r\nimport CreatePurchaseOrderForm from '../../components/create-purchase-order/create-purchase-order.component'\r\nimport PurchaseOrderList from '../../components/purchase-orders-list/purchase-orders-list.component'\r\nimport { selectCurrentTaskPurchaseOrders } from '../../redux/current-task/current-task.selectors';\r\nimport { fetchCurrentPurchaseOrderStart } from '../../redux/current-purchase-order/current-purchase-order.actions';\r\nimport { fetchCurrentTaskStart } from '../../redux/current-task/current-task.actions';\r\nimport { selectCurrentProjectName } from '../../redux/current-project/current-project.selectors';\r\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\r\nclass PurchaseOrder extends Component {\r\n    componentDidMount(){\r\n        const taskId = this.props.match.params.taskId\r\n       this.props.fetchTask(taskId)\r\n       console.log(taskId)\r\n    }\r\n    \r\n    render() {\r\n        const {purchaseOrders, projectName} = this.props;\r\n        console.log('task page')\r\n        console.log(purchaseOrders)\r\n        \r\n        return (\r\n             <div>\r\n                <TaskNav title = {projectName}/>\r\n                <PurchaseOrderList purchaseOrders = {purchaseOrders} />\r\n                <CreatePurchaseOrderForm taskId = {this.props.match.params.taskId} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    purchaseOrders: selectCurrentTaskPurchaseOrders,\r\n    projectName: selectCurrentProjectName\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    fetchSteps : (taskId) => dispatch(fetchStepsStart(taskId)),\r\n    fetchTask: (taskId) => dispatch(fetchCurrentTaskStart(taskId))\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(PurchaseOrder);","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\individual-purchase-order\\individual-purchase-order.page.jsx",["1641"],"import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCurrentPurchaseOrderStart } from '../../redux/current-purchase-order/current-purchase-order.actions';\r\nimport IndividualPurchaseOrderComponent from \"../../components/individual-purchase-order/individual-purchase-order.component\";\r\nimport POitemForm from '../../components/create-purchase-order-item-form/create-purchase-order-item-form.component'\r\nimport POItemNav from '../../components/PO-item-nav/PO-item-nav.component';\r\nimport POItemMenu from '../../components/PO-item-menu/PO-item-menu.component';\r\nimport IndividualPurchaseOrderContainer from '../../components/individual-purchase-order/individual-purchase-order.container';\r\nclass IndividualPurchaseOrder extends Component {\r\n\r\n    componentDidMount(){\r\n        const POid = this.props.match.params.POid\r\n        this.props.fetchCurrentPO(POid)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <POItemNav />\r\n                <POItemMenu />\r\n                <IndividualPurchaseOrderContainer />\r\n                <POitemForm />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n});\r\n  \r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchCurrentPO: (POid) => dispatch(fetchCurrentPurchaseOrderStart(POid))\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndividualPurchaseOrder);\r\n\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\project-purchase-orders\\project-purchase-orders.jsx",["1642"],"import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport PurchaseOrderList from '../../components/purchase-orders-list/purchase-orders-list.component';\r\nimport { selectCurrentProjectName, selectCurrentProjectPurchaseOrders } from '../../redux/current-project/current-project.selectors';\r\nimport { fetchCurrentProjectStart } from '../../redux/current-project/current-project.actions';\r\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\r\nimport PurchaseOrderListContainer from '../../components/purchase-orders-list/purchase-order-lists.container';\r\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\r\n\r\nclass ProjectPurchaseOrders extends Component {\r\n    componentDidMount(){\r\n        const projectId = this.props.match.params.projectId;\r\n        this.props.fetchProject(projectId);\r\n    }\r\n\r\n    render() {\r\n        const {purchaseOrders, projectName} = this.props;\r\n        console.log('project purchase order page')\r\n        console.log(purchaseOrders)\r\n        \r\n        return (\r\n             <div>\r\n                <TaskNav title = {projectName}/>\r\n                <PurchaseOrderListContainer purchaseOrders = {purchaseOrders} />\r\n                <LowerNavBar />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    purchaseOrders: selectCurrentProjectPurchaseOrders,\r\n    projectName: selectCurrentProjectName\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n      fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId))\r\n    \r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ProjectPurchaseOrders);","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.sagas.js",["1643","1644","1645","1646"],"import { all, call, put, takeLatest, select, delay} from \"redux-saga/effects\";\r\nimport { fetchCurrentTaskStart } from \"../current-task/current-task.actions\";\r\nimport { completeStepQuestionFailure, completeStepQuestionSuccess, createStepFail, createStepSucessful, fetchStepsFailure, fetchStepsStart, fetchStepsSuccess } from \"./all-steps.actions\";\r\nimport { StepActionTypes } from \"./all-steps.types\";\r\n\r\nexport function* createStep({payload}){\r\n  try {\r\n    let data = payload;\r\n    const taskId = data.taskId\r\n    console.log(data);\r\n    let resp = yield fetch(`http://127.0.0.1:5000/create-step/${taskId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    resp = yield resp.json()\r\n    if(resp.done){\r\n      yield put(createStepSucessful(resp.message));\r\n    }\r\n    yield delay(500)\r\n    yield put(fetchCurrentTaskStart(taskId))\r\n    \r\n  } catch (error) {\r\n    console.log(error)\r\n    yield put(createStepFail(error))\r\n  }\r\n}\r\n\r\nexport function* fetchSteps({payload}){\r\n  const taskId = payload\r\n  try {\r\n    let steps = yield fetch(`http://127.0.0.1:5000/task/${taskId}/step`)\r\n    steps = yield steps.json()\r\n    steps.done\r\n    ? yield put(fetchStepsSuccess(steps.steps.steps))\r\n    : yield put(fetchStepsFailure('Steps not fetched!'))\r\n  } catch (error) {\r\n    yield put(fetchStepsFailure(error))\r\n  }\r\n}\r\n\r\n\r\nexport function* onStepCreateStart(){\r\n  yield takeLatest(StepActionTypes.CREATE_STEP_START, createStep)\r\n}\r\n\r\nexport function* onStepFetchStart(){\r\n  yield takeLatest(StepActionTypes.FETCH_STEPS_START, fetchSteps)\r\n}\r\n\r\nexport function* stepSagas() {\r\n  yield all([\r\n    call(onStepCreateStart),\r\n    call(onStepFetchStart),\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.reducer.js",["1647"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-task\\current-task.sagas.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-project\\current-project.reducer.js",["1648"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-project\\current-project.sagas.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-step\\current-step.reducer.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.reducer.js",["1649"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-step\\current-step.sagas.js",["1650"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-task\\current-task.reducer.js",["1651","1652"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.saga.js",["1653","1654"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.actions.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-project\\current-project.actions.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.selector.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-task\\current-task.actions.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-task\\current-task.selectors.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-project\\current-project.selectors.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\lower-nav-bar\\lower-nav-bar.component.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.actions.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-step\\current-step.actions.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-step\\current-step.selectors.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\task-nav\\task-nav.component.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-step-form\\create-step-form.component.jsx",["1655"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\steps-list\\steps-list.component.jsx",["1656","1657","1658","1659","1660","1661"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { completeStepQuestionStart, deleteCurrentStepStart } from \"../../redux/current-step/current-step.actions\";\r\nimport { selectStepQuestionAnsweredConfirmationMessage } from \"../../redux/all-steps/all-steps.selector\";\r\nimport ConformationMesage from \"../conformation-message/comformation-message.component\";\r\nimport { BigText, Circle, SmallText } from \"../task-item/task-item.styles\";\r\nimport StepItem from \"../step-item/step-item.component\"\r\n\r\nclass StepList extends React.Component {\r\n  render() {\r\n    let steps = this.props.steps;\r\n    console.log(steps);\r\n    if (!steps) {\r\n      steps = [];\r\n    }\r\n    return (\r\n      <div>\r\n        {steps.map(\r\n          ({stepName,questionStatement,_id,isStepDone,isQuestionAnswered,}, index) => {\r\n            console.log(_id);\r\n            const stepDetails = {stepName,questionStatement,_id,isStepDone,isQuestionAnswered, index}\r\n            return (\r\n              <StepItem key={_id} stepDetails = {stepDetails} />\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  completeStepQuestion: (stepId) => dispatch(completeStepQuestionStart(stepId)),\r\n  deleteStep: (stepId) => dispatch(deleteCurrentStepStart(stepId))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StepList);\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-orders-list.component.jsx",["1662","1663"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { BigText, SmallText } from \"../project-item/project-item.styles\";\r\nimport { PODetailsDiv, PODiv, POName, PONameDiv, PONumber } from \"./purchase-orders-list.styles\";\r\n\r\nclass PurchaseOrderList extends React.Component {\r\n    \r\n  render() {\r\n    let purchaseOrders = this.props.purchaseOrders;\r\n\r\n    if (!purchaseOrders) {\r\n        purchaseOrders = [];\r\n    }\r\n    return (\r\n      <div>\r\n        {purchaseOrders.map(\r\n          ({ orderFrom, totalOrderAmount, totalPaidAmount, purchasedItem, _id }, index) => {\r\n            return (\r\n              <PODiv\r\n                key={_id}\r\n              >\r\n                <PONameDiv>\r\n                <Link to={`/purchaseOrder/${_id}`} style={{textDecoration: 'none'}}>\r\n                  <SmallText>PO #{index+1001}</SmallText>\r\n                  <BigText>{purchasedItem}</BigText>\r\n                </Link>\r\n                </PONameDiv>\r\n                <PODetailsDiv>\r\n                  <BigText>Open</BigText>\r\n                </PODetailsDiv>\r\n              </PODiv>\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseOrderList);\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-purchase-order-item-form\\create-purchase-order-item-form.component.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-step\\current-step.types.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\all-steps\\all-steps.types.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-project\\current-project.types.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-task\\current-task.types.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.types.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-purchase-order\\current-purchase-order.selector.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.component.jsx",["1664","1665","1666"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectCurrentPOItem, selectCurrentPOorderFrom, selectCurrentPOPaidAmount, selectCurrentPOPurchasedItems, selectCurrentPOTotalAmount } from '../../redux/current-purchase-order/current-purchase-order.selector'\r\nimport { BigText, SmallText } from '../project-item/project-item.styles'\r\nimport { ItemsTableDiv, ItemsTableHeading, ItemsTableRow, ItemsTableRowData, POItemAttribute, POItemValue, PurchaseOrderDetailsDiv, PurchaseOrderFrom, PurchaseOrderPaidAmount, PurchaseOrderTotalAmount } from './individual-purchase-order.component.styles'\r\n\r\nclass IndividualPurchaseOrderComponent extends Component {\r\n    render() {\r\n        const {orderFrom, POItem, POItems, totalAmount, paidAmount, itemsShipped} = this.props\r\n        console.log(POItems)\r\n        return (\r\n            <div>\r\n                <PurchaseOrderDetailsDiv>\r\n                    <PurchaseOrderFrom>\r\n                        <BigText>Purchase Order #1001/ {orderFrom}</BigText>\r\n                    </PurchaseOrderFrom>\r\n                    <PurchaseOrderTotalAmount>\r\n                        <POItemAttribute>TOTAL</POItemAttribute>\r\n                        <POItemValue>${totalAmount}</POItemValue>\r\n                    </PurchaseOrderTotalAmount>\r\n                    <PurchaseOrderPaidAmount>\r\n                    <POItemAttribute>PAID</POItemAttribute>\r\n                    <POItemValue>${paidAmount}</POItemValue> \r\n                    </PurchaseOrderPaidAmount>\r\n                </PurchaseOrderDetailsDiv>\r\n                \r\n                \r\n                    \r\n                        {/* //<div key={index}>\r\n                        //<div>ITEM: {item.itemName}</div>\r\n                        //<div>ORDER: {item.itemNumber}</div>\r\n                        //<div>SHIP: {item.itemsShipped}</div>\r\n                        //<div>UNIT: {item.itemValue}</div>\r\n                        //<div>TOTAL: {item.itemsShipped*item.itemValue}</div> */}\r\n\r\n                        <ItemsTableDiv>\r\n                            <ItemsTableRow>\r\n                                <ItemsTableHeading>ITEM</ItemsTableHeading>\r\n                                <ItemsTableHeading>ORDER</ItemsTableHeading>\r\n                                <ItemsTableHeading>SHIP</ItemsTableHeading>\r\n                                <ItemsTableHeading>UNIT</ItemsTableHeading>\r\n                                <ItemsTableHeading>TOTAL</ItemsTableHeading>\r\n                            </ItemsTableRow>\r\n                            {\r\n                                POItems? POItems.map((item, index) => {\r\n                                    return(\r\n                                        <ItemsTableRow key={index}>\r\n                                            <ItemsTableRowData>{item.itemName}</ItemsTableRowData>\r\n                                            <ItemsTableRowData>{item.itemNumber}</ItemsTableRowData>\r\n                                            <ItemsTableRowData>{item.itemsShipped}</ItemsTableRowData>\r\n                                            <ItemsTableRowData>${item.itemValue}</ItemsTableRowData>\r\n                                            <ItemsTableRowData>${item.itemNumber*item.itemValue}</ItemsTableRowData>\r\n                                        </ItemsTableRow>\r\n                                    )\r\n                                }): null\r\n                            }\r\n                        </ItemsTableDiv>\r\n                        \r\n                     \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    orderFrom: selectCurrentPOorderFrom,\r\n    POItem: selectCurrentPOItem,\r\n    totalAmount: selectCurrentPOTotalAmount,\r\n    paidAmount: selectCurrentPOPaidAmount,\r\n    POItems: selectCurrentPOPurchasedItems,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(IndividualPurchaseOrderComponent)\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\lower-nav-bar\\lower-nav-bar.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\task-nav\\task-nav.styles.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\project-item\\project-item.component.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\task-item\\task-item.component.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\hamburger\\hamburger.component.jsx",["1667"],"import react from 'react';\r\nimport {HamburgerDiv} from \"./hamburger.styles\";\r\n\r\nexport const Hamburger = () => {\r\n    return (\r\n        <HamburgerDiv>\r\n            &equiv;\r\n        </HamburgerDiv>\r\n    )\r\n}","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\conformation-message\\comformation-message.component.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\hamburger\\hamburger.styles.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\task-item\\task-item.styles.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\project-item\\project-item.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\steps-list\\steps-list.container.js",["1668"],"import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectIsStepBeingCreated } from \"../../redux/all-steps/all-steps.selector\";\r\nimport { selectIsCurrentTaskFetching } from \"../../redux/current-task/current-task.selectors\";\r\nimport WithSpinner from '../with-spinner/with-spinner.component'\r\nimport StepList from \"./steps-list.component\";\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: selectIsCurrentTaskFetching\r\n})\r\nconst StepListContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(StepList)\r\n\r\nexport default StepListContainer","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-list\\projects-list.container.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\tasks-list\\tasks-list.container.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\with-spinner\\with-spinner.component.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\with-spinner\\with-spinner.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-item\\step-item.component.jsx",["1669","1670","1671","1672","1673","1674"],"import React, { Component } from \"react\";\r\nimport {\r\n  CompleteStepButtons,\r\n  CompleteStepButton,\r\n  SmallBoldText,\r\n  ArrowDown,\r\n  ArrowUp,\r\n  StepDiv,\r\n  LeftDiv,\r\n  RightDiv,\r\n  BigText,\r\n  SmallText,\r\n  Circle,\r\n  RowContainer,\r\n  ArrowDiv,\r\n  PartitionDiv,\r\n} from \"./step-item.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  completeStepQuestionStart,\r\n  completeStepStart,\r\n  deleteCurrentStepStart,\r\n  fetchCurrentStepStart,\r\n} from \"../../redux/current-step/current-step.actions\";\r\nimport { selectCurrentProjectId } from \"../../redux/current-project/current-project.selectors\";\r\nimport {\r\n  selectCurrentStepCompletionMessage,\r\n  selectCurrentStepId,\r\n  selectCurrentStepIsDone,\r\n  selectCurrentStepName,\r\n  selectCurrentStepQuestion,\r\n  selectCurrentStepQuestionAnswerConfirmation,\r\n  selectCurrentStepQuestionAnswered,\r\n} from \"../../redux/current-step/current-step.selectors\";\r\nimport { selectCurrentTaskId } from \"../../redux/current-task/current-task.selectors\";\r\nimport { CheckBox } from \"../checkbox/checkbox.component\";\r\nimport { DeleteButton } from \"../delete-button/delete-button.styles\";\r\nimport { LongButton } from \"../long-button/long-button.styles\";\r\nimport checkCircle from \"../../assets/check-circle.png\";\r\n\r\nclass StepItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      stepDetails: this.props.stepDetails,\r\n      isOpen: false,\r\n    };\r\n  }\r\n\r\n  submitQuestion = () => {\r\n    const { _id } = this.state.stepDetails;\r\n    console.log(\"Step Item\");\r\n    console.log(this.state.stepDetails);\r\n    this.props.completeStepQuestion(_id);\r\n    this.props.fetchCurrentStep(_id);\r\n    window.location.reload();\r\n  };\r\n\r\n  completeStep = async () => {\r\n    const { completeStep, taskId } = this.props;\r\n    const stepId = this.state.stepDetails._id;\r\n    const data = { stepId, taskId };\r\n    console.log(data);\r\n    await completeStep(data);\r\n    this.props.fetchCurrentStep(stepId);\r\n    window.location.reload();\r\n  };\r\n\r\n  deleteStep = (e) => {\r\n    const stepId = this.state.stepDetails._id;\r\n    const { deleteStep } = this.props;\r\n    deleteStep(stepId);\r\n    window.location.reload();\r\n  };\r\n\r\n  stepDetailsDiv = ({\r\n    isStepDone,\r\n    questionStatement,\r\n    isQuestionAnswered,\r\n    stepCompletionMessage,\r\n  }) => {\r\n    return (\r\n      <center>\r\n        <div style={{ padding: \"0px 25px\" }}>\r\n          {questionStatement ? (\r\n            <div>\r\n              <SmallBoldText>{questionStatement}</SmallBoldText>\r\n              {isQuestionAnswered ? (\r\n                <SmallBoldText>Step Question has been answered.</SmallBoldText>\r\n              ) : (\r\n                <CompleteStepButtons>\r\n                  <CompleteStepButton\r\n                    border={false}\r\n                    color=\"white\"\r\n                    bgcolor=\"#6C7B8A\"\r\n                    onClick={this.submitQuestion}\r\n                  >\r\n                    {\" \"}\r\n                    YES{\" \"}\r\n                  </CompleteStepButton>\r\n                  <CompleteStepButton\r\n                    border={true}\r\n                    color=\"black\"\r\n                    bgcolor=\"white\"\r\n                    onClick={() => {\r\n                      this.setState((prevState) => ({\r\n                        isOpen: !prevState.isOpen,\r\n                      }));\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    NO{\" \"}\r\n                  </CompleteStepButton>\r\n                </CompleteStepButtons>\r\n              )}\r\n            </div>\r\n          ) : null}\r\n          {isStepDone ? (\r\n            <SmallBoldText>Step Completed.</SmallBoldText>\r\n          ) : (\r\n            <center>\r\n              <LongButton\r\n                style={{ backgroundColor: \"#5887F9\", borderRadius: \"5px\" }}\r\n                onClick={this.completeStep}\r\n              >\r\n                COMPLETE STEP\r\n              </LongButton>\r\n            </center>\r\n          )}\r\n          <h3>{stepCompletionMessage}</h3>\r\n        </div>\r\n      </center>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      stepName,\r\n      questionStatement,\r\n      _id,\r\n      isStepDone,\r\n      isQuestionAnswered,\r\n      index,\r\n    } = this.state.stepDetails;\r\n    return (\r\n      <StepDiv>\r\n        <PartitionDiv key={_id}>\r\n          <LeftDiv>\r\n            <RowContainer>\r\n              {isStepDone ? (\r\n                <img\r\n                  src={checkCircle}\r\n                  style={{\r\n                    width: \"20px\",\r\n                    height: \"20px\",\r\n                    marginRight: \"0.25em\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <Circle />\r\n              )}\r\n              <SmallText>Step - {index + 1}</SmallText>\r\n            </RowContainer>\r\n\r\n            <BigText>{stepName}</BigText>\r\n          </LeftDiv>\r\n          <RightDiv>\r\n            {/* <DeleteButton id={_id} onClick={this.deleteStep}>Delete</DeleteButton> */}\r\n          </RightDiv>\r\n        </PartitionDiv>\r\n        {this.state.isOpen ? (\r\n          <div>{this.stepDetailsDiv(this.state.stepDetails)}</div>\r\n        ) : null}\r\n        <ArrowDiv\r\n          onClick={() => {\r\n            this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\r\n          }}\r\n        >\r\n          {!this.state.isOpen ? <ArrowDown /> : <ArrowUp />}\r\n        </ArrowDiv>\r\n      </StepDiv>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  stepName: selectCurrentStepName,\r\n  stepQuestion: selectCurrentStepQuestion,\r\n  isStepQuestionAnswered: selectCurrentStepQuestionAnswered,\r\n  questionCompletion: selectCurrentStepQuestionAnswerConfirmation,\r\n  stepCompletionMessage: selectCurrentStepCompletionMessage,\r\n  isStepDone: selectCurrentStepIsDone,\r\n  taskId: selectCurrentTaskId,\r\n  projectId: selectCurrentProjectId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCurrentStep: (stepId) => dispatch(fetchCurrentStepStart(stepId)),\r\n  completeStepQuestion: (stepId) => dispatch(completeStepQuestionStart(stepId)),\r\n  completeStep: (data) => dispatch(completeStepStart(data)),\r\n  deleteStep: (stepId) => dispatch(deleteCurrentStepStart(stepId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StepItem);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-item\\step-item.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\PO-item-nav\\PO-item-nav.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\PO-item-menu\\PO-item-menu.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-order-lists.container.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\PO-item-nav\\PO-item-nav.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\PO-item-menu\\PO-item-menu.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-orders-list.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.component.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\checkbox\\Checkbox.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\delete-button\\delete-button.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\checkbox\\checkbox.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\checkbox\\checkbox.styles.js",[],["1675","1676"],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\long-button\\long-button.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\generic-button\\generic-button.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.container.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\projects-list\\projects-list.container.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\long-button\\long-button.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\steps-list\\steps-list.container.js",["1677"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\tasks-list\\tasks-list.container.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\generic-button\\generic-button.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.container.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-order-lists.container.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\PO-item-menu\\PO-item-menu.component.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\PO-item-nav\\PO-item-nav.component.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\PO-item-menu\\PO-item-menu.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\PO-item-nav\\PO-item-nav.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\with-spinner\\with-spinner.component.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\purchase-orders-list\\purchase-orders-list.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\individual-purchase-order\\individual-purchase-order.component.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\step-item\\step-item.component.jsx",["1678","1679","1680"],"import React, {Component} from \"react\";\r\nimport { SmallBoldText, ArrowDown, ArrowUp, StepDiv, LeftDiv, RightDiv, BigText, SmallText, Circle, RowContainer, ArrowDiv, PartitionDiv} from \"./step-item.styles\";\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { completeStepQuestionStart, completeStepStart, deleteCurrentStepStart, fetchCurrentStepStart } from '../../redux/current-step/current-step.actions'\r\nimport { selectCurrentProjectId } from '../../redux/current-project/current-project.selectors';\r\nimport { selectCurrentStepCompletionMessage, selectCurrentStepId, selectCurrentStepIsDone, selectCurrentStepName, selectCurrentStepQuestion, selectCurrentStepQuestionAnswerConfirmation, selectCurrentStepQuestionAnswered } from '../../redux/current-step/current-step.selectors'\r\nimport { selectCurrentTaskId } from '../../redux/current-task/current-task.selectors';\r\nimport { CheckBox } from \"../checkbox/checkbox.component\";\r\nimport { DeleteButton } from \"../delete-button/delete-button.styles\";\r\nimport { LongButton } from \"../long-button/long-button.styles\";\r\n\r\nclass StepItem extends Component{\r\n    constructor(props){\r\n        super(props);\r\n      \r\n        this.state = {\r\n            stepDetails: this.props.stepDetails,\r\n            isOpen:false\r\n        };\r\n    }\r\n\r\n    submitQuestion = () => {\r\n        const {_id} = this.state.stepDetails\r\n        console.log(\"Step Item\")\r\n        console.log(this.state.stepDetails)\r\n        this.props.completeStepQuestion(_id)\r\n        this.props.fetchCurrentStep(_id)\r\n        window.location.reload()\r\n    }\r\n\r\n    completeStep = async() => {\r\n        const { completeStep, taskId} = this.props\r\n        const stepId = this.state.stepDetails._id\r\n        const data = {stepId, taskId}\r\n        console.log(data)\r\n        await completeStep(data)\r\n        this.props.fetchCurrentStep(stepId)\r\n        window.location.reload()\r\n        \r\n    }\r\n\r\n    deleteStep = (e) => {\r\n        const stepId = this.state.stepDetails._id\r\n        const {deleteStep} = this.props\r\n        deleteStep(stepId)\r\n        window.location.reload()\r\n    }\r\n\r\n    stepDetailsDiv = ({isStepDone,questionStatement,isQuestionAnswered, stepCompletionMessage}) => {\r\n        return(\r\n            <center>\r\n                <div style={{padding: \"0px 25px\"}}>\r\n                 {\r\n                questionStatement?\r\n                <div>\r\n                    <SmallBoldText>Question: {questionStatement}</SmallBoldText>\r\n                    {\r\n                        isQuestionAnswered? <SmallBoldText>Question has been answered.</SmallBoldText> : <center><LongButton style={{backgroundColor: \"#5887F9\"}} onClick={this.submitQuestion}>COMPLETE STEP QUESTION</LongButton></center>\r\n                    }\r\n                    \r\n                </div> \r\n                : null\r\n                }\r\n                {\r\n                    isStepDone ? <SmallBoldText>Step Completed.</SmallBoldText> : <center><LongButton style={{backgroundColor: \"#5887F9\"}} onClick={this.completeStep}>COMPLETE STEP</LongButton> </center>\r\n                }\r\n                <h3>{stepCompletionMessage}</h3>\r\n            </div>\r\n\r\n            </center>\r\n            \r\n        )\r\n        \r\n\r\n    };\r\n    \r\n    render (){\r\n        const {stepName,questionStatement,_id,isStepDone,isQuestionAnswered, index} = this.state.stepDetails;\r\n        return (\r\n            <StepDiv>\r\n                <PartitionDiv key={_id}>\r\n                    <LeftDiv>\r\n                            <RowContainer>\r\n                                {\r\n                                    isStepDone? <CheckBox/>: <Circle/>\r\n                                }\r\n                            <SmallText>Step - {index+1}</SmallText>\r\n                            </RowContainer>\r\n                            \r\n                            <BigText>{stepName}</BigText>\r\n                    </LeftDiv>\r\n                    <RightDiv>\r\n                        <DeleteButton id={_id} onClick={this.deleteStep}>Delete</DeleteButton>\r\n                       \r\n                    </RightDiv>\r\n                </PartitionDiv>\r\n                {\r\n\r\n                    this.state.isOpen?<div>{this.stepDetailsDiv(this.state.stepDetails)}</div>:null\r\n                }\r\n                <ArrowDiv onClick={()=>\r\n                {\r\n                    this.setState((prevState) => ({isOpen: !prevState.isOpen }));\r\n                    \r\n                }}>\r\n                    {!this.state.isOpen? <ArrowDown/> : <ArrowUp/>}\r\n\r\n                </ArrowDiv>\r\n\r\n                \r\n            \r\n            </StepDiv>\r\n            \r\n                \r\n            \r\n        \r\n    )}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    stepName: selectCurrentStepName,\r\n    stepQuestion: selectCurrentStepQuestion,\r\n    isStepQuestionAnswered: selectCurrentStepQuestionAnswered,\r\n    questionCompletion: selectCurrentStepQuestionAnswerConfirmation,\r\n    stepCompletionMessage: selectCurrentStepCompletionMessage,\r\n    isStepDone: selectCurrentStepIsDone,\r\n    taskId: selectCurrentTaskId,\r\n    projectId: selectCurrentProjectId\r\n    \r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    fetchCurrentStep : (stepId) => dispatch(fetchCurrentStepStart(stepId)),\r\n    completeStepQuestion: (stepId) => dispatch(completeStepQuestionStart(stepId)),\r\n    completeStep: (data) => dispatch(completeStepStart(data)),\r\n    deleteStep: (stepId) => dispatch(deleteCurrentStepStart(stepId))\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(StepItem);\r\n","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\checkbox\\checkbox.component.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\delete-button\\delete-button.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\with-spinner\\with-spinner.styles.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\step-item\\step-item.styles.jsx",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\checkbox\\checkbox.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\project-schedule\\project-schedule.jsx",["1681"],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\project-schedule\\project-schedule.jsx",["1682"],"import React, { Component } from 'react'\r\nimport { selectCurrentProjectName, selectCurrentProjectTasks } from '../../redux/current-project/current-project.selectors';\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\r\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\r\nimport GanttChartContainer from '../../components/gantt-chart/gantt-chart.container';\r\n\r\nclass ProjectSchedule extends Component {\r\n\r\n\r\n    render() {\r\n        const {projectName} = this.props;\r\n\r\n        return (\r\n             <div>\r\n                <TaskNav title = {projectName}/>\r\n                <GanttChartContainer/>\r\n                <LowerNavBar/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    projectName: selectCurrentProjectName\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n      \r\n    \r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ProjectSchedule);","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\gantt-chart\\gantt-chart.component.jsx",["1683","1684","1685"],"import React, { Component } from 'react';\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\nimport { selectCurrentProjectTasks } from '../../redux/current-project/current-project.selectors';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { updateCurrentTaskStart } from '../../redux/current-task/current-task.actions';\r\nimport { updateTask } from '../../redux/current-task/current-task.sagas';\r\n \r\nclass GanttChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    dataProcessor = null;\r\n\r\n    componentDidMount() {\r\n        \r\n        //gantt.config.column.width = 10;\r\n        gantt.config.drag_links = false;\r\n        gantt.config.columns=[\r\n            {name:\"text\",width:10, resize:true, label:\"Task name\", align: \"center\"  }\r\n        ];\r\n        gantt.config.drag_progress = false;\r\n        gantt.config.readonly = true;\r\n\r\n        const {tasks} = this.props;\r\n        console.log(tasks);\r\n        let data = {data:[]};\r\n\r\n        tasks.forEach(task => {\r\n            let temp = {};\r\n            temp.id = task._id;\r\n            temp.text = task.taskName;\r\n\r\n            var startDate = new Date(task.taskStartDate);\r\n            var endDate = new Date(task.taskEndDate);\r\n\r\n            temp.start_date = startDate.getDate() + \"-\" + (startDate.getMonth()+1) + \"-\" + startDate.getFullYear();\r\n\r\n            var Difference_In_Time = endDate.getTime() - startDate.getTime();\r\n            temp.duration = Difference_In_Time / (1000 * 3600 * 24);\r\n\r\n            temp.progress = task.completionPercentage;\r\n            \r\n            data.data.push(temp);\r\n        });\r\n\r\n        console.log(\"data\",data);\r\n\r\n        gantt.init(this.ganttContainer);\r\n        gantt.clearAll();\r\n        gantt.parse(data);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.dataProcessor) {\r\n            this.dataProcessor.destructor();\r\n            this.dataProcessor = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n      \r\n       return (\r\n           <div\r\n                ref={ (input) => { this.ganttContainer = input } }\r\n                style={ { width: '100%', height: '100vh' } }\r\n            ></div>\r\n       );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    tasks: selectCurrentProjectTasks\r\n  });\r\n  \r\nconst mapDispatchToProps = (dispatch) => ({\r\n    \r\n});\r\n  \r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(GanttChart);","C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\gantt-chart\\gantt-chart.component.jsx",["1686","1687"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.sagas.js",["1688","1689"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.reducer.js",["1690"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\task-change-orders\\task-change-orders.page.js",["1691","1692","1693","1694","1695","1696","1697"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\pages\\individual-change-order\\individual-change-order.page.js",["1698","1699"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.actions.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.selectors.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.types.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\change-orders-list\\change-orders-list.component.js",["1700","1701"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\CO-item-menu\\CO-item-menu.component.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-change-order-item-form\\create-change-order-item-form.component.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\CO-item-nav\\CO-item-nav.component.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\individual-change-order\\individual-change-order.component.js",["1702","1703","1704"],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\create-change-order-form\\create-change-order-form.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\CO-item-menu\\CO-item-menu.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\CO-item-nav\\CO-item-nav.styles.js",[],"C:\\Users\\lenovo\\desktop\\github\\myles-website\\frontend\\src\\components\\individual-change-order\\individual-change-order.styes.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\individual-change-order\\individual-change-order.page.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\task-change-orders\\task-change-orders.page.js",["1705","1706","1707","1708","1709","1710"],"import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport {fetchStepsStart} from '../../redux/all-steps/all-steps.actions'\r\nimport CreateStepForm from '../../components/create-step-form/create-step-form.component';\r\nimport { selectUserSteps } from '../../redux/all-steps/all-steps.selector';\r\nimport StepList from '../../components/steps-list/steps-list.component'\r\n\r\nimport PurchaseOrderList from '../../components/purchase-orders-list/purchase-orders-list.component'\r\nimport { selectCurrentTaskChangeOrders, selectCurrentTaskPurchaseOrders } from '../../redux/current-task/current-task.selectors';\r\nimport { fetchCurrentPurchaseOrderStart } from '../../redux/current-purchase-order/current-purchase-order.actions';\r\nimport { fetchCurrentTaskStart } from '../../redux/current-task/current-task.actions';\r\nimport { selectCurrentProjectName } from '../../redux/current-project/current-project.selectors';\r\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\r\nimport CreateChangeOrderForm from '../../components/create-change-order-form/create-change-order-form';\r\nimport ChangeOrderList from '../../components/change-orders-list/change-orders-list.component';\r\nclass ChangeOrder extends Component {\r\n    componentDidMount(){\r\n        const taskId = this.props.match.params.taskId\r\n       this.props.fetchTask(taskId)\r\n       console.log(taskId)\r\n    }\r\n    \r\n    render() {\r\n        const {changeOrders, projectName} = this.props;\r\n        console.log('task page')\r\n        console.log(changeOrders)\r\n        \r\n        return (\r\n             <div>\r\n                <TaskNav title = {projectName}/>\r\n                <ChangeOrderList changeOrders = {changeOrders} />\r\n                <CreateChangeOrderForm taskId = {this.props.match.params.taskId} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    projectName: selectCurrentProjectName,\r\n    changeOrders: selectCurrentTaskChangeOrders\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    fetchSteps : (taskId) => dispatch(fetchStepsStart(taskId)),\r\n    fetchTask: (taskId) => dispatch(fetchCurrentTaskStart(taskId))\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ChangeOrder);","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.reducer.js",["1711"],"import { CurrentChangeOrderActionTypes } from \"./current-change-order.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  createChangeOrderStart: null,\r\n  createChangeOrderMessage: null,\r\n  currentChangeOrderFrom: null,\r\n  currentChangeOrderItem: null,\r\n  currentChangeOrderTotalAmount: null,\r\n  currentChangeOrderPaidAmount: null,\r\n  currentChangeOrderPurchasedItems: null,\r\n  currentChangeOrderId: null,\r\n  isCurrentChangeOrderBeingFetched: null,\r\n  currentChangeOrderMessage: null,\r\n  isCOitemBeingCreated: null,\r\n  coItemCreationMessage: null,\r\n};\r\n\r\nconst currentChangeOrderReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrentChangeOrderActionTypes.CREATE_CHANGE_ORDER_START:\r\n      return {\r\n        ...state,\r\n        createChangeOrderStart: true,\r\n        createChangeOrderMessage: null,\r\n      };\r\n    case CurrentChangeOrderActionTypes.CREATE_CHANGE_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createChangeOrderStart: false,\r\n        createChangeOrderMessage: action.payload,\r\n      };\r\n\r\n    case CurrentChangeOrderActionTypes.CREATE_CHANGE_ORDER_FAILURE:\r\n      return {\r\n        createChangeOrderMessage: action.payload,\r\n        createChangeOrderStart: false,\r\n      };\r\n    case CurrentChangeOrderActionTypes.FETCH_CURRENT_CHANGE_ORDER_START:\r\n      return {\r\n        isCurrentChangeOrderBeingFetched: true,\r\n      };\r\n    case CurrentChangeOrderActionTypes.FETCH_CURRENT_CHANGE_ORDER_SUCCESS:\r\n      const {\r\n        _id,\r\n        orderFrom,\r\n        totalOrderAmount,\r\n        totalPaidAmount,\r\n        purchasedItem,\r\n      } = action.payload;\r\n      if(action.payload.purchasedItems){\r\n        const {purchasedItems} = action.payload\r\n      }\r\n      return {\r\n        isCurrentChangeOrderBeingFetched: false,\r\n        currentChangeOrderFrom: orderFrom,\r\n        currentChangeOrderId: _id,\r\n        currentChangeOrderItem: purchasedItem,\r\n        currentChangeOrderPaidAmount: totalPaidAmount,\r\n        currentChangeOrderTotalAmount: totalOrderAmount,\r\n        currentChangeOrderPurchasedItems: action.payload.purchasedItems,\r\n      };\r\n    case CurrentChangeOrderActionTypes.FETCH_CURRENT_CHANGE_ORDER_FAILURE:\r\n      return {\r\n        isCurrentChangeOrderBeingFetched: false,\r\n        currentChangeOrderMessage: action.payload,\r\n      };\r\n    case CurrentChangeOrderActionTypes.CREATE_CURRENT_CO_ITEM_START:\r\n      return {\r\n        isCOitemBeingCreated: true,\r\n      };\r\n    case CurrentChangeOrderActionTypes.CREATE_CURRENT_CO_ITEM_SUCCESS:\r\n      return {\r\n        isCOitemBeingCreated: false,\r\n        coItemCreationMessage: action.payload,\r\n      };\r\n    case CurrentChangeOrderActionTypes.CREATE_CURRENT_CO_ITEM_FAILURE:\r\n      return {\r\n        isCOitemBeingCreated: false,\r\n        coItemCreationMessage: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentChangeOrderReducer;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.sagas.js",["1712","1713"],"import { all, call, put, takeLatest, select, delay} from \"redux-saga/effects\";\r\nimport { selectCurrentProjectId } from \"../current-project/current-project.selectors\";\r\nimport { fetchCurrentTaskStart } from \"../current-task/current-task.actions\";\r\nimport { fetchCurrentTask } from \"../current-task/current-task.sagas\";\r\nimport { selectUserId } from \"../user/user.selectors\";\r\nimport {createCOitemFailure, createCOitemSuccess, createChangeOrderFailure, createChangeOrderSuccess, fetchCurrentChangeOrderFailure, fetchCurrentChangeOrderStart, fetchCurrentChangeOrderSuccess} from './current-change-order.actions'\r\nimport { selectCurrentCOId } from \"./current-change-order.selectors\";\r\nimport { CurrentChangeOrderActionTypes } from \"./current-change-order.types\";\r\n\r\nexport function* createChangeOrderStart({payload}){\r\n  try {\r\n      let data = payload\r\n      const projectId = yield select(selectCurrentProjectId)\r\n      const userId = yield select(selectUserId)\r\n      console.log(projectId)\r\n      const taskId = data.taskId\r\n      data['projectId'] = projectId\r\n      data['userId'] = userId\r\n      console.log(data)\r\n    let changeOrderCreation = yield fetch(`http://127.0.0.1:5000/create-change-order/${taskId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n      changeOrderCreation = yield changeOrderCreation.json()\r\n      changeOrderCreation.done ? \r\n      yield put(createChangeOrderSuccess(changeOrderCreation.message)):\r\n      yield put(createChangeOrderFailure('ERROR'))\r\n      yield delay(500)\r\n      yield put(fetchCurrentTaskStart(taskId))\r\n  } catch (error) {\r\n      console.log(error)\r\n  }\r\n}\r\n\r\nexport function* fetchCurrentCOStart({payload}){\r\n    let COid = payload\r\n    try {\r\n        let CO = yield fetch(`http://127.0.0.1:5000/changeOrder/${COid}`)\r\n        CO = yield CO.json()\r\n        CO.done?\r\n        yield put(fetchCurrentChangeOrderSuccess(CO.CO)):\r\n        yield put(fetchCurrentChangeOrderFailure('error'))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* createCOitem({payload}){\r\n    let data = payload\r\n    let COid = data.coId\r\n    console.log(COid, 'saga co id')\r\n    try {\r\n        \r\n        let COitem = yield fetch(`http://127.0.0.1:5000/create-change-order-items/${COid}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n      COitem = yield COitem.json()\r\n      COitem.done ? \r\n      yield put(createCOitemSuccess(COitem.message)):\r\n      yield put(createCOitemFailure('ERROR'))\r\n      yield delay(500)\r\n      yield put(fetchCurrentChangeOrderStart(COid))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* onCreateChangeOrderStart(){\r\n  yield takeLatest(CurrentChangeOrderActionTypes.CREATE_CHANGE_ORDER_START , createChangeOrderStart)\r\n}\r\n\r\nexport function* onFetchCurrentChangeOrderStart(){\r\n    yield takeLatest(CurrentChangeOrderActionTypes.FETCH_CURRENT_CHANGE_ORDER_START, fetchCurrentCOStart)\r\n}\r\n\r\nexport function* onCreateCOitemStart(){\r\n    yield takeLatest(CurrentChangeOrderActionTypes.CREATE_CURRENT_CO_ITEM_START, createCOitem)\r\n}\r\n\r\nexport function* currentChangeOrderSagas() {\r\n  yield all([\r\n    call(onCreateChangeOrderStart),\r\n    call(onFetchCurrentChangeOrderStart),\r\n    call(onCreateCOitemStart)\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.actions.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\CO-item-menu\\CO-item-menu.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-change-order-item-form\\create-change-order-item-form.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\CO-item-nav\\CO-item-nav.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-change-order\\individual-change-order.component.js",["1714","1715","1716"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectCurrentCOItem, selectCurrentCOorderFrom, selectCurrentCOPaidAmount, selectCurrentCOPurchasedItems, selectCurrentCOTotalAmount } from '../../redux/current-change-order/current-change-order.selectors'\r\nimport { BigText, SmallText } from '../project-item/project-item.styles'\r\nimport { ItemsTableDiv, ItemsTableHeading, ItemsTableRow, ItemsTableRowData, COItemAttribute, COItemValue, ChangeOrderDetailsDiv, ChangeOrderFrom, ChangeOrderPaidAmount, ChangeOrderTotalAmount } from './individual-change-order.styes'\r\n\r\nclass IndividualChangeOrderComponent extends Component {\r\n    render() {\r\n        const {orderFrom, COItem, COItems, totalAmount, paidAmount, itemsShipped} = this.props\r\n        console.log(COItems)\r\n        return (\r\n            <div>\r\n                <ChangeOrderDetailsDiv>\r\n                    <ChangeOrderFrom>\r\n                        <BigText>Change Order #1001/ {orderFrom}</BigText>\r\n                    </ChangeOrderFrom>\r\n                    <ChangeOrderTotalAmount>\r\n                        <COItemAttribute>TOTAL</COItemAttribute>\r\n                        <COItemValue>${totalAmount}</COItemValue>\r\n                    </ChangeOrderTotalAmount>\r\n                    <ChangeOrderPaidAmount>\r\n                    <COItemAttribute>PAID</COItemAttribute>\r\n                    <COItemValue>${paidAmount}</COItemValue> \r\n                    </ChangeOrderPaidAmount>\r\n                </ChangeOrderDetailsDiv>\r\n                \r\n                \r\n                    \r\n                        {/* //<div key={index}>\r\n                        //<div>ITEM: {item.itemName}</div>\r\n                        //<div>ORDER: {item.itemNumber}</div>\r\n                        //<div>SHIP: {item.itemsShipped}</div>\r\n                        //<div>UNIT: {item.itemValue}</div>\r\n                        //<div>TOTAL: {item.itemsShipped*item.itemValue}</div> */}\r\n\r\n                        <ItemsTableDiv>\r\n                            <ItemsTableRow>\r\n                                <ItemsTableHeading>ITEM</ItemsTableHeading>\r\n                                <ItemsTableHeading>ORDER</ItemsTableHeading>\r\n                                <ItemsTableHeading>SHIP</ItemsTableHeading>\r\n                                <ItemsTableHeading>UNIT</ItemsTableHeading>\r\n                                <ItemsTableHeading>TOTAL</ItemsTableHeading>\r\n                            </ItemsTableRow>\r\n                            {\r\n                                COItems? COItems.map((item, index) => {\r\n                                    return(\r\n                                        <ItemsTableRow key={index}>\r\n                                            <ItemsTableRowData>{item.itemName}</ItemsTableRowData>\r\n                                            <ItemsTableRowData>{item.itemNumber}</ItemsTableRowData>\r\n                                            <ItemsTableRowData>{item.itemsShipped}</ItemsTableRowData>\r\n                                            <ItemsTableRowData>${item.itemValue}</ItemsTableRowData>\r\n                                            <ItemsTableRowData>${item.itemNumber*item.itemValue}</ItemsTableRowData>\r\n                                        </ItemsTableRow>\r\n                                    )\r\n                                }): null\r\n                            }\r\n                        </ItemsTableDiv>\r\n                        \r\n                     \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    orderFrom: selectCurrentCOorderFrom,\r\n    COItem: selectCurrentCOItem,\r\n    totalAmount: selectCurrentCOTotalAmount,\r\n    paidAmount: selectCurrentCOPaidAmount,\r\n    COItems: selectCurrentCOPurchasedItems,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(IndividualChangeOrderComponent)\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\change-orders-list\\change-orders-list.component.js",["1717","1718"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { BigText, SmallText } from \"../project-item/project-item.styles\";\r\nimport { PODetailsDiv, PODiv, POName, PONameDiv, PONumber } from \"../purchase-orders-list/purchase-orders-list.styles\";\r\n\r\nclass ChangeOrderList extends React.Component {\r\n    \r\n  render() {\r\n    let changeOrders = this.props.changeOrders;\r\n\r\n    if (!changeOrders) {\r\n        changeOrders = [];\r\n    }\r\n    return (\r\n      <div>\r\n        {changeOrders.map(\r\n          ({ orderFrom, totalOrderAmount, totalPaidAmount, purchasedItem, _id }, index) => {\r\n            return (\r\n              <PODiv\r\n                key={_id}\r\n              >\r\n                <PONameDiv>\r\n                <Link to={`/changeOrder/${_id}`} style={{textDecoration: 'none'}}>\r\n                  <SmallText>CO #{index}</SmallText>\r\n                  <BigText>{purchasedItem}</BigText>\r\n                </Link>\r\n                </PONameDiv>\r\n                <PODetailsDiv>\r\n                  <BigText>{totalOrderAmount===totalPaidAmount?\"Close\":\"Open\"}</BigText>\r\n                </PODetailsDiv>\r\n              </PODiv>\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeOrderList);","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-change-order-form\\create-change-order-form.js",["1719","1720","1721","1722","1723","1724","1725","1726"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n//import { createChangeOrderStart } from \"../../redux/current-purchase-order/current-purchase-order.actions\";\r\nimport {\r\n  selectCurrentProjectId,\r\n  selectCurrentProjectTasks,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoInputDiv,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  POFormDiv,\r\n  Overlay,\r\n  AddLineItemDiv,\r\n  AmountDiv,\r\n  LongDiv,\r\n} from \"./create-change-order-form.styles\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport FormFullScreenSelection from \"../form-fullscreen-selection/form-fullscreen-selection.component\";\r\nimport FormCostbookSelection from \"../form-costbook-selection/form-costbook-selection.component\";\r\nimport add from \"../../assets/add.png\";\r\nimport remove from \"../../assets/minuscircle.png\";\r\nimport { createChangeOrderStart } from \"../../redux/current-change-order/current-change-order.actions\";\r\n\r\nclass CreateChangeOrderForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      changeOrderDetails: {\r\n        CoTitle: \"\",\r\n        userId: \"\",\r\n        projectId: \"\",\r\n        purchasedItem: [],\r\n        orderFrom: \"\", //placeholder\r\n        group: \"\",\r\n        terms: \"\",\r\n        dueDate: \"\",\r\n        taskId: \"\",\r\n        taskName: \"\",\r\n      },\r\n      formChoose: null,\r\n      active: \"Info\",\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let ChangeOrder = this.state.changeOrderDetails;\r\n    ChangeOrder[name] = value;\r\n\r\n    this.setState({ changeOrderDetails: ChangeOrder }, () =>\r\n      console.log(this.state)\r\n    );\r\n  };\r\n\r\n  createChangeOrder = (e) => {\r\n    e.preventDefault();\r\n    let changeOrderDetails = this.state.changeOrderDetails;\r\n\r\n    this.props.tasks.map((task) => {\r\n      if (task.taskName == changeOrderDetails.taskName) {\r\n        changeOrderDetails.taskId = task._id;\r\n      }\r\n    });\r\n\r\n    console.log(changeOrderDetails);\r\n\r\n    this.props.createChangeOrder(changeOrderDetails);\r\n  };\r\n\r\n  handleOnClick = (e) => {\r\n    let { key } = e.target.dataset;\r\n\r\n    this.setState({\r\n      active: key,\r\n    });\r\n  };\r\n\r\n  exit = (e) => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  toggleFormChoose = (type) => {\r\n    if (!this.state.formChoose) {\r\n      this.setState({ formChoose: type }, console.log(this.state));\r\n    } else {\r\n      this.setState({ formChoose: null });\r\n    }\r\n  };\r\n\r\n  select = ({ value, type }) => {\r\n    let temp = this.state.changeOrderDetails;\r\n    if (type === \"purchasedItem\") {\r\n      temp[type].push(value);\r\n    } else {\r\n      temp[type] = value;\r\n    }\r\n\r\n    this.setState({ changeOrderDetails: temp }, () => {\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  itemRemove = (e) => {\r\n    let { itemid } = e.target.dataset;\r\n\r\n    let temp = this.state.changeOrderDetails;\r\n    let items = temp[\"purchasedItem\"];\r\n    items = items.filter((item) => {\r\n      return item.itemId != itemid;\r\n    });\r\n    temp[\"purchasedItem\"] = items;\r\n\r\n    this.setState({ changeOrderDetails: temp }, () => {\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { tasks } = this.props;\r\n    let { active } = this.state;\r\n\r\n    let taskNames = [];\r\n    tasks.map((task) => {\r\n      taskNames.push(task.taskName);\r\n    });\r\n\r\n    return (\r\n      <POFormDiv>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n            Cancel\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n            New CO\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"flex-end\"\r\n            color=\"#205284\"\r\n            onClick={this.createChangeOrder}\r\n          >\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n        <LowerNavDiv>\r\n          <OneHalfDiv\r\n            data-key=\"Info\"\r\n            onClick={this.handleOnClick}\r\n            active={active === \"Info\"}\r\n          >\r\n            INFO\r\n          </OneHalfDiv>\r\n          <OneHalfDiv\r\n            data-key=\"Items\"\r\n            onClick={this.handleOnClick}\r\n            active={active === \"Items\"}\r\n          >\r\n            ITEMS\r\n          </OneHalfDiv>\r\n        </LowerNavDiv>\r\n        {this.state.active === \"Info\" ? (\r\n          <form\r\n            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            onChange={(e) => this.handleOnChange(e)}\r\n          >\r\n            <div>\r\n              <LongInput\r\n                type=\"text\"\r\n                value={this.state.changeOrderDetails.CoTitle}\r\n                name=\"CoTitle\"\r\n                id=\"CoTitle\"\r\n                placeholder=\"Change Order Title\"\r\n                onChange={(e) => this.handleOnChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <Container>\r\n              <InfoDiv>\r\n                <InfoTitle>Task</InfoTitle>\r\n                <InfoInputDiv\r\n                  id=\"taskName\"\r\n                  onClick={() => {\r\n                    this.toggleFormChoose(\"taskName\");\r\n                  }}\r\n                  required\r\n                >\r\n                  {this.state.changeOrderDetails.taskName\r\n                    ? this.state.changeOrderDetails.taskName\r\n                    : \"Choose a task\"}\r\n                </InfoInputDiv>\r\n              </InfoDiv>\r\n\r\n              <InfoDiv>\r\n                <InfoTitle>Payee</InfoTitle>\r\n                <InfoInputDiv\r\n                  id=\"payee\"\r\n                  onClick={() => {\r\n                    this.toggleFormChoose(\"payee\");\r\n                  }}\r\n                  required\r\n                >\r\n                  {this.state.changeOrderDetails.payee\r\n                    ? this.state.changeOrderDetails.payee\r\n                    : \"Choose a payee\"}\r\n                </InfoInputDiv>\r\n              </InfoDiv>\r\n\r\n              <InfoDiv>\r\n                <InfoTitle>Group</InfoTitle>\r\n                <InfoInputDiv\r\n                  id=\"group\"\r\n                  onClick={() => {\r\n                    this.toggleFormChoose(\"group\");\r\n                  }}\r\n                  required\r\n                >\r\n                  {this.state.changeOrderDetails.group\r\n                    ? this.state.changeOrderDetails.group\r\n                    : \"Choose a Group\"}\r\n                </InfoInputDiv>\r\n              </InfoDiv>\r\n\r\n              <InfoDiv>\r\n                <InfoTitle>Terms</InfoTitle>\r\n                <InfoInputDiv\r\n                  id=\"terms\"\r\n                  onClick={() => {\r\n                    this.toggleFormChoose(\"terms\");\r\n                  }}\r\n                  required\r\n                >\r\n                  {this.state.changeOrderDetails.terms\r\n                    ? this.state.changeOrderDetails.terms\r\n                    : \"Choose Terms\"}\r\n                </InfoInputDiv>\r\n              </InfoDiv>\r\n\r\n              <InfoDiv>\r\n                <InfoTitle>Due Date</InfoTitle>\r\n                <InfoInput\r\n                  type=\"date\"\r\n                  value={this.state.changeOrderDetails.dueDate}\r\n                  name=\"dueDate\"\r\n                  id=\"dueDate\"\r\n                  onChange={(e) => this.handleOnChange(e)}\r\n                  required\r\n                />\r\n              </InfoDiv>\r\n            </Container>\r\n          </form>\r\n        ) : (\r\n          <div>\r\n            <form\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n              onChange={(e) => this.handleOnChange(e)}\r\n            >\r\n              <div>\r\n                <LongInput\r\n                  type=\"text\"\r\n                  value={this.state.changeOrderDetails.CoTitle}\r\n                  name=\"CoTitle\"\r\n                  id=\"CoTitle\"\r\n                  placeholder=\"Change Order Title\"\r\n                  onChange={(e) => this.handleOnChange(e)}\r\n                  required\r\n                />\r\n              </div>\r\n            </form>\r\n            <Container>\r\n              {this.state.changeOrderDetails.purchasedItem.map(\r\n                ({ itemName, itemNumber, itemValue, itemId, comment }) => {\r\n                  return (\r\n                    <LongDiv data-id={itemId}>\r\n                      <div\r\n                        style={{\r\n                          width: \"80%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                            flex: 0.8,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={remove}\r\n                            data-itemId={itemId}\r\n                            onClick={(e) => {\r\n                              this.itemRemove(e);\r\n                            }}\r\n                          />\r\n                          <div>{itemName}</div>\r\n                        </div>\r\n\r\n                        <div>${itemNumber * itemValue}</div>\r\n                      </div>\r\n                    </LongDiv>\r\n                  );\r\n                }\r\n              )}\r\n\r\n              <AddLineItemDiv\r\n                onClick={() => {\r\n                  console.log(this.state);\r\n                  this.toggleFormChoose(\"items\");\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    flex: 0.2,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <img src={add} />\r\n                </div>\r\n                <div style={{ flex: 0.8, borderBottom: \"1px solid #d3d3d3\" }}>\r\n                  Add Line Item\r\n                </div>\r\n              </AddLineItemDiv>\r\n\r\n              <AmountDiv>\r\n                <div>SubTotal</div>\r\n                <div>$0</div>\r\n              </AmountDiv>\r\n              <AmountDiv>\r\n                <div>SubTotal</div>\r\n                <div>$0</div>\r\n              </AmountDiv>\r\n              <AmountDiv>\r\n                <div>SubTotal</div>\r\n                <div>$0</div>\r\n              </AmountDiv>\r\n            </Container>\r\n          </div>\r\n        )}\r\n\r\n        {this.state.active === \"Info\" &&\r\n        this.state.formChoose === \"taskName\" ? (\r\n          <Overlay style={{ bottom: \"0\", height: \"100%\" }}>\r\n            <FormFullScreenSelection\r\n              exit={this.toggleFormChoose}\r\n              items={taskNames}\r\n              select={this.select}\r\n              type={this.state.formChoose}\r\n              selected={this.state.changeOrderDetails.taskName}\r\n            />\r\n          </Overlay>\r\n        ) : null}\r\n\r\n        {this.state.active === \"Info\" && this.state.formChoose === \"terms\" ? (\r\n          <Overlay style={{ bottom: \"0\", height: \"100%\" }}>\r\n            <FormFullScreenSelection\r\n              exit={this.toggleFormChoose}\r\n              items={[\"Due on Receipt\", \"Net 15\", \"Net 30\", \"Net 60\"]}\r\n              select={this.select}\r\n              type={this.state.formChoose}\r\n              selected={this.state.changeOrderDetails.terms}\r\n            />\r\n          </Overlay>\r\n        ) : null}\r\n\r\n        {this.state.active === \"Info\" && this.state.formChoose === \"payee\" ? (\r\n          <Overlay style={{ bottom: \"0\", height: \"100%\" }}>\r\n            <FormFullScreenSelection\r\n              exit={this.toggleFormChoose}\r\n              items={[\"Due on Receipt\", \"Net 15\", \"Net 30\", \"Net 60\"]}\r\n              select={this.select}\r\n              type={this.state.formChoose}\r\n              selected={this.state.changeOrderDetails.payee}\r\n            />\r\n          </Overlay>\r\n        ) : null}\r\n\r\n        {this.state.active === \"Info\" && this.state.formChoose === \"group\" ? (\r\n          <Overlay style={{ bottom: \"0\", height: \"100%\" }}>\r\n            <FormFullScreenSelection\r\n              exit={this.toggleFormChoose}\r\n              items={[\"Due on Receipt\", \"Net 15\", \"Net 30\", \"Net 60\"]}\r\n              select={this.select}\r\n              type={this.state.formChoose}\r\n              selected={this.state.changeOrderDetails.group}\r\n            />\r\n          </Overlay>\r\n        ) : null}\r\n\r\n        {this.state.active === \"Items\" && this.state.formChoose === \"items\" ? (\r\n          <Overlay style={{ bottom: \"0\", height: \"100%\" }}>\r\n            <FormCostbookSelection\r\n              exit={this.toggleFormChoose}\r\n              submitItem={this.select}\r\n            />\r\n          </Overlay>\r\n        ) : null}\r\n      </POFormDiv>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  projectId: selectCurrentProjectId,\r\n  tasks: selectCurrentProjectTasks,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createChangeOrder: (changeOrderDetails) =>\r\n    dispatch(createChangeOrderStart(changeOrderDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CreateChangeOrderForm));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\current-change-order\\current-change-order.selectors.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-change-order\\individual-change-order.styes.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\CO-item-nav\\CO-item-nav.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\CO-item-menu\\CO-item-menu.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\gantt-chart\\gantt-chart.container.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\manage-team\\manage-team.component.js",["1727","1728","1729","1730"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Access from \"../access/access.component\";\r\nimport { BigText } from \"../project-item/project-item.styles\";\r\nimport Team from \"../team/team.component\";\r\nimport {\r\n  Text,\r\n  FormHeading,\r\n  ManageTeamNavDiv,\r\n  ManageTeamNavItem,\r\n  ManageTeamDiv,\r\n} from \"./manage-team.styles\";\r\n\r\nclass ManageTeam extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      button: \"Team\",\r\n    };\r\n  }\r\n  clickTeam = () => {\r\n    this.setState({ button: \"Team\" });\r\n  };\r\n  clickAccess = () => {\r\n    this.setState({ button: \"Access\" });\r\n  };\r\n  render() {\r\n    console.log(this.state);\r\n    const { history } = this.props;\r\n    console.log(history);\r\n\r\n    let stylingFirst = []; //border-bottom, color, fontweight\r\n    let stylingSecond = [];\r\n\r\n    if (this.state.button === \"Team\") {\r\n      stylingFirst = [\"#333333 solid 2px\", \"#333333\", \"bold\"];\r\n      stylingSecond = [\"#BCC5D3 solid 1px\", \"\", \"\"];\r\n    } else {\r\n      stylingFirst = [\"#BCC5D3 solid 1px\", \"\", \"\"];\r\n      stylingSecond = [\"#333333 solid 2px\", \"#333333\", \"bold\"];\r\n    }\r\n\r\n    return (\r\n      <ManageTeamDiv>\r\n        <FormHeading>\r\n          Manage Team\r\n          <button\r\n            onClick={this.props.toggleManageTeam}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              background: \"none\",\r\n              border: \"none\",\r\n              fontSize: \"1.4em\",\r\n              color: \"rgba(102,102,102,0.6)\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            &times;\r\n          </button>\r\n        </FormHeading>\r\n        <Text\r\n          style={{\r\n            fontSize: \"0.9em\",\r\n            color: \"#666666\",\r\n            margin: \"0.5em 0em 1em 0em\",\r\n          }}\r\n        >\r\n          Configure team assignments and project access for this property.\r\n        </Text>\r\n\r\n        <ManageTeamNavDiv>\r\n          <ManageTeamNavItem\r\n            onClick={this.clickTeam}\r\n            style={{\r\n              borderBottom: stylingFirst[0],\r\n              color: stylingFirst[1],\r\n              fontWeight: stylingFirst[2],\r\n            }}\r\n          >\r\n            Team\r\n          </ManageTeamNavItem>\r\n          <ManageTeamNavItem\r\n            onClick={this.clickAccess}\r\n            style={{\r\n              borderBottom: stylingSecond[0],\r\n              color: stylingSecond[1],\r\n              fontWeight: stylingSecond[2],\r\n            }}\r\n          >\r\n            Access\r\n          </ManageTeamNavItem>\r\n        </ManageTeamNavDiv>\r\n        {this.state.button == \"Team\" ? (\r\n          <Team\r\n            exit={this.props.toggleManageTeam}\r\n            projectId={this.props.projectId}\r\n          />\r\n        ) : (\r\n          <Access exit={this.props.toggleManageTeam} />\r\n        )}\r\n      </ManageTeamDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageTeam;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\project-change-orders\\project-change-orders.page.js",["1731","1732"],"import React, { Component } from \"react\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport PurchaseOrderList from \"../../components/purchase-orders-list/purchase-orders-list.component\";\r\nimport {\r\n  selectCurrentProjectChangeOrders,\r\n  selectCurrentProjectName,\r\n  selectCurrentProjectPurchaseOrders,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport LowerNavBar from \"../../components/lower-nav-bar/lower-nav-bar.component\";\r\nimport PurchaseOrderListContainer from \"../../components/purchase-orders-list/purchase-order-lists.container\";\r\nimport { TaskNav } from \"../../components/task-nav/task-nav.component\";\r\nimport SearchBar from \"../../components/search-bar/search-bar.component\";\r\nimport NoResult from \"../../components/no-result/no-result.component\";\r\nimport ToggleButton from \"../../components/toggle-button/toggle-button.component\";\r\nimport PurchaseOrdersListAdmin from \"../../components/purchase-orders-list-admin/purchase-orders-list-admin.component\";\r\n\r\nclass ProjectChangeOrders extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      VPOsList: \"\",\r\n      showSearch: false,\r\n      adminSwitch: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const projectId = this.props.match.params.projectId;\r\n    this.props.fetchProject(projectId);\r\n    this.setState({ VPOsList: this.props.changeOrders });\r\n  }\r\n\r\n  search = (searchedText) => {\r\n    let temp = this.props.changeOrders;\r\n\r\n    if (searchedText) {\r\n      temp = temp.filter(({ purchasedItem }) => {\r\n        return purchasedItem.toLowerCase().includes(searchedText.toLowerCase());\r\n      });\r\n    }\r\n\r\n    this.setState({ VPOsList: temp });\r\n  };\r\n\r\n  toggleSearch = () => {\r\n    this.setState((prevState) => ({\r\n      showSearch: !prevState.showSearch,\r\n    }));\r\n  };\r\n\r\n  adminToggle = () => {\r\n    this.setState((prevState) => ({\r\n      adminSwitch: !prevState.adminSwitch,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { changeOrders, projectName } = this.props;\r\n    const { VPOsList } = this.state;\r\n    console.log(changeOrders);\r\n\r\n    return (\r\n      <div>\r\n        <TaskNav title={projectName} toggleSearch={this.toggleSearch} />\r\n        {this.state.showSearch ? (\r\n          <SearchBar\r\n            placeholder=\"Search variance POs...\"\r\n            search={this.search}\r\n          />\r\n        ) : null}\r\n\r\n        <div\r\n          style={{\r\n            padding: \"1em\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            borderBottom: \"1px solid #BCC5D3\",\r\n          }}\r\n        >\r\n          <ToggleButton\r\n            onToggleFunction={this.adminToggle}\r\n            checked={this.state.adminSwitch}\r\n            color=\"#6C5FCF\"\r\n          />\r\n          <p\r\n            style={{\r\n              fontSize: \"1em\",\r\n              color: \"#666666\",\r\n              margin: \"0\",\r\n              paddingLeft: \"0.5em\",\r\n            }}\r\n          >\r\n            Admin\r\n          </p>\r\n        </div>\r\n\r\n        {VPOsList.length === 0 ? (\r\n          <NoResult />\r\n        ) : this.state.adminSwitch ? (\r\n          <PurchaseOrdersListAdmin purchaseOrders={VPOsList} VPO={true} />\r\n        ) : (\r\n          <PurchaseOrderListContainer purchaseOrders={VPOsList} VPO={true} />\r\n        )}\r\n\r\n        <LowerNavBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  changeOrders: selectCurrentProjectChangeOrders,\r\n  projectName: selectCurrentProjectName,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectChangeOrders);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\adduser-form\\adduser-form.component.js",["1733","1734"],"import React, { Component } from \"react\";\r\nimport { LongButton } from \"../long-button/long-button.styles\";\r\nimport { AddUserDiv } from \"./adduser-form.styles\";\r\nimport { SmallText } from \"../project-item/project-item.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { inviteUserStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentProjectRoles } from \"../../redux/current-project/current-project.selectors\";\r\nimport {\r\n  FormHeading,\r\n  FormLabel,\r\n  FormInput,\r\n  FormDiv,\r\n} from \"../create-project-form/create-project-form.styles\";\r\nimport DropDown from \"./form-dropdown.component\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AddUserForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userDetails: {\r\n        email: \"\",\r\n        permission: \" \",\r\n        role: \" \",\r\n      },\r\n      permissions: [\r\n        [\"BILLINGADMIN\", \"Billing Admin\", \"Can lorem ipsum dolor\"],\r\n        [\"ADMIN\", \"Admin\", \"Can lorem ipsum dolor\"],\r\n        [\"AUTHOR\", \"Author\", \"Can lorem ipsum dolor\"],\r\n        [\"CONTRIBUTER\", \"Contributer\", \"Can lorem ipsum dolor\"],\r\n      ],\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    let userDetails = this.state.userDetails;\r\n    console.log(e);\r\n    const { name, value } = e.target;\r\n    userDetails[name] = value;\r\n    this.setState({ userDetails: userDetails }, () => console.log(userDetails));\r\n  };\r\n\r\n  handleOnOptionChange = (type, option) => {\r\n    let temp = this.state.userDetails;\r\n    temp[type] = option;\r\n    this.setState({ userDetails: temp }, () =>\r\n      console.log(this.state.userDetails)\r\n    );\r\n  };\r\n\r\n  addUser = (e) => {\r\n    e.preventDefault();\r\n    let userDetails = this.state.userDetails;\r\n    userDetails[\"type\"] = \"AddUser\";\r\n    this.setState({ userDetails: userDetails }, () => console.log(userDetails));\r\n    this.props.inviteUser(userDetails);\r\n  };\r\n  inviteUser = (e) => {\r\n    e.preventDefault();\r\n    let userDetails = this.state.userDetails;\r\n    userDetails[\"type\"] = \"saveandinvite\";\r\n    this.setState({ userDetails: userDetails }, () => console.log(userDetails));\r\n    this.props.inviteUser(userDetails);\r\n  };\r\n\r\n  render() {\r\n    const { projectRoles } = this.props;\r\n    let roles = [];\r\n\r\n    projectRoles.map((role) => {\r\n      let temp = [];\r\n      temp.push(role);\r\n      temp.push(role);\r\n      temp.push(\"\");\r\n      roles.push(temp);\r\n    });\r\n\r\n    console.log(\"project roles\", projectRoles);\r\n    return (\r\n      <AddUserDiv>\r\n        <FormHeading style={{ marginBottom: \"1em\" }}>\r\n          Add a User\r\n          <Link\r\n            to={`/project/${this.props.projectId}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              background: \"none\",\r\n              border: \"none\",\r\n              fontSize: \"1.4em\",\r\n              color: \"rgba(102,102,102,0.6)\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            &times;\r\n          </Link>\r\n        </FormHeading>\r\n\r\n        <FormDiv onChange={(e) => this.handleOnChange(e)}>\r\n          <div style={{ width: \"100%\", textAlign: \"left\" }}>\r\n            <FormLabel htmlFor=\"email\" style={{ fontSize: \"1em\" }}>\r\n              Email\r\n            </FormLabel>\r\n          </div>\r\n\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={this.state.userDetails.email}\r\n            onChange={(e) => this.handleOnChange(e)}\r\n            required\r\n          />\r\n\r\n          <div>\r\n            <FormLabel\r\n              htmlFor=\"permission\"\r\n              style={{ textAlign: \"left\", fontSize: \"1em\" }}\r\n            >\r\n              Permission Level:\r\n            </FormLabel>\r\n            <br />\r\n            <div style={{ width: \"100%\" }}>\r\n              <DropDown\r\n                options={this.state.permissions}\r\n                selected={this.state.userDetails.permission}\r\n                onChangePermission={this.handleOnOptionChange}\r\n                type=\"permission\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <FormLabel\r\n              htmlFor=\"role\"\r\n              style={{ textAlign: \"left\", fontSize: \"1em\" }}\r\n            >\r\n              Role(optional):\r\n            </FormLabel>\r\n          </div>\r\n\r\n          <div style={{ width: \"100%\" }}>\r\n            <DropDown\r\n              options={roles}\r\n              onChangePermission={this.handleOnOptionChange}\r\n              selected={this.state.userDetails.role}\r\n              type=\"role\"\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <LongButton onClick={this.inviteUser}>Invite</LongButton>\r\n          </div>\r\n        </FormDiv>\r\n      </AddUserDiv>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  // name: selectCurrentUserFirstName,\r\n  // projects: selectUserProjects\r\n  projectRoles: selectCurrentProjectRoles,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // signOut: () => dispatch(signOut())\r\n  inviteUser: (userDetails) => dispatch(inviteUserStart(userDetails)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUserForm);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\search-bar\\search-bar.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\admin-panel-task-page\\admin-panel-task-page.component.js",["1735"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectCurrentProjectBudget,\r\n  selectCurrentProjectOwner,\r\n  selectCurrentProjectPublished,\r\n  selectCurrentProjectPurchaseOrders,\r\n  selectCurrentProjectType,\r\n  selectCurrentPropertyType,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport ToggleButton from \"../toggle-button/toggle-button.component\";\r\nimport {\r\n  Overlay,\r\n  Text,\r\n  AdminPanelButtons,\r\n  AdminPanelDiv,\r\n  AdminPanelProjectDetailsDiv,\r\n  AdminPanelProjectDetailsHeading,\r\n  AdminPanelProjectsDetailsValue,\r\n  AdminPanelTeamDiv,\r\n} from \"./admin-panel-task-page.styles\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { UpdatePublishedInProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport ManageTeam from \"../manage-team/manage-team.component\";\r\nimport ManageRoles from \"../manage-roles/manage-roles.component\";\r\n\r\nclass AdminPanelTaskPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      publishedSwitch: null,\r\n      manageTeamSwitch: false,\r\n      manageRolesSwitch: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ publishedSwitch: this.props.published });\r\n  }\r\n\r\n  publishedToggle = () => {\r\n    this.setState((prevState) => ({\r\n      publishedSwitch: !prevState.publishedSwitch,\r\n    }));\r\n    console.log(\"called\");\r\n    this.props.updatePublished();\r\n  };\r\n\r\n  manageTeamToggle = () => {\r\n    this.setState((prevState) => ({\r\n      manageTeamSwitch: !prevState.manageTeamSwitch,\r\n    }));\r\n  };\r\n\r\n  manageRolesToggle = () => {\r\n    this.setState((prevState) => ({\r\n      manageRolesSwitch: !prevState.manageRolesSwitch,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { owner, projectType, propertyType, projectBudget, purchaseOrders } =\r\n      this.props;\r\n    console.log(this.props);\r\n\r\n    let actualAmount = 0;\r\n    purchaseOrders.map(({ totalOrderAmount }) => {\r\n      actualAmount = actualAmount + totalOrderAmount;\r\n    });\r\n\r\n    let diffAmount = projectBudget - actualAmount;\r\n    let diffColour = \"\";\r\n    if (diffAmount < 0) {\r\n      diffColour = \"#EB5757\";\r\n    } else {\r\n      diffColour = \"#429629\";\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <AdminPanelDiv>\r\n          <Text style={{ fontSize: \"1em\", color: \"#666666\" }}>\r\n            Owned by{\" \"}\r\n            <u>\r\n              {owner.firstName} {owner.lastName}\r\n            </u>\r\n          </Text>\r\n          <Text style={{ fontSize: \"1em\", color: \"#8997B1\" }}>\r\n            {propertyType ? projectType : null} {projectType}\r\n          </Text>\r\n          <div\r\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"50%\" }}\r\n          >\r\n            <AdminPanelProjectDetailsDiv>\r\n              <AdminPanelProjectDetailsHeading>\r\n                Estimated\r\n              </AdminPanelProjectDetailsHeading>\r\n              <AdminPanelProjectsDetailsValue>\r\n                ${projectBudget}\r\n              </AdminPanelProjectsDetailsValue>\r\n            </AdminPanelProjectDetailsDiv>\r\n            <AdminPanelProjectDetailsDiv>\r\n              <AdminPanelProjectDetailsHeading>\r\n                Actual\r\n              </AdminPanelProjectDetailsHeading>\r\n              <AdminPanelProjectsDetailsValue>\r\n                ${actualAmount}\r\n              </AdminPanelProjectsDetailsValue>\r\n            </AdminPanelProjectDetailsDiv>\r\n            <AdminPanelProjectDetailsDiv>\r\n              <AdminPanelProjectDetailsHeading>\r\n                Difference\r\n              </AdminPanelProjectDetailsHeading>\r\n              <AdminPanelProjectsDetailsValue style={{ color: diffColour }}>\r\n                ${diffAmount}\r\n              </AdminPanelProjectsDetailsValue>\r\n            </AdminPanelProjectDetailsDiv>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-start\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <ToggleButton\r\n              onToggleFunction={this.publishedToggle}\r\n              checked={this.state.publishedSwitch}\r\n              color=\"#429629\"\r\n            />\r\n\r\n            <p\r\n              style={{\r\n                fontSize: \"1em\",\r\n                color: \"#666666\",\r\n                margin: \"0\",\r\n                paddingLeft: \"0.5em\",\r\n              }}\r\n            >\r\n              Published\r\n            </p>\r\n          </div>\r\n        </AdminPanelDiv>\r\n\r\n        <AdminPanelTeamDiv>\r\n          <AdminPanelProjectDetailsHeading></AdminPanelProjectDetailsHeading>\r\n          <AdminPanelButtons>View Report</AdminPanelButtons>\r\n        </AdminPanelTeamDiv>\r\n        <AdminPanelTeamDiv>\r\n          <AdminPanelProjectDetailsHeading>\r\n            Assigned Members\r\n          </AdminPanelProjectDetailsHeading>\r\n          <AdminPanelButtons onClick={this.manageTeamToggle}>\r\n            Manage Team\r\n          </AdminPanelButtons>\r\n        </AdminPanelTeamDiv>\r\n        <AdminPanelTeamDiv>\r\n          <AdminPanelProjectDetailsHeading>\r\n            Roles Assigned\r\n          </AdminPanelProjectDetailsHeading>\r\n          <AdminPanelButtons onClick={this.manageRolesToggle}>\r\n            Manage Roles\r\n          </AdminPanelButtons>\r\n        </AdminPanelTeamDiv>\r\n\r\n        {this.state.manageTeamSwitch ? (\r\n          <Overlay\r\n            backgroundcolor=\"#FFFFFF\"\r\n            style={{ bottom: \"0\", height: \"100%\" }}\r\n          >\r\n            <ManageTeam\r\n              toggleManageTeam={this.manageTeamToggle}\r\n              projectId={this.props.projectId}\r\n            ></ManageTeam>\r\n          </Overlay>\r\n        ) : (\r\n          <Overlay />\r\n        )}\r\n\r\n        {this.state.manageRolesSwitch ? (\r\n          <Overlay\r\n            backgroundcolor=\"rgba(0,0,0,0.3)\"\r\n            style={{ bottom: \"0\", height: \"100%\" }}\r\n          >\r\n            <ManageRoles\r\n              toggleManageRoles={this.manageRolesToggle}\r\n            ></ManageRoles>\r\n          </Overlay>\r\n        ) : (\r\n          <Overlay />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  owner: selectCurrentProjectOwner,\r\n  projectType: selectCurrentProjectType,\r\n  propertyType: selectCurrentPropertyType,\r\n  purchaseOrders: selectCurrentProjectPurchaseOrders,\r\n  projectBudget: selectCurrentProjectBudget,\r\n  published: selectCurrentProjectPublished,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updatePublished: () => dispatch(UpdatePublishedInProjectStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanelTaskPage);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\adduser-form\\adduser-form.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\styles\\no-style-button.style.js",[],["1736","1737"],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\manage-team\\manage-team.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\team\\team.component.js",["1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  selectCurrentProjectId,\r\n  selectCurrentProjectUsers,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport AddUserForm from \"../adduser-form/adduser-form.component\";\r\nimport {\r\n  DropDownContent,\r\n  DropDownOption,\r\n  LowerDiv,\r\n  Overlay,\r\n  FormButton,\r\n  FormInverseButton,\r\n  Text,\r\n  SmallCircle,\r\n  BigCircle,\r\n  Image,\r\n  TeamDiv,\r\n  TeamDivItem,\r\n} from \"./team.styles\";\r\nimport removeImage from \"../../assets/remove.png\";\r\nimport TeamItem from \"./teamitem.component\";\r\nimport { AddRoleDiv } from \"../addrole-form/addrole-form.styles\";\r\nimport AddRoleForm from \"../addrole-form/addrole-form.component\";\r\n\r\nclass Team extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.dropdownContainer = React.createRef();\r\n    this.state = {\r\n      userDetails: [],\r\n      invite: false,\r\n      removeToggle: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  handleClickOutside = (event) => {\r\n    // console.log(this.dropdownContainer.current)\r\n    // console.log(event.target)\r\n    event.preventDefault();\r\n    if (\r\n      this.dropdownContainer.current &&\r\n      !this.dropdownContainer.current.contains(event.target)\r\n    ) {\r\n      this.setState({ removeToggle: null });\r\n    }\r\n  };\r\n\r\n  toggleRemoveDropdown = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.removeToggle) {\r\n      this.setState({ removeToggle: null });\r\n    } else {\r\n      this.setState({ removeToggle: e.target.dataset.id });\r\n    }\r\n  };\r\n\r\n  deleteUser = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"delete user\");\r\n  };\r\n\r\n  invite = () => {\r\n    if (this.state.invite == false) {\r\n      this.setState({ invite: true });\r\n    } else {\r\n      this.setState({ invite: false });\r\n    }\r\n    //console.log(this.state.invite)\r\n  };\r\n\r\n  render() {\r\n    const { users, projectId } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <TeamDiv>\r\n          {users.map((user, index) => {\r\n            console.log(user);\r\n            let unnamed = user.user.email.slice(\r\n              0,\r\n              user.user.email.indexOf(\"@\")\r\n            );\r\n\r\n            return (\r\n              <TeamItem\r\n                key={user.user._id}\r\n                projectId={this.props.projectId}\r\n                user={user}\r\n                unnamed={unnamed}\r\n                id={user.user._id}\r\n              ></TeamItem>\r\n            );\r\n          })}\r\n        </TeamDiv>\r\n        <LowerDiv style={{ marginBottom: \"5em\" }}>\r\n          <Text\r\n            style={{ fontSize: \"0.9em\", color: \"#666666\", margin: \"1.5em 0em\" }}\r\n          >\r\n            Need to add additional users not in Dig?\r\n          </Text>\r\n          <Text\r\n            style={{ fontSize: \"0.9em\", color: \"#6C7B8A\" }}\r\n            onClick={this.invite}\r\n          >\r\n            <Link\r\n              to={`/project/${projectId}/invite`}\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Invite now\r\n            </Link>\r\n          </Text>\r\n        </LowerDiv>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  // projectName: selectCurrentProjectName,\r\n  // projectStatus: selectCurrentProjectStatus,\r\n  // tasks: selectCurrentProjectTasks\r\n  users: selectCurrentProjectUsers,\r\n  projectId: selectCurrentProjectId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // fetchProjects : (projectId) => dispatch(fetchCurrentProjectStart(projectId))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Team);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\access\\access.component.js",["1752","1753","1754"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { UpdateUserInProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { selectCurrentProjectUsers } from \"../../redux/current-project/current-project.selectors\";\r\nimport {AccessForm, FormSelect} from \"./access.styles\";\r\nimport {TeamDivItem, BigCircle, LowerDiv, Overlay, Text, FormButton, FormInverseButton} from \"../team/team.styles\";\r\nimport DropDown from \"../access-dropdown/access-dropdown.component\";\r\n\r\nclass Access extends Component {\r\n    constructor(){\r\n        super()\r\n   \r\n        this.state = {\r\n            userDetails: [],\r\n            permissions:[\r\n              [\"BILLINGADMIN\", \"Billing Admin\", \"Can lorem ipsum dolor\"],\r\n              [\"ADMIN\", \"Admin\", \"Can lorem ipsum dolor\"],\r\n              [\"AUTHOR\", \"Author\", \"Can lorem ipsum dolor\"],\r\n              [\"CONTRIBUTER\", \"Contributer\", \"Can lorem ipsum dolor\"]\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n      console.log(\"mounter\", this.state.userDetails)\r\n    }\r\n\r\n    handleOnChange = (Userid, newPermission) => {\r\n        let done = false;\r\n        this.state.userDetails.map((user) => {\r\n          console.log(user)\r\n          if (user.id === Userid){\r\n            user.updatedPermission = newPermission;\r\n            done = true;\r\n          }\r\n        })\r\n\r\n        if(!done){\r\n          const user = {\r\n              id: Userid,\r\n              updatedPermission: newPermission\r\n          }\r\n          this.state.userDetails.push(user)\r\n\r\n        }\r\n        \r\n    }\r\n \r\n    submit = (e) => {\r\n      e.preventDefault()\r\n      const userDetails = this.state.userDetails\r\n      const {updateUser} = this.props\r\n      console.log(\"saved\", userDetails)\r\n      updateUser(userDetails)\r\n    }\r\n  render() {\r\n    const { users } = this.props;\r\n    return (\r\n    <>\r\n      <AccessForm>\r\n        {users.map((user, index) => {\r\n          let unnamed = user.user.email.slice(0,user.user.email.indexOf('@'));\r\n          return (\r\n            <TeamDivItem key={index}>\r\n              <label htmlFor={user.user._id}>\r\n                <div style={{display:\"flex\", flexDirection:\"row\", alignItems: \"center\"}}>\r\n                  <BigCircle>{user.user.firstName?user.user.firstName.charAt(0):unnamed.charAt(0)}</BigCircle>\r\n                  <Text style={{marginLeft:\"1em\"}}>{user.user.firstName?user.user.firstName:unnamed}</Text>\r\n                </div>\r\n              </label>\r\n              \r\n              <DropDown key={index} \r\n                        userID = {user.user._id} \r\n                        options={this.state.permissions} \r\n                        selected={user.permission}\r\n                        onChangePermission = {this.handleOnChange}/> \r\n             \r\n\r\n            </TeamDivItem>\r\n          );\r\n        })}\r\n      </AccessForm>\r\n      \r\n      <LowerDiv style={{marginBottom:\"7em\"}}>\r\n          <FormButton onClick={this.submit}>Save</FormButton>\r\n          <FormInverseButton onClick={this.props.exit}>Exit</FormInverseButton>\r\n      </LowerDiv>\r\n      \r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  users: selectCurrentProjectUsers,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateUser: (userDetails) => dispatch(UpdateUserInProjectStart(userDetails))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Access);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\search-bar\\search-bar.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\admin-panel-task-page\\admin-panel-task-page.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\access\\access.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\team\\team.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-project-form\\create-project-form.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\toggle-button\\toggle-button.component.jsx",["1755"],"import React, { Component } from \"react\";\r\nimport Switch from \"react-switch\";\r\n\r\nclass ToggleButton extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label>\r\n        <Switch \r\n            onChange={this.props.onToggleFunction} \r\n            checked={this.props.checked} \r\n            onColor={this.props.color}\r\n            uncheckedIcon={false}\r\n            checkedIcon={false}\r\n            height={26}\r\n            width={48}\r\n            />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToggleButton;","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\access-dropdown\\access-dropdown.component.jsx",["1756","1757","1758"],"import React, { Component } from 'react'\r\nimport {DropDownDiv, DropDownButton, DropDownContent, DropDownOption, DropDownOptionHeading, DropDownOptionDescription} from \"./dropdown.styles\";\r\nimport DownArrow from \"../../assets/down-arrow.png\"\r\n\r\nclass DropDown extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.dropdownContainer = React.createRef();\r\n        this.state={\r\n            dropDownSwitch:false, \r\n            selected: this.props.selected\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside = (event) => {\r\n        if (\r\n          this.dropdownContainer.current &&\r\n          !this.dropdownContainer.current.contains(event.target)\r\n        ) {\r\n          this.setState({\r\n            dropDownSwitch: false,\r\n          });\r\n        }\r\n      };\r\n\r\n    DropDownToggle = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => ({\r\n            dropDownSwitch: !prevState.dropDownSwitch\r\n        }));\r\n\r\n    }\r\n\r\n    handleOptionClick = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"change\")\r\n        let {permission} = e.target.dataset;\r\n        this.props.onChangePermission(this.props.userID,permission)\r\n        this.setState({dropDownSwitch:false, selected: permission});\r\n    }\r\n\r\n    render() {\r\n        \r\n        let {options} = this.props;\r\n        let {selected} = this.state;\r\n\r\n        let selectedIndex = 0;\r\n        options.map((option, index)=> {\r\n            if(option[0] === selected){\r\n                selectedIndex = index;\r\n            }\r\n        })\r\n        return (\r\n            <DropDownDiv ref={this.dropdownContainer}>\r\n                <DropDownButton onClick={this.DropDownToggle} img={DownArrow}>{options[selectedIndex][1]}</DropDownButton>\r\n                    <DropDownContent display={this.state.dropDownSwitch?\"block\":\"none\"}>\r\n\r\n                        <DropDownOption data-permission={options[selectedIndex][0]} onClick={this.handleOptionClick} backgroundFlag = {true}>\r\n                        <DropDownOptionHeading  data-permission={options[selectedIndex][0]} onClick={this.handleOptionClick}>{options[selectedIndex][1]}</DropDownOptionHeading>\r\n                        <DropDownOptionDescription  data-permission={options[selectedIndex][0]} onClick={this.handleOptionClick}>{options[selectedIndex][2]}</DropDownOptionDescription>\r\n                        </DropDownOption>\r\n                        \r\n                            {\r\n                            options.map((option) => {\r\n                                let selectedFlag = false;\r\n                                if(option[0] != selected){\r\n                                    return(\r\n                                        <DropDownOption data-permission={option[0]} onClick={this.handleOptionClick} backgroundFlag = {selectedFlag}>\r\n                                            <DropDownOptionHeading data-permission={option[0]} onClick={this.handleOptionClick}>{option[1]}</DropDownOptionHeading>\r\n                                            <DropDownOptionDescription  data-permission={option[0]} onClick={this.handleOptionClick}>{option[2]}</DropDownOptionDescription>\r\n                                        </DropDownOption>\r\n                                    \r\n                                    )\r\n                                }\r\n                            })\r\n                            }\r\n                    </DropDownContent>\r\n            </DropDownDiv>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropDown;","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\access-dropdown\\dropdown.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-dropdown\\form-dropdown.component.jsx",["1759","1760","1761"],"import React, { Component } from 'react'\r\nimport {DropDownDiv, DropDownButton, DropDownContent, DropDownOption, DropDownOptionHeading, DropDownOptionDescription} from \"./form-dropdown.styles\";\r\nimport DownArrow from \"../../assets/down-arrow.png\"\r\n\r\nclass DropDown extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.dropdownContainer = React.createRef();\r\n        this.state={\r\n            dropDownSwitch:false, \r\n            selected: this.props.selected\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside = (event) => {\r\n        if (\r\n          this.dropdownContainer.current &&\r\n          !this.dropdownContainer.current.contains(event.target)\r\n        ) {\r\n          this.setState({\r\n            dropDownSwitch: false,\r\n          });\r\n        }\r\n      };\r\n\r\n    DropDownToggle = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => ({\r\n            dropDownSwitch: !prevState.dropDownSwitch\r\n        }));\r\n\r\n    }\r\n\r\n    handleOptionClick = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"change\")\r\n        let {permission} = e.target.dataset;\r\n        this.props.onChangePermission(this.props.userID,permission)\r\n        this.setState({dropDownSwitch:false, selected: permission});\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        let {options} = this.props;\r\n        let {selected} = this.state;\r\n\r\n        let selectedIndex = 0;\r\n        options.map((option, index)=> {\r\n            if(option[0] === selected){\r\n                selectedIndex = index;\r\n            }\r\n        })\r\n        return (\r\n            <DropDownDiv ref={this.dropdownContainer}>\r\n                <DropDownButton onClick={this.DropDownToggle} img={DownArrow}>{options[selectedIndex][1]}</DropDownButton>\r\n                    <DropDownContent display={this.state.dropDownSwitch?\"block\":\"none\"}>\r\n\r\n                        <DropDownOption data-permission={options[selectedIndex][0]} onClick={this.handleOptionClick} backgroundFlag = {true}>\r\n                        <DropDownOptionHeading  data-permission={options[selectedIndex][0]} onClick={this.handleOptionClick}>{options[selectedIndex][1]}</DropDownOptionHeading>\r\n                        <DropDownOptionDescription  data-permission={options[selectedIndex][0]} onClick={this.handleOptionClick}>{options[selectedIndex][2]}</DropDownOptionDescription>\r\n                        </DropDownOption>\r\n                        \r\n                            {\r\n                            options.map((option) => {\r\n                                let selectedFlag = false;\r\n                                if(option[0] != selected){\r\n                                    return(\r\n                                        <DropDownOption data-permission={option[0]} onClick={this.handleOptionClick} backgroundFlag = {selectedFlag}>\r\n                                            <DropDownOptionHeading data-permission={option[0]} onClick={this.handleOptionClick}>{option[1]}</DropDownOptionHeading>\r\n                                            <DropDownOptionDescription  data-permission={option[0]} onClick={this.handleOptionClick}>{option[2]}</DropDownOptionDescription>\r\n                                        </DropDownOption>\r\n                                    \r\n                                    )\r\n                                }\r\n                            })\r\n                            }\r\n                    </DropDownContent>\r\n            </DropDownDiv>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropDown;","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-dropdown\\form-dropdown.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\manage-roles\\manage-roles.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\manage-roles\\manage-roles.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\addrole-form\\addrole-form.component.js",["1762","1763","1764","1765","1766","1767","1768"],"import React, { Component } from \"react\";\r\nimport { LongButton } from \"../long-button/long-button.styles\";\r\nimport { AddRoleDiv, UsersDiv, UsersDivContent, CheckBox, FormButton } from \"./addrole-form.styles\";\r\nimport { SmallText } from \"../project-item/project-item.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { inviteUserStart, UpdateRolesInProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentProjectRoles, selectCurrentProjectUsers } from \"../../redux/current-project/current-project.selectors\";\r\nimport {FormHeading, FormLabel, FormInput, FormDiv} from \"../create-project-form/create-project-form.styles\"\r\n\r\nclass AddRoleForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      newRole:'',\r\n      usersAssigned: []\r\n\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(name, value)\r\n    if(name===\"role\"){\r\n      this.setState({newRole: value})\r\n    }\r\n    else if(name===\"user\"){\r\n      const {userid} = e.target.dataset;\r\n      const { checked } = e.target;\r\n\r\n      if(checked){\r\n        \r\n        let exists = false;\r\n        this.state.usersAssigned.map((userId) => {\r\n          if(userId === userid){\r\n            exists = true;\r\n        }})\r\n        if(!exists){\r\n          \r\n          let temp = this.state.usersAssigned\r\n          temp.push(userid)\r\n          this.setState({usersAssigned:temp})\r\n        }\r\n    }\r\n\r\n    else if(!checked){\r\n      \r\n      let temp = this.state.usersAssigned\r\n      temp = temp.filter((userId) => {return !(userId === userid)})\r\n      this.setState({usersAssigned:temp})\r\n    } \r\n    }\r\n    console.log(this.state)\r\n  }\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault()\r\n    let allRoles =[]\r\n    let updatedRoles = []\r\n\r\n    this.props.projectRoles.map((projectRole)=> {\r\n      allRoles.push(projectRole)\r\n    })\r\n\r\n    allRoles.push(this.state.newRole);\r\n    console.log(allRoles)\r\n\r\n    this.state.usersAssigned.map((userId)=>{\r\n      let temp = {\r\n        id:'',\r\n        updatedRole:''\r\n      };\r\n      temp.id = userId;\r\n      temp.updatedRole = this.state.newRole;\r\n      updatedRoles.push(temp);\r\n    })\r\n\r\n    console.log(updatedRoles)\r\n    let payload = {allRoles, updatedRoles}\r\n    console.log(payload)\r\n    this.props.updateRoles(payload)\r\n  }\r\n  \r\n  render() {\r\n    let {projectUsers, projectRoles} = this.props;\r\n    \r\n    return (\r\n      <AddRoleDiv>\r\n        <FormHeading>\r\n            Create a New Role\r\n            <button  onClick={this.props.exit} style={{textDecoration:'none', \r\n                            background: 'none', \r\n                            border: 'none', \r\n                            fontSize:'1.4em', \r\n                            color:'rgba(102,102,102,0.6)'}}> &times;</button>\r\n        </FormHeading>\r\n        <br/>\r\n\r\n        <FormDiv onChange={(e) => this.handleOnChange(e)} >\r\n          <div>\r\n            <FormLabel htmlFor=\"role\" style={{textAlign:\"left\"}}> \r\n              A role helps assign a specific set of Subjects to a user. \r\n              Which type of position would you like to create?\r\n            </FormLabel>\r\n            <br/>\r\n            <br/>\r\n            <FormInput\r\n              type=\"text\"\r\n              value={this.state.newRole}\r\n              name=\"role\"\r\n              id=\"role\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              placeholder = \"ex) Site Manager, Intern \"\r\n              required />\r\n          </div>\r\n\r\n          <UsersDiv>\r\n          {\r\n            projectUsers.map((user, index)=> {\r\n              let unnamed = user.user.email.slice(0,user.user.email.indexOf('@'));\r\n              \r\n              return(\r\n                <UsersDivContent key={index}>\r\n                  <CheckBox\r\n                  name=\"user\"\r\n                  id={index}\r\n                  data-userid = {user.user._id}\r\n                  onChange={(e) => this.handleOnChange(e)}\r\n                  ></CheckBox>\r\n                  <label>{user.user.firstName?user.user.firstName:unnamed}</label>\r\n                </UsersDivContent>\r\n\r\n              )\r\n            })\r\n          }\r\n          </UsersDiv>\r\n          \r\n          <div style={{\r\n               display:\"flex\",\r\n               flexDirection:\"row\",\r\n               justifyContent: \"space-between\", \r\n               alignItems: \"center\"\r\n          }}>\r\n          <FormButton \r\n            border=\"1px solid #000000\"\r\n            color=\"#3F8CFF\"\r\n            bgcolor = \"#FFFFFF\"\r\n            width=\"40%\"\r\n            onClick={this.props.exit}\r\n          > \r\n          Cancel\r\n          </FormButton>\r\n          <FormButton \r\n            border=\"1px solid #3F8CFF\"\r\n            color=\"#FFFFFF\"\r\n            bgcolor = \"#3F8CFF\"\r\n            width=\"40%\"\r\n            onClick={this.handleOnSubmit}\r\n          > \r\n          Create\r\n          </FormButton>\r\n\r\n          </div>\r\n         \r\n        </FormDiv>\r\n      </AddRoleDiv>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  projectRoles: selectCurrentProjectRoles,\r\n  projectUsers: selectCurrentProjectUsers\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateRoles: (payload) => dispatch(UpdateRolesInProjectStart(payload))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRoleForm);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\addrole-form\\addrole-form.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-summary\\purchase-orders-summary.component.jsx",["1769","1770","1771","1772","1773"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { BigText, SmallText } from \"../project-item/project-item.styles\";\r\nimport SearchBar from \"../search-bar/search-bar.component\";\r\nimport { POSummaryDiv, Text, Button } from \"./purchase-orders-summary.styles\";\r\n\r\nclass PurchaseOrdersSummary extends React.Component {\r\n  render() {\r\n    let purchaseOrder = this.props.purchaseOrder[0];\r\n    console.log(purchaseOrder);\r\n\r\n    let sumAmount = 0;\r\n    let unpaidAmount = 0;\r\n    purchaseOrder.purchasedItems.map(({ itemNumber, itemValue, paid }) => {\r\n      sumAmount += itemNumber * itemValue;\r\n      if (!paid) {\r\n        unpaidAmount += itemNumber * itemValue;\r\n      }\r\n    });\r\n    return (\r\n      <POSummaryDiv>\r\n        <Text color=\"#727272\" fontSize=\"1em\">\r\n          <b>{purchaseOrder.PoTitle}</b>\r\n        </Text>\r\n        <Text color=\"#434343\" fontSize=\"2em\">\r\n          <b>${sumAmount}</b>\r\n        </Text>\r\n        <Text color=\"#434343\" fontSize=\"1em\">\r\n          Open Balance: ${unpaidAmount}\r\n        </Text>\r\n        <Button paid={unpaidAmount > 0 ? false : true}>\r\n          {unpaidAmount > 0 ? `Pay` : `Paid`}\r\n        </Button>\r\n      </POSummaryDiv>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PurchaseOrdersSummary);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-summary\\purchase-orders-summary.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-button\\create-button.component.jsx",["1774"],"import react, {Component} from 'react';\r\nimport {BigCircle, CreateDiv, CreateOptionsDiv, CreateOptionsImg} from \"./create-button.styles\";\r\nimport {Overlay} from \"../admin-panel-task-page/admin-panel-task-page.styles\";\r\nimport { Link } from 'react-router-dom'\r\nimport VPO from \"../../assets/VPODark.png\";\r\nimport PO from \"../../assets/PODark.png\";\r\nimport task from \"../../assets/taskDark.png\";\r\nimport punch from \"../../assets/PunchDark.png\";\r\n\r\n\r\nclass CreateButton extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            createSwitch:false\r\n        }\r\n    }\r\n\r\n    handleOnClick = () => {\r\n        this.setState((prevState) => ({\r\n            createSwitch: !prevState.createSwitch\r\n        }));\r\n        this.props.toggleNav();\r\n    }\r\n\r\n\r\n    render() {\r\n        let {projectId} = this.props\r\n        return (\r\n            <div>\r\n                {this.state.createSwitch? \r\n                <Overlay \r\n                    backgroundcolor = \"rgba(0,0,0,0.3)\" \r\n                    style={{bottom:\"0\",height:\"100%\", display:\"flex\", flexDirection:\"row\", justifyContent:\"center\"}}>\r\n                    <CreateDiv>\r\n                        <Link to={`/createTask/${projectId}`} style={{textDecoration:\"none\"}}>\r\n                            <CreateOptionsDiv justify={false}>\r\n                            <CreateOptionsImg src={task} style={{width:\"2em\", height:\"2em\"}}/>\r\n                                Task\r\n                            </CreateOptionsDiv>\r\n                        </Link>\r\n\r\n                        <Link to={`/createPO/${projectId}`}style={{textDecoration:\"none\"}}>\r\n                            <CreateOptionsDiv justify={false}>\r\n                            <CreateOptionsImg src={PO}/>\r\n                                PO\r\n                            </CreateOptionsDiv>\r\n                        </Link>\r\n\r\n                        <Link to={`/createCO/${projectId}`} style={{textDecoration:\"none\"}}>\r\n                            <CreateOptionsDiv justify={false}>\r\n                                <CreateOptionsImg src={VPO}/>\r\n                                CO\r\n                            </CreateOptionsDiv>\r\n                        </Link>\r\n\r\n                        <Link style={{textDecoration:\"none\"}}>\r\n                            <CreateOptionsDiv justify={false}>\r\n                                <CreateOptionsImg src={punch}/>\r\n                                Punch List Item\r\n                            </CreateOptionsDiv>\r\n                        </Link>\r\n                        <CreateOptionsDiv onClick={this.handleOnClick} justify={true} style={{flex:\"2\"}}>\r\n                            CANCEL\r\n                        </CreateOptionsDiv>\r\n                        \r\n                    </CreateDiv>\r\n                </Overlay> \r\n                : \r\n                <BigCircle onClick={this.handleOnClick}>\r\n                    <p style={{fontSize:\"2em\", margin:\"0\"}}>+</p>\r\n                </BigCircle>\r\n                }\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateButton;","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-button\\create-button.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\project-punch-list\\project-punch-list.jsx",["1775"],"import React, { Component } from 'react'\r\nimport { selectCurrentProjectName, selectCurrentProjectPunchlists, selectCurrentProjectTasks } from '../../redux/current-project/current-project.selectors';\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\r\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\r\nimport PunchLists from '../../components/all-punch-list/all-punch-list.component'\r\nimport SearchBar from '../../components/search-bar/search-bar.component';\r\nimport { fetchCurrentProjectStart } from '../../redux/current-project/current-project.actions';\r\nimport NoResult from '../../components/no-result/no-result.component';\r\n\r\n\r\nclass ProjectPunchList extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            punchlistsList: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const projectId = this.props.match.params.projectId;\r\n        this.props.fetchProject(projectId);\r\n        this.setState({punchlistsList: this.props.punchlists})\r\n    }\r\n\r\n    search = (searchedText) => {\r\n        let temp = this.props.punchlists\r\n\r\n        if(searchedText){\r\n          temp = temp.filter(({punchListName})=>{\r\n            return punchListName.toLowerCase().includes(searchedText.toLowerCase())\r\n          })\r\n        }\r\n        \r\n     \r\n        this.setState({punchlistsList: temp})\r\n        \r\n     }\r\n\r\n\r\n    render() {\r\n        const {punchlistsList} = this.state;\r\n        const {projectName} = this.props;\r\n\r\n        return (\r\n             <div>\r\n                <TaskNav title = {projectName}/>\r\n                <SearchBar placeholder=\"Search Punch Lists...\" search={this.search}/>\r\n                {punchlistsList.length === 0?<NoResult/>: <PunchLists punchlists= {punchlistsList} />}\r\n                <LowerNavBar/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    projectName: selectCurrentProjectName,\r\n    punchlists: selectCurrentProjectPunchlists\r\n    \r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId))\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ProjectPunchList);","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\all-punch-list\\all-punch-list.component.jsx",["1776","1777","1778","1779"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentProjectPunchlists } from \"../../redux/current-project/current-project.selectors\";\r\nimport { BigText, SmallText } from \"../project-item/project-item.styles\";\r\nimport SearchBar from \"../search-bar/search-bar.component\";\r\nimport {PODetailsDiv, PODiv,PONameDiv, Image} from \"./all-punch-list.styles\";\r\nimport punch from \"../../assets/PunchDark.png\";\r\n\r\nclass PunchLists extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n    \r\n  render() {\r\n    let punchlists = this.props.punchlists;\r\n \r\n    if (!punchlists) {\r\n        punchlists = [];\r\n    }\r\n    return (\r\n      <div>\r\n        {punchlists.map(({_id, punchListName, punchListItems}, index) => {\r\n            return (\r\n              <PODiv\r\n                key={_id}\r\n              >\r\n                <Link to={`/punchList/${_id}`} style={{textDecoration: 'none'}}>\r\n                <PONameDiv>\r\n                  <Image src={punch}></Image>\r\n                  <BigText>{punchListName}</BigText>\r\n                </PONameDiv>\r\n                </Link>\r\n\r\n                <PODetailsDiv>\r\n                  <BigText>{punchListItems.length}</BigText>\r\n                </PODetailsDiv>\r\n              </PODiv>\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PunchLists);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\all-punch-list\\all-punch-list.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\no-result\\no-result.component.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\team\\teamitem.component.js",["1780","1781","1782","1783","1784","1785","1786"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentProjectUsers } from \"../../redux/current-project/current-project.selectors\";\r\nimport AddUserForm from \"../adduser-form/adduser-form.component\";\r\nimport { DropDownContent, DropDownOption, LowerDiv, Overlay, FormButton, FormInverseButton, Text, SmallCircle, BigCircle, Image, TeamDiv, TeamDivItem } from \"./team.styles\";\r\nimport removeImage from \"../../assets/remove.png\"\r\nimport { deleteUserStart } from \"../../redux/current-project/current-project.actions\";\r\n\r\nclass TeamItem extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.dropdownContainer = React.createRef();\r\n        this.state = {\r\n            removeToggle: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside = (event) => {\r\n        event.preventDefault()\r\n        if (\r\n          this.dropdownContainer.current &&\r\n          !this.dropdownContainer.current.contains(event.target)\r\n        ) {\r\n          this.setState({removeToggle:false})\r\n        }\r\n      };\r\n\r\n    toggleRemoveDropdown = (e) => {\r\n      e.preventDefault()\r\n      if(this.state.removeToggle){\r\n        this.setState({removeToggle:false})\r\n      }\r\n      else{\r\n        this.setState({removeToggle:true})\r\n      }\r\n      \r\n    }\r\n\r\n    deleteUser = (e) => {\r\n      e.preventDefault()\r\n      let {id} = e.target.dataset;\r\n      let payload = {\r\n        userId: id,\r\n        projectId: this.props.projectId\r\n      }\r\n      console.log(payload);\r\n      this.props.deleteUser(payload);\r\n    }\r\n\r\n  render() {\r\n   \r\n    const { id,  unnamed } = this.props;\r\n    const {firstName} = this.props.user;\r\n    \r\n    return (\r\n          <TeamDivItem key={id}>\r\n                <div style={{display:\"flex\", flexDirection:\"row\", alignItems: \"center\"}}>\r\n                  <BigCircle>{firstName?firstName.charAt(0):unnamed.charAt(0)}</BigCircle>\r\n                  <Text style={{marginLeft:\"1em\"}}>{firstName?firstName:unnamed}</Text>\r\n                </div>\r\n                <div style={{marginLeft:\"1.5em\"}} \r\n                      data-id={id} \r\n                      onClick={this.toggleRemoveDropdown}>\r\n                        <SmallCircle ></SmallCircle>\r\n                        <SmallCircle ></SmallCircle>\r\n                        <SmallCircle ></SmallCircle>\r\n                        <DropDownContent \r\n                            data-id={id}\r\n                            ref={this.dropdownContainer} \r\n                            display={this.state.removeToggle?\"block\":\"none\"}\r\n                            onClick={this.deleteUser}>\r\n                            <DropDownOption\r\n                              data-id={id}>\r\n                                <Image src={removeImage}/>\r\n                                Remove\r\n                            </DropDownOption>\r\n                        </DropDownContent>\r\n                    </div>\r\n              </TeamDivItem>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteUser: (userDetails) => dispatch(deleteUserStart(userDetails))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamItem);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-nav\\projects-nav.component.jsx",["1787","1788","1789","1790","1791"],"import React, { Component } from \"react\";\r\nimport { Hamburger } from \"../hamburger/hamburger.component\";\r\nimport {\r\n  NavBar,\r\n  Heading,\r\n  SearchDiv,\r\n  OneThirdDiv,\r\n  Overlay,\r\n  FormHeading,\r\n} from \"./projects-nav.styles\";\r\nimport { BigText } from \"../project-item/project-item.styles\";\r\nimport CreateProjectForm from \"../create-project-form/create-project-form.component\";\r\nimport search from \"../../assets/navsearch.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ProjectNav extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  render() {\r\n    const { toggleSearchBar, title } = this.props;\r\n    return (\r\n      <>\r\n        <NavBar>\r\n          <OneThirdDiv justify=\"start\">\r\n            <Link to=\"/nav\">\r\n              <Hamburger />\r\n            </Link>\r\n          </OneThirdDiv>\r\n          <OneThirdDiv justify=\"center\">\r\n            <Heading> {title} </Heading>\r\n          </OneThirdDiv>\r\n          <OneThirdDiv justify=\"end\" onClick={toggleSearchBar}>\r\n            <SearchDiv src={search} />\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-nav\\projects-nav.styles.jsx",["1792","1793"],"import styled from \"styled-components\";\r\n\r\nexport const NavBar = styled.div`\r\n  @media screen and (min-width: 320px) {\r\n    width: 100%;\r\n    height: 3.5em;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    padding: 0em 1em;\r\n    color: black;\r\n    font-weight: 600;\r\n    border-bottom: 1px solid #bcc5d3;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const OneThirdDiv = styled.div`\r\n  @media screen and (min-width: 320px) {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: ${(props) => {\r\n      if (props.justify == \"start\") {\r\n        return \"flex-start\";\r\n      }\r\n      if (props.justify == \"end\") {\r\n        return \"flex-end\";\r\n      } else {\r\n        return \"center\";\r\n      }\r\n    }};\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const Heading = styled.p`\r\n  @media screen and (min-width: 320px) {\r\n    font-size: 1.2em;\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const SearchDiv = styled.img`\r\n  height: 24px;\r\n  width: 24px;\r\n  justify-self: flex-end;\r\n`;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-filter\\projects-filter.component.js",["1794","1795","1796","1797","1798","1799","1800"],"import React, { Component } from \"react\";\r\nimport { FormLabel,Container, FormDiv, Heading,FormButton, FormButtonsDiv } from \"./projects-filter.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { inviteUserStart, UpdateRolesInProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport DropDown from \"../projects-filter-dropdown/projects-filter-dropdown.component\"\r\nclass ProjectsFilter extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectStatus:'',\r\n      projectType:'',\r\n      propertyType:'',\r\n\r\n      allStatus: ['All Status','Active', 'Planned', 'Upcoming'],\r\n      allPropertyTypes: ['All Property Types','Office', 'Retail', 'Industrial', 'Hospitality', 'Residential', 'Land', 'Agricultural', 'Senior Housing', 'Special Purpose', 'Sport Entertainment', 'Multi-family'],\r\n      allProjectTypes: ['All Project Types','Remodel', 'New Build', 'Addition']\r\n\r\n    };\r\n  }\r\n\r\n  changeStatus = (key) => {\r\n    \r\n    this.setState({\r\n      projectStatus: key\r\n    })\r\n   \r\n  }\r\n\r\n  changeProjectType = (key) => {\r\n    \r\n    this.setState({\r\n      projectType: key\r\n    })\r\n   \r\n  }\r\n\r\n  changePropertyType = (key) => {\r\n    \r\n    this.setState({\r\n      propertyType: key\r\n    })\r\n   \r\n  }\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault()\r\n    let temp = {}\r\n    console.log(this.state)\r\n    let temp2 = ''\r\n    for (let i in this.state.projectStatus){\r\n      if(i!=\" \"){\r\n        temp2 += this.state.projectStatus[i].toUpperCase()\r\n      }\r\n    }\r\n    temp.projectStatus = temp2\r\n    \r\n   \r\n    temp2 = ''\r\n    for (let i in this.state.projectType){\r\n      if(i!=\" \"){\r\n        temp2 +=  this.state.projectType[i].toUpperCase()\r\n      }\r\n    }\r\n    temp.projectType = temp2\r\n    \r\n    \r\n    temp2 = ''\r\n    for (let i in this.state.propertyType){\r\n      if(i!=\" \"){\r\n        temp2 += this.state.propertyType[i].toUpperCase()\r\n      }\r\n    }\r\n    temp.propertyType = temp2\r\n   \r\n    this.props.onSubmit(temp)\r\n    this.props.exit()\r\n    \r\n  }\r\n\r\n  exit = (e) => {\r\n    this.props.onSubmit({\r\n      projectStatus:'',\r\n      projectType:'',\r\n      propertyType:''\r\n    })\r\n\r\n    this.props.exit()\r\n  }\r\n  \r\n  render() {\r\n    let {projectUsers, projectRoles} = this.props;\r\n    \r\n    return (\r\n        <>\r\n        <Container>\r\n        <Heading>\r\n          Filters\r\n\r\n          <button  onClick={this.props.exit} style={{textDecoration:'none', \r\n                                    background: 'none', \r\n                                    border: 'none', \r\n                                    fontSize:'1.4em', \r\n                                    color:'rgba(102,102,102,0.6)'}}> &times;</button>\r\n        </Heading>\r\n        \r\n        <FormDiv>\r\n          <FormLabel>\r\n            Status\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allStatus}\r\n          selected=\"All Status\"\r\n          onChange = {this.changeStatus}\r\n          field=\"projectStatus\"/>\r\n\r\n          <FormLabel>\r\n            Property Type\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allPropertyTypes}\r\n          selected=\"All Property Types\"\r\n          onChange = {this.changePropertyType}\r\n          field=\"propertyType\"\r\n          />\r\n\r\n          <FormLabel>\r\n            Project Type\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allProjectTypes}\r\n          selected=\"All Project Types\"\r\n          onChange = {this.changeProjectType}\r\n          field=\"projectType\"/>\r\n        </FormDiv>\r\n\r\n        <FormButtonsDiv>\r\n        <FormButton \r\n            border=\"1px solid #000000\"\r\n            color=\"#3F8CFF\"\r\n            bgcolor = \"#FFFFFF\"\r\n            width=\"40%\"\r\n            onClick={this.exit}\r\n          > \r\n          Cancel\r\n          </FormButton>\r\n          <FormButton \r\n            border=\"1px solid #3F8CFF\"\r\n            color=\"#FFFFFF\"\r\n            bgcolor = \"#3F8CFF\"\r\n            width=\"40%\"\r\n            onClick={this.handleOnSubmit}\r\n          > \r\n          Create\r\n          </FormButton>\r\n        </FormButtonsDiv>\r\n       \r\n        </Container>\r\n         \r\n      </>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsFilter);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-filter\\projects-filter.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-filter-dropdown\\projects-filter-dropdown.component.jsx",["1801","1802","1803","1804"],"import React, { Component } from 'react'\r\nimport {DropDownDiv, DropDownButton, DropDownContent, DropDownOption, DropDownOptionHeading, DropDownOptionDescription} from \"./projects-filter-dropdown.styles\";\r\nimport DownArrow from \"../../assets/down-arrow.png\"\r\n\r\nclass DropDown extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.dropdownContainer = React.createRef();\r\n        this.state={\r\n            dropDownSwitch:false, \r\n            selected: this.props.selected\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside = (event) => {\r\n        if (\r\n          this.dropdownContainer.current &&\r\n          !this.dropdownContainer.current.contains(event.target)\r\n        ) {\r\n          this.setState({\r\n            dropDownSwitch: false,\r\n          });\r\n        }\r\n      };\r\n\r\n    DropDownToggle = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => ({\r\n            dropDownSwitch: !prevState.dropDownSwitch\r\n        }));\r\n\r\n    }\r\n\r\n    handleOptionClick = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"change\")\r\n        let {key, type} = e.target.dataset;\r\n        this.props.onChange(key, type)\r\n        this.setState({dropDownSwitch:false, selected: key});\r\n    }\r\n\r\n    render() {\r\n       \r\n        let {options, field} = this.props;\r\n        let {selected} = this.state;\r\n\r\n        let selectedIndex = 0;\r\n        options.map((option, index)=> {\r\n            if(option === selected){\r\n                selectedIndex = index;\r\n            }\r\n        })\r\n        return (\r\n            <DropDownDiv ref={this.dropdownContainer}>\r\n                <DropDownButton onClick={this.DropDownToggle} img={DownArrow}>{options[selectedIndex]}</DropDownButton>\r\n                    <DropDownContent display={this.state.dropDownSwitch?\"block\":\"none\"}>\r\n\r\n                        <DropDownOption data-type={field} data-key={options[selectedIndex]} onClick={this.handleOptionClick} backgroundFlag = {true}>\r\n                        <DropDownOptionHeading  data-type={field} data-key={options[selectedIndex]} onClick={this.handleOptionClick}>{options[selectedIndex]}</DropDownOptionHeading>\r\n                        \r\n                        </DropDownOption>\r\n                        \r\n                            {\r\n                            options.map((option) => {\r\n                                let selectedFlag = false;\r\n                                \r\n                                if(option != selected){\r\n                                    return(\r\n                                        <DropDownOption data-type={field} data-key={option} onClick={this.handleOptionClick} backgroundFlag = {selectedFlag}>\r\n                                            <DropDownOptionHeading  data-type={field} data-key={option}  onClick={this.handleOptionClick}>{option}</DropDownOptionHeading>\r\n                                        </DropDownOption>\r\n                                    \r\n                                    )\r\n                                }\r\n                            })\r\n                            }\r\n                    </DropDownContent>\r\n            </DropDownDiv>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropDown;","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\projects-filter-dropdown\\projects-filter-dropdown.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-nav\\step-nav.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-nav\\step-nav.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-lower-nav\\step-lower-nav.component.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-lower-nav\\step-lower-nav.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-info\\step-info.component.jsx",["1805","1806","1807"],"import { string } from \"prop-types\";\r\nimport React, {Component} from \"react\";\r\nimport { Container, InfoDiv, InfoTitle, InfoBox} from \"./step-info.styles\";\r\n\r\n\r\nclass StepInfo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        let {taskOwner,taskEndDate, taskStartDate} = this.props\r\n        let startDate = new Date(taskStartDate)\r\n        let endDate = new Date(taskEndDate)\r\n        return(\r\n            <Container>\r\n                <InfoDiv>\r\n                    <InfoTitle>\r\n                        Task Owner\r\n                    </InfoTitle>\r\n                    <InfoBox>\r\n                        Myles\r\n                    </InfoBox>\r\n                </InfoDiv>\r\n\r\n                <InfoDiv>\r\n                    <InfoTitle>\r\n                        Start Date\r\n                    </InfoTitle>\r\n                    <InfoBox>\r\n                       {startDate.getDate() + \"/\" + startDate.getMonth() + \"/\" + startDate.getFullYear()}\r\n                    </InfoBox>\r\n                </InfoDiv>\r\n\r\n                <InfoDiv>\r\n                    <InfoTitle>\r\n                        End Date\r\n                    </InfoTitle>\r\n                    <InfoBox>\r\n                        {endDate.getDate() + \"/\" + endDate.getMonth() + \"/\" + endDate.getFullYear()}\r\n                    </InfoBox>\r\n                </InfoDiv>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StepInfo;","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\step-info\\step-info.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\tasks-filter\\tasks-filter.component.js",["1808","1809","1810","1811","1812"],"import React, { Component } from \"react\";\r\nimport { FormLabel,Container, FormDiv, Heading,FormButton, FormButtonsDiv } from \"./tasks-filter.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport DropDown from \"../projects-filter-dropdown/projects-filter-dropdown.component\"\r\n\r\nclass TasksFilter extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectStatus:'',\r\n      projectType:'',\r\n      propertyType:'',\r\n\r\n      allStatus: ['All Status','Active', 'Planned', 'Upcoming'],\r\n      allPropertyTypes: ['All Property Types','Office', 'Retail', 'Industrial', 'Hospitality', 'Residential', 'Land', 'Agricultural', 'Senior Housing', 'Special Purpose', 'Sport Entertainment', 'Multi-family'],\r\n      allProjectTypes: ['All Project Types','Remodel', 'New Build', 'Addition']\r\n\r\n    };\r\n  }\r\n\r\n  changeStatus = (key) => {\r\n    \r\n    this.setState({\r\n      projectStatus: key\r\n    })\r\n   \r\n  }\r\n\r\n  changeProjectType = (key) => {\r\n    \r\n    this.setState({\r\n      projectType: key\r\n    })\r\n   \r\n  }\r\n\r\n  changePropertyType = (key) => {\r\n    \r\n    this.setState({\r\n      propertyType: key\r\n    })\r\n   \r\n  }\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault()\r\n    let temp = {}\r\n    console.log(this.state)\r\n    let temp2 = ''\r\n    for (let i in this.state.projectStatus){\r\n      if(i!=\" \"){\r\n        temp2 += this.state.projectStatus[i].toUpperCase()\r\n      }\r\n    }\r\n    temp.projectStatus = temp2\r\n    \r\n   \r\n    temp2 = ''\r\n    for (let i in this.state.projectType){\r\n      if(i!=\" \"){\r\n        temp2 +=  this.state.projectType[i].toUpperCase()\r\n      }\r\n    }\r\n    temp.projectType = temp2\r\n    \r\n    \r\n    temp2 = ''\r\n    for (let i in this.state.propertyType){\r\n      if(i!=\" \"){\r\n        temp2 += this.state.propertyType[i].toUpperCase()\r\n      }\r\n    }\r\n    temp.propertyType = temp2\r\n   \r\n    this.props.onSubmit(temp)\r\n    this.props.exit()\r\n    \r\n  }\r\n\r\n  exit = (e) => {\r\n    this.props.onSubmit({\r\n      projectStatus:'',\r\n      projectType:'',\r\n      propertyType:''\r\n    })\r\n\r\n    this.props.exit()\r\n  }\r\n  \r\n  render() {\r\n    let {projectUsers, projectRoles} = this.props;\r\n    \r\n    return (\r\n        <>\r\n        <Container>\r\n        <Heading>\r\n          Filters\r\n\r\n          <button  onClick={this.props.exit} style={{textDecoration:'none', \r\n                                    background: 'none', \r\n                                    border: 'none', \r\n                                    fontSize:'1.4em', \r\n                                    color:'rgba(102,102,102,0.6)'}}> &times;</button>\r\n        </Heading>\r\n        \r\n        <FormDiv>\r\n          <FormLabel>\r\n            Status\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allStatus}\r\n          selected=\"All Status\"\r\n          onChange = {this.changeStatus}\r\n          field=\"projectStatus\"/>\r\n\r\n          <FormLabel>\r\n            Property Type\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allPropertyTypes}\r\n          selected=\"All Property Types\"\r\n          onChange = {this.changePropertyType}\r\n          field=\"propertyType\"\r\n          />\r\n\r\n          <FormLabel>\r\n            Project Type\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allProjectTypes}\r\n          selected=\"All Project Types\"\r\n          onChange = {this.changeProjectType}\r\n          field=\"projectType\"/>\r\n        </FormDiv>\r\n\r\n        <FormButtonsDiv>\r\n        <FormButton \r\n            border=\"1px solid #000000\"\r\n            color=\"#3F8CFF\"\r\n            bgcolor = \"#FFFFFF\"\r\n            width=\"40%\"\r\n            onClick={this.exit}\r\n          > \r\n          Cancel\r\n          </FormButton>\r\n          <FormButton \r\n            border=\"1px solid #3F8CFF\"\r\n            color=\"#FFFFFF\"\r\n            bgcolor = \"#3F8CFF\"\r\n            width=\"40%\"\r\n            onClick={this.handleOnSubmit}\r\n          > \r\n          Create\r\n          </FormButton>\r\n        </FormButtonsDiv>\r\n       \r\n        </Container>\r\n         \r\n      </>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksFilter);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\tasks-filter\\tasks-filter.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-task-form\\create-task-form.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-task\\create-task.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-PO\\create-PO.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-purchase-order-form\\create-purchase-order-form.component.jsx",["1813","1814","1815","1816","1817","1818","1819","1820"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { createPurchaseOrderStart } from \"../../redux/current-purchase-order/current-purchase-order.actions\";\r\nimport {\r\n  selectCurrentProjectId,\r\n  selectCurrentProjectTasks,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoInputDiv,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  POFormDiv,\r\n  Overlay,\r\n  AddLineItemDiv,\r\n  AmountDiv,\r\n  LongDiv,\r\n} from \"./create-purchase-order-form.styles\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport FormFullScreenSelection from \"../form-fullscreen-selection/form-fullscreen-selection.component\";\r\nimport FormCostbookSelection from \"../form-costbook-selection/form-costbook-selection.component\";\r\nimport add from \"../../assets/add.png\";\r\nimport remove from \"../../assets/minuscircle.png\";\r\n\r\nclass CreatePurchaseOrderForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      purchaseOrderDetails: {\r\n        PoTitle: \"\",\r\n        userId: \"\",\r\n        projectId: \"\",\r\n        purchasedItem: [],\r\n        orderFrom: \"\", //placeholder\r\n        group: \"\",\r\n        terms: \"\",\r\n        dueDate: \"\",\r\n        taskId: \"\",\r\n        taskName: \"\",\r\n      },\r\n      formChoose: null,\r\n      active: \"Info\",\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let PurchaseOrder = this.state.purchaseOrderDetails;\r\n    PurchaseOrder[name] = value;\r\n\r\n    this.setState({ purchaseOrderDetails: PurchaseOrder }, () =>\r\n      console.log(this.state)\r\n    );\r\n  };\r\n\r\n  createPurchaseOrder = (e) => {\r\n    e.preventDefault();\r\n    let purchaseOrderDetails = this.state.purchaseOrderDetails;\r\n\r\n    this.props.tasks.map((task) => {\r\n      if (task.taskName == purchaseOrderDetails.taskName) {\r\n        purchaseOrderDetails.taskId = task._id;\r\n      }\r\n    });\r\n\r\n    console.log(purchaseOrderDetails);\r\n\r\n    this.props.createPurchaseOrder(purchaseOrderDetails);\r\n  };\r\n\r\n  handleOnClick = (e) => {\r\n    let { key } = e.target.dataset;\r\n\r\n    this.setState({\r\n      active: key,\r\n    });\r\n  };\r\n\r\n  exit = (e) => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  toggleFormChoose = (type) => {\r\n    if (!this.state.formChoose) {\r\n      this.setState({ formChoose: type }, console.log(this.state));\r\n    } else {\r\n      this.setState({ formChoose: null });\r\n    }\r\n  };\r\n\r\n  select = ({ value, type }) => {\r\n    let temp = this.state.purchaseOrderDetails;\r\n    if (type === \"purchasedItem\") {\r\n      temp[type].push(value);\r\n    } else {\r\n      temp[type] = value;\r\n    }\r\n\r\n    this.setState({ purchaseOrderDetails: temp }, () => {\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  itemRemove = (e) => {\r\n    let { itemid } = e.target.dataset;\r\n\r\n    let temp = this.state.purchaseOrderDetails;\r\n    let items = temp[\"purchasedItem\"];\r\n    items = items.filter((item) => {\r\n      return item.itemId != itemid;\r\n    });\r\n    temp[\"purchasedItem\"] = items;\r\n\r\n    this.setState({ purchaseOrderDetails: temp }, () => {\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { tasks } = this.props;\r\n    let { active } = this.state;\r\n\r\n    let taskNames = [];\r\n    tasks.map((task) => {\r\n      taskNames.push(task.taskName);\r\n    });\r\n\r\n    return (\r\n      <POFormDiv>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n            Cancel\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n            New PO\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"flex-end\"\r\n            color=\"#205284\"\r\n            onClick={this.createPurchaseOrder}\r\n          >\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n        <LowerNavDiv>\r\n          <OneHalfDiv\r\n            data-key=\"Info\"\r\n            onClick={this.handleOnClick}\r\n            active={active === \"Info\"}\r\n          >\r\n            INFO\r\n          </OneHalfDiv>\r\n          <OneHalfDiv\r\n            data-key=\"Items\"\r\n            onClick={this.handleOnClick}\r\n            active={active === \"Items\"}\r\n          >\r\n            ITEMS\r\n          </OneHalfDiv>\r\n        </LowerNavDiv>\r\n        {this.state.active === \"Info\" ? (\r\n          <form\r\n            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            onChange={(e) => this.handleOnChange(e)}\r\n          >\r\n            <div>\r\n              <LongInput\r\n                type=\"text\"\r\n                value={this.state.purchaseOrderDetails.PoTitle}\r\n                name=\"PoTitle\"\r\n                id=\"PoTitle\"\r\n                placeholder=\"Purchase Order Title\"\r\n                onChange={(e) => this.handleOnChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <Container>\r\n              <InfoDiv>\r\n                <InfoTitle>Task</InfoTitle>\r\n                <InfoInputDiv\r\n                  id=\"taskName\"\r\n                  onClick={() => {\r\n                    this.toggleFormChoose(\"taskName\");\r\n                  }}\r\n                  required\r\n                >\r\n                  {this.state.purchaseOrderDetails.taskName\r\n                    ? this.state.purchaseOrderDetails.taskName\r\n                    : \"Choose a task\"}\r\n                </InfoInputDiv>\r\n              </InfoDiv>\r\n\r\n              <InfoDiv>\r\n                <InfoTitle>Payee</InfoTitle>\r\n                <InfoInputDiv\r\n                  id=\"payee\"\r\n                  onClick={() => {\r\n                    this.toggleFormChoose(\"payee\");\r\n                  }}\r\n                  required\r\n                >\r\n                  {this.state.purchaseOrderDetails.payee\r\n                    ? this.state.purchaseOrderDetails.payee\r\n                    : \"Choose a payee\"}\r\n                </InfoInputDiv>\r\n              </InfoDiv>\r\n\r\n              <InfoDiv>\r\n                <InfoTitle>Group</InfoTitle>\r\n                <InfoInputDiv\r\n                  id=\"group\"\r\n                  onClick={() => {\r\n                    this.toggleFormChoose(\"group\");\r\n                  }}\r\n                  required\r\n                >\r\n                  {this.state.purchaseOrderDetails.group\r\n                    ? this.state.purchaseOrderDetails.group\r\n                    : \"Choose a Group\"}\r\n                </InfoInputDiv>\r\n              </InfoDiv>\r\n\r\n              <InfoDiv>\r\n                <InfoTitle>Terms</InfoTitle>\r\n                <InfoInputDiv\r\n                  id=\"terms\"\r\n                  onClick={() => {\r\n                    this.toggleFormChoose(\"terms\");\r\n                  }}\r\n                  required\r\n                >\r\n                  {this.state.purchaseOrderDetails.terms\r\n                    ? this.state.purchaseOrderDetails.terms\r\n                    : \"Choose Terms\"}\r\n                </InfoInputDiv>\r\n              </InfoDiv>\r\n\r\n              <InfoDiv>\r\n                <InfoTitle>Due Date</InfoTitle>\r\n                <InfoInput\r\n                  type=\"date\"\r\n                  value={this.state.purchaseOrderDetails.dueDate}\r\n                  name=\"dueDate\"\r\n                  id=\"dueDate\"\r\n                  onChange={(e) => this.handleOnChange(e)}\r\n                  required\r\n                />\r\n              </InfoDiv>\r\n            </Container>\r\n          </form>\r\n        ) : (\r\n          <div>\r\n            <form\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n              onChange={(e) => this.handleOnChange(e)}\r\n            >\r\n              <div>\r\n                <LongInput\r\n                  type=\"text\"\r\n                  value={this.state.purchaseOrderDetails.PoTitle}\r\n                  name=\"PoTitle\"\r\n                  id=\"PoTitle\"\r\n                  placeholder=\"Purchase Order Title\"\r\n                  onChange={(e) => this.handleOnChange(e)}\r\n                  required\r\n                />\r\n              </div>\r\n            </form>\r\n            <Container>\r\n              {this.state.purchaseOrderDetails.purchasedItem.map(\r\n                ({ itemName, itemNumber, itemValue, itemId, comment }) => {\r\n                  return (\r\n                    <LongDiv data-id={itemId}>\r\n                      <div\r\n                        style={{\r\n                          width: \"80%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                            flex: 0.8,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={remove}\r\n                            data-itemId={itemId}\r\n                            onClick={(e) => {\r\n                              this.itemRemove(e);\r\n                            }}\r\n                          />\r\n                          <div>{itemName}</div>\r\n                        </div>\r\n\r\n                        <div>${itemNumber * itemValue}</div>\r\n                      </div>\r\n                    </LongDiv>\r\n                  );\r\n                }\r\n              )}\r\n\r\n              <AddLineItemDiv\r\n                onClick={() => {\r\n                  console.log(this.state);\r\n                  this.toggleFormChoose(\"items\");\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    flex: 0.2,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <img src={add} />\r\n                </div>\r\n                <div style={{ flex: 0.8, borderBottom: \"1px solid #d3d3d3\" }}>\r\n                  Add Line Item\r\n                </div>\r\n              </AddLineItemDiv>\r\n\r\n              <AmountDiv>\r\n                <div>SubTotal</div>\r\n                <div>$0</div>\r\n              </AmountDiv>\r\n              <AmountDiv>\r\n                <div>SubTotal</div>\r\n                <div>$0</div>\r\n              </AmountDiv>\r\n              <AmountDiv>\r\n                <div>SubTotal</div>\r\n                <div>$0</div>\r\n              </AmountDiv>\r\n            </Container>\r\n          </div>\r\n        )}\r\n\r\n        {this.state.active === \"Info\" &&\r\n        this.state.formChoose === \"taskName\" ? (\r\n          <Overlay style={{ bottom: \"0\", height: \"100%\" }}>\r\n            <FormFullScreenSelection\r\n              exit={this.toggleFormChoose}\r\n              items={taskNames}\r\n              select={this.select}\r\n              type={this.state.formChoose}\r\n              selected={this.state.purchaseOrderDetails.taskName}\r\n            />\r\n          </Overlay>\r\n        ) : null}\r\n\r\n        {this.state.active === \"Info\" && this.state.formChoose === \"terms\" ? (\r\n          <Overlay style={{ bottom: \"0\", height: \"100%\" }}>\r\n            <FormFullScreenSelection\r\n              exit={this.toggleFormChoose}\r\n              items={[\"Due on Receipt\", \"Net 15\", \"Net 30\", \"Net 60\"]}\r\n              select={this.select}\r\n              type={this.state.formChoose}\r\n              selected={this.state.purchaseOrderDetails.terms}\r\n            />\r\n          </Overlay>\r\n        ) : null}\r\n\r\n        {this.state.active === \"Info\" && this.state.formChoose === \"payee\" ? (\r\n          <Overlay style={{ bottom: \"0\", height: \"100%\" }}>\r\n            <FormFullScreenSelection\r\n              exit={this.toggleFormChoose}\r\n              items={[\"Due on Receipt\", \"Net 15\", \"Net 30\", \"Net 60\"]}\r\n              select={this.select}\r\n              type={this.state.formChoose}\r\n              selected={this.state.purchaseOrderDetails.payee}\r\n            />\r\n          </Overlay>\r\n        ) : null}\r\n\r\n        {this.state.active === \"Info\" && this.state.formChoose === \"group\" ? (\r\n          <Overlay style={{ bottom: \"0\", height: \"100%\" }}>\r\n            <FormFullScreenSelection\r\n              exit={this.toggleFormChoose}\r\n              items={[\"Due on Receipt\", \"Net 15\", \"Net 30\", \"Net 60\"]}\r\n              select={this.select}\r\n              type={this.state.formChoose}\r\n              selected={this.state.purchaseOrderDetails.group}\r\n            />\r\n          </Overlay>\r\n        ) : null}\r\n\r\n        {this.state.active === \"Items\" && this.state.formChoose === \"items\" ? (\r\n          <Overlay style={{ bottom: \"0\", height: \"100%\" }}>\r\n            <FormCostbookSelection\r\n              exit={this.toggleFormChoose}\r\n              submitItem={this.select}\r\n            />\r\n          </Overlay>\r\n        ) : null}\r\n      </POFormDiv>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  projectId: selectCurrentProjectId,\r\n  tasks: selectCurrentProjectTasks,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createPurchaseOrder: (purchaseOrderDetails) =>\r\n    dispatch(createPurchaseOrderStart(purchaseOrderDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CreatePurchaseOrderForm));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-purchase-order-form\\create-purchase-order-form.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\costbook\\costbook.saga.js",["1821","1822"],"import { all, call, put, takeLatest, select, delay} from \"redux-saga/effects\";\r\n    import { createCostBookCategoryFail, createCostBookCategorySucessful, createCostCodeFailute, createCostCodeItemFailure, createCostCodeItemSuccess, createCostCodeSuccess, editCostBookCostCodeFailure, editCostBookCostCodeSucessful, editCostBookItemsFailure, editCostBookItemsSuccess, fetchCostBookFailure, fetchCostBookSuccess } from \"./costbook.actions\";\r\nimport { CostBookActionTypes } from \"./costbook.types\";\r\n\r\nexport function* fetchCostBook({payload}){\r\n  try {\r\n    let costBook = yield fetch(`http://127.0.0.1:5000/costbook`)\r\n    costBook = yield costBook.json()\r\n\r\n    costBook.done\r\n    ? yield put(fetchCostBookSuccess(costBook.costbook))\r\n    : yield put(fetchCostBookFailure('Error.'))\r\n  } catch (error) {\r\n    fetchCostBookFailure(error)\r\n  }\r\n}\r\n\r\nexport function* createCostBookCategory({payload}){\r\n    console.log('in saga', payload)\r\n    let data = payload\r\n    try {\r\n        let costbookcategory = yield fetch(`http://127.0.0.1:5000/createCostBookCategory`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n          })\r\n        costbookcategory = yield costbookcategory.json()\r\n        if(costbookcategory.done){\r\n            yield put(createCostBookCategorySucessful(costbookcategory.message))\r\n        }else{\r\n            yield put(createCostBookCategoryFail('error'))\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* createCostBookCostCodeStart({payload}){\r\n  console.log('in saga', payload)\r\n    let data = payload\r\n    try {\r\n        let resp = yield fetch(`http://127.0.0.1:5000/createCostCode`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(data),\r\n            }\r\n         )\r\n         resp = yield resp.json()\r\n         if(resp.done){\r\n             yield put(createCostCodeSuccess(resp.message))\r\n         }else{\r\n             yield put(createCostCodeFailute('error'))\r\n         }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* createCostBookCostCodeItemStart({payload}){\r\n    let data = payload\r\n    try {\r\n        let resp = yield fetch(`http://127.0.0.1:5000/createCostCodeItem`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(data),\r\n            }\r\n         )\r\n         resp = yield resp.json()\r\n         if(resp.done){\r\n             yield put(createCostCodeItemSuccess(resp.message))\r\n         }else{\r\n             yield put(createCostCodeItemFailure('error'))\r\n         }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* editCostBookCostCodeStart({payload}){\r\n  const data = payload\r\n  try {\r\n    let resp = yield fetch(`http://127.0.0.1:5000/editCostCode`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(data),\r\n            }\r\n         )\r\n         resp = yield resp.json()\r\n         if(resp.done){\r\n             yield put(editCostBookCostCodeSucessful(resp.message))\r\n         }else{\r\n             yield put(editCostBookCostCodeFailure('error'))\r\n         }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function* editCostBookItemStart({payload}){\r\n  let data = payload\r\n  try {\r\n    let resp = yield fetch(`http://127.0.0.1:5000/editCostCodeItem`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(data),\r\n            }\r\n         )\r\n         resp = yield resp.json()\r\n         if(resp.done){\r\n             yield put(editCostBookItemsSuccess(resp.message))\r\n         }else{\r\n             yield put(editCostBookItemsFailure('error'))\r\n         }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function* onCostBookFetchStart(){\r\n  yield takeLatest(CostBookActionTypes.FETCH_COST_BOOK_START, fetchCostBook)\r\n}\r\n\r\nexport function* onCreateCostCodeStart(){\r\n    yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_COSTCODE_START, createCostBookCostCodeStart)\r\n}\r\n\r\nexport function* onCreateCostCodeItemStart(){\r\n    yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_COSTCODEITEM_START, createCostBookCostCodeItemStart)\r\n}\r\n\r\nexport function* onCreateCostCodeCategoryStart(){\r\n  yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_CATEGORY_START, createCostBookCategory)\r\n}\r\n\r\nexport function* onEditCostCodeStart(){\r\n yield takeLatest(CostBookActionTypes.EDIT_COSTBOOK_COSTCODE_START, editCostBookCostCodeStart)\r\n}\r\n\r\nexport function* onEditCostBookItemStart(){\r\n  yield takeLatest(CostBookActionTypes.EDIT_COSTBOOK_ITEM_START, editCostBookItemStart)\r\n}\r\n\r\nexport function* costBookSagas() {\r\n  yield all([\r\n    call(onCostBookFetchStart),\r\n    call(onCreateCostCodeItemStart),\r\n    call(onCreateCostCodeStart),\r\n    call(onCreateCostCodeCategoryStart),\r\n    call(onEditCostCodeStart),\r\n    call(onEditCostBookItemStart)\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\costbook\\costbook.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\costbook\\costbook.actions.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\costbook\\costbook.reducer.js",["1823","1824"],"import { CostBookActionTypes } from \"./costbook.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  createCostBookCategoryStart: false,\r\n  createCostBookCategorySuccessful: false,\r\n  createCostBookCategoryFail: false,\r\n  fetchCostBookStart: false,\r\n  fetchCostBookSuccess: false,\r\n  fetchCostBookFailure: false,\r\n  createCostCodeStart: false,\r\n  createCostCodeSuccess: false,\r\n  createCostCodeFailure: false,\r\n  createCostCodeItemStart: false,\r\n  createCostCodeItemFailure: false,\r\n  createCostCodeItemSuccess: false,\r\n  editCostCodeStart: false,\r\n  editCostCodeSuccess: false,\r\n  editCostCodeFailure: false,\r\n  editCostItemStart: false,\r\n  editCostItemSuccess: false,\r\n  editCostItemFailure: false,\r\n  errorMessage: undefined,\r\n  message: null,\r\n  costBook: [],\r\n};\r\n\r\nconst costBookReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CostBookActionTypes.CREATE_COST_BOOK_CATEGORY_START:\r\n      return {\r\n        ...state,\r\n        createCostBookCategoryStart: true,\r\n        createCostBookCategoryFail: false,\r\n        createCostBookCategorySuccessful: false,\r\n        errorMessage: null,\r\n      };\r\n    case CostBookActionTypes.CREATE_COST_BOOK_CATEGORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createCostBookCategoryStart: false,\r\n        createCostBookCategorySuccessful: true,\r\n        createCostBookCategoryFail: false,\r\n        message: \"TASK CREATED SUCCESSFULLY!\",\r\n      };\r\n\r\n    case CostBookActionTypes.CREATE_COST_BOOK_CATEGORY_FAILURE:\r\n      return {\r\n        ...state,\r\n        createCostBookCategoryStart: false,\r\n        createCostBookCategoryFail: true,\r\n        createCostBookCategorySuccessful: false,\r\n        errorMessage: action.payload,\r\n      };\r\n    case CostBookActionTypes.CREATE_COST_BOOK_COSTCODE_START:\r\n      return {\r\n        ...state,\r\n        createCostCodeStart: true,\r\n        createCostCodeSuccess: false,\r\n        createCostCodeFailure: false,\r\n      };\r\n    case CostBookActionTypes.CREATE_COST_BOOK_COSTCODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createCostCodeStart: false,\r\n        createCostCodeSuccess: true,\r\n        createCostCodeFailure: false,\r\n        message: \"COST BOOK COST CODE CREATED\",\r\n      };\r\n    case CostBookActionTypes.CREATE_COST_BOOK_COSTCODE_FAILURE:\r\n      return {\r\n        ...state,\r\n        createCostCodeStart: false,\r\n        errorMessage: action.payload,\r\n        createCostCodeFailure: true,\r\n        createCostCodeSuccess: false,\r\n      };\r\n    case CostBookActionTypes.CREATE_COST_BOOK_COSTCODEITEM_START:\r\n      return {\r\n        ...state,\r\n        createCostCodeItemStart: true,\r\n        createCostCodeItemSuccess: false,\r\n        createCostCodeItemFailure: false,\r\n      };\r\n    case CostBookActionTypes.CREATE_COST_BOOK_COSTCODEITEM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createCostCodeItemStart: false,\r\n        createCostCodeItemSuccess: true,\r\n        createCostCodeItemFailure: false,\r\n      };\r\n    case CostBookActionTypes.CREATE_COST_BOOK_COSTCODE_FAILURE:\r\n      return {\r\n        ...state,\r\n        createCostCodeItemStart: false,\r\n        createCostCodeItemFailure: true,\r\n        createCostCodeItemSuccess: false,\r\n        errorMessage: action.payload,\r\n      };\r\n    case CostBookActionTypes.FETCH_COST_BOOK_START:\r\n      return {\r\n        ...state,\r\n        fetchCostBookStart: true,\r\n        fetchCostBookSuccess: false,\r\n        fetchCostBookFailure: false,\r\n      };\r\n    case CostBookActionTypes.FETCH_COST_BOOK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetchCostBookStart: false,\r\n        fetchCostBookSuccess: true,\r\n        fetchCostBookFailure: false,\r\n        costBook: action.payload,\r\n      };\r\n    case CostBookActionTypes.FETCH_COST_BOOK_FAILURE:\r\n      return {\r\n        ...state,\r\n        fetchCostBookStart: false,\r\n        fetchCostBookFailure: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    case CostBookActionTypes.EDIT_COSTBOOK_COSTCODE_START:\r\n      return {\r\n        ...state,\r\n        editCostCodeStart: true,\r\n      };\r\n    case CostBookActionTypes.EDIT_COSTBOOK_COSTCODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        editCostCodeStart: false,\r\n        editCostCodeSuccess: true,\r\n        message: action.payload,\r\n      };\r\n    case CostBookActionTypes.EDIT_COSTBOOK_COSTCODE_FAILURE:\r\n      return {\r\n        ...state,\r\n        editCostCodeStart: false,\r\n        editCostCodeFailure: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    case CostBookActionTypes.EDIT_COSTBOOK_ITEM_START:\r\n      return {\r\n        ...state,\r\n        esitCostItemStart: true,\r\n      };\r\n    case CostBookActionTypes.EDIT_COSTBOOK_ITEM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        esitCostItemStart: false,\r\n        esitCostItemSuccess: true,\r\n        message: action.payload\r\n      };\r\n    case CostBookActionTypes.EDIT_COSTBOOK_ITEM_START:\r\n      return {\r\n        ...state,\r\n        esitCostItemStart: false,\r\n        esitCostItemFailure: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default costBookReducer;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\cost-book\\cost-book.page.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\cost-code\\cost-code.page.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\cost-book-item\\cost-book-item.page.js",["1825"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createCostCodeItemStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\nimport {\r\n  selectCostBookDetails,\r\n  selectFetchCostBookSuccess,\r\n} from \"../../redux/costbook/costbook.selectors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CostCodeDisplayItem from \"../../components/costcode-displayitem/costcode-displayitem.component\";\r\nimport CostCodeEditItem from \"../../components/costcode-edititem/costcode-edititem.component\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\n\r\nclass CostBookItem extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      items: {},\r\n      showEdit: false,\r\n      setItems: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchCostBook();\r\n  }\r\n\r\n  toggleEdit = () => {\r\n    this.setState((prevState) => ({\r\n      showEdit: !prevState.showEdit,\r\n    }));\r\n  };\r\n\r\n  items = () => {\r\n    console.log(this.props.costbook, \"hi\");\r\n    let category = this.props.costbook.find(\r\n      (book) => book._id === this.props.match.params.categoryId\r\n    );\r\n\r\n    let costCodeItem = category.costCodes.find(\r\n      (id) => id._id === this.props.match.params.costCodeId\r\n    );\r\n    let item = costCodeItem.items.find(\r\n      (id) => id._id === this.props.match.params.itemId\r\n    );\r\n\r\n    this.setState({ items: item, setItems: 1 }, () => console.log(this.state));\r\n  };\r\n\r\n  itemOnChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let itemInfo = this.state.items;\r\n    itemInfo[name] = value;\r\n    this.setState({ items: itemInfo }, () => {\r\n      console.log(this.state.items);\r\n    });\r\n  };\r\n\r\n  editItem = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { items } = this.state;\r\n\r\n    console.log(this.state, this.props.fetchCostBookSuccess);\r\n    if (!this.props.fetchCostBookSuccess) {\r\n      return <Spinner />;\r\n    } else if (this.props.fetchCostBookSuccess && this.state.setItems === 0) {\r\n      this.items();\r\n    }\r\n    return (\r\n      <>\r\n        {this.state.showEdit ? (\r\n          <CostCodeEditItem toggleEdit={this.toggleEdit} />\r\n        ) : (\r\n          <CostCodeDisplayItem toggleEdit={this.toggleEdit} item={items} />\r\n        )}\r\n        {/* <div>\r\n          <h2>ITEM NAME</h2> <h4>{items.itemName}</h4>\r\n          <h2>PART#</h2> <h4>{items.partNo}</h4>\r\n          <h2>COST/RATE</h2>\r\n          <h4>{items.cost}</h4>\r\n          <h2>ITEM LINK</h2>\r\n          <h4>{items.link}</h4>\r\n          <h2>DESCRIPTION</h2>\r\n          <h4>{items.description}</h4>\r\n        </div>\r\n        <form onChange={this.itemOnChange}>\r\n          <h3>EDIT ITEM</h3>\r\n          <label htmlFor=\"itemName\" id=\"itemName\" name=\"itemName\">\r\n            Item Name\r\n          </label>\r\n          <input type=\"text\" id=\"itemName\" name=\"itemName\" />\r\n          <br />\r\n          <label htmlFor=\"partNo\" id=\"partNo\" name=\"partNo\">\r\n            Part No.{\" \"}\r\n          </label>\r\n          <input type=\"number\" id=\"partNo\" name=\"partNo\" />\r\n          <br />\r\n          <label htmlFor=\"cost\" id=\"cost\" name=\"cost\">\r\n            Cost\r\n          </label>\r\n          <input type=\"number\" id=\"cost\" name=\"cost\" />\r\n          <br />\r\n          <label htmlFor=\"itemLink\" id=\"itemLink\" name=\"itemLink\">\r\n            Item Link\r\n          </label>\r\n          <input type=\"text\" id=\"itemLink\" name=\"itemLink\" />\r\n          <br />\r\n          <label htmlFor=\"description\" id=\"description\" name=\"description\">\r\n            Description\r\n          </label>\r\n          <input type=\"text\" id=\"description\" name=\"description\" />\r\n        </form> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  costbook: selectCostBookDetails,\r\n  fetchCostBookSuccess: selectFetchCostBookSuccess,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCostBook: () => dispatch(fetchCostBookStart()),\r\n  createItem: (itemDetails) => dispatch(createCostCodeItemStart(itemDetails)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CostBookItem);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\costbook\\costbook.selectors.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-category\\costbook-category.component.jsx",["1826"],"import { Link } from \"react-router-dom\";\r\nimport { CategoryDiv } from \"./costbook-category.styles\";\r\n\r\nexport const CostbookCategory = ({ categoryName }) => {\r\n  return <CategoryDiv>{categoryName}</CategoryDiv>;\r\n};\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-category\\costbook-category.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-costcode\\costbook-costcode.component.jsx",["1827"],"import { Link } from \"react-router-dom\";\r\nimport { CostDiv } from \"./costbook-costcode.styles\";\r\n\r\nexport const CostbookCostCode = ({ title }) => {\r\n  return <CostDiv>{title}</CostDiv>;\r\n};\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-costcode\\costbook-costcode.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-costcodenav\\costbook-costcodenav.component.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-costcodenav\\costbook-costcodenav.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\cost-code\\cost-code.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createbutton\\costbook-createbutton.component.jsx",["1828","1829","1830","1831","1832","1833","1834"],"import react, { Component } from \"react\";\r\nimport {\r\n  BigCircle,\r\n  CreateDiv,\r\n  CreateOptionsDiv,\r\n  CreateOptionsImg,\r\n} from \"./costbook-createbutton.styles\";\r\nimport { Overlay } from \"../admin-panel-task-page/admin-panel-task-page.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport VPO from \"../../assets/VPODark.png\";\r\nimport PO from \"../../assets/PODark.png\";\r\nimport task from \"../../assets/taskDark.png\";\r\nimport punch from \"../../assets/PunchDark.png\";\r\n\r\nclass CostBookCreateButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createSwitch: false,\r\n    };\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    this.setState((prevState) => ({\r\n      createSwitch: !prevState.createSwitch,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { projectId } = this.props;\r\n    return (\r\n      <div>\r\n        {this.state.createSwitch ? (\r\n          <Overlay\r\n            backgroundcolor=\"rgba(0,0,0,0.3)\"\r\n            style={{\r\n              bottom: \"0\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CreateDiv>\r\n              <Link\r\n                to=\"/costbook/createcostcode\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <CreateOptionsDiv justify={false}>Cost Code</CreateOptionsDiv>\r\n              </Link>\r\n\r\n              <Link\r\n                to=\"/costbook/createcategory\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <CreateOptionsDiv justify={false}>Category</CreateOptionsDiv>\r\n              </Link>\r\n\r\n              <CreateOptionsDiv\r\n                onClick={this.handleOnClick}\r\n                justify={true}\r\n                style={{ flex: \"2\" }}\r\n              >\r\n                CANCEL\r\n              </CreateOptionsDiv>\r\n            </CreateDiv>\r\n          </Overlay>\r\n        ) : (\r\n          <BigCircle onClick={this.handleOnClick}>\r\n            <p style={{ fontSize: \"2em\", margin: \"0\" }}>+</p>\r\n          </BigCircle>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CostBookCreateButton;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createbutton\\costbook-createbutton.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-cost-book-category\\create-cost-book-category.page.js",["1835","1836","1837"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createCostBookCategoryStart,\r\n  createCostCodeStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\n\r\nimport CostBookCreateCategory from \"../../components/costbook-createcategory/costbook-createcategory\";\r\n\r\nclass CreateCostBookCategory extends Component {\r\n  render() {\r\n    //console.log(this.props.costbook);\r\n    return (\r\n      <>\r\n        <CostBookCreateCategory />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createCategory: (costBookDetails) =>\r\n    dispatch(createCostBookCategoryStart(costBookDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateCostBookCategory);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcategory\\costbook-createcategory.jsx",["1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createTaskStart } from \"../../redux/all-tasks/all-tasks.actions\";\r\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  Overlay,\r\n} from \"./costbook-createcategory.styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  createCostBookCategoryStart,\r\n  createCostCodeStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\nimport { selectCreateCostBookCategorySuccess } from \"../../redux/costbook/costbook.selectors\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nclass CostBookCreateCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      category: {\r\n        categoryName: \"\",\r\n      },\r\n      create: false,\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    //console.log(name, value)\r\n    let categoryName = this.state.category;\r\n    categoryName[name] = value;\r\n    this.setState({ category: categoryName }, () => {\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  createCategory = (e) => {\r\n    e.preventDefault();\r\n    let costBookDetails = this.state.category;\r\n    if (costBookDetails.categoryName != \"\") {\r\n      this.props.createCategory(costBookDetails);\r\n      this.setState({ create: true });\r\n    }\r\n  };\r\n\r\n  exit = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.createCostBookCategory, this.state);\r\n    if (this.state.create && !this.props.createCostBookCategory) {\r\n      return <Spinner />;\r\n    } else if (this.props.createCostBookCategory && this.state.create) {\r\n      this.exit();\r\n    }\r\n    return (\r\n      <Overlay>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n            Cancel\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n            New Category\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"flex-end\"\r\n            color=\"#205284\"\r\n            onClick={this.createCategory}\r\n          >\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n        >\r\n          <div>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.category.categoryName}\r\n              name=\"categoryName\"\r\n              id=\"categoryName\"\r\n              placeholder=\"Category Name\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n        </form>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  createCostBookCategory: selectCreateCostBookCategorySuccess,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createCategory: (costBookDetails) =>\r\n    dispatch(createCostBookCategoryStart(costBookDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CostBookCreateCategory));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcategory\\costbook-createcategory.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-cost-book-costcode\\create-cost-book-costcode.page.js",["1851","1852","1853"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createCostBookCategoryStart,\r\n  createCostCodeStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\n\r\nimport CostBookCreateCostCode from \"../../components/costbook-createcostcode/costbook-createcostcode\";\r\n\r\nclass CreateCostBookCostCode extends Component {\r\n  render() {\r\n    //console.log(this.props.costbook);\r\n    return (\r\n      <>\r\n        <CostBookCreateCostCode />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createCategory: (costBookDetails) =>\r\n    dispatch(createCostBookCategoryStart(costBookDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateCostBookCostCode);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcostcode\\costbook-createcostcode.jsx",["1854","1855","1856","1857","1858","1859","1860"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  Overlay,\r\n} from \"./costbook-createcostcode.styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  createCostBookCategoryStart,\r\n  createCostCodeStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  selectCostBookDetails,\r\n  selectCreateCostCodeSuccess,\r\n} from \"../../redux/costbook/costbook.selectors\";\r\nimport DropDown from \"./form-dropdown/form-dropdown.component\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nclass CostBookCreateCostCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      costCode: {\r\n        costCodeTitle: null,\r\n        categoryId: null,\r\n      },\r\n      create: false,\r\n    };\r\n  }\r\n\r\n  onCostCodeSubmit = (e) => {\r\n    e.preventDefault();\r\n    let costCodeDetails = this.state.costCode;\r\n    this.props.createCostCode(costCodeDetails);\r\n    this.setState({ create: true });\r\n  };\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let costcodeinfo = this.state.costCode;\r\n    costcodeinfo[name] = value;\r\n    this.setState({ costCode: costcodeinfo });\r\n    console.log(this.state);\r\n  };\r\n\r\n  exit = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.createCostCodeSuccess, this.state);\r\n    if (this.state.create && !this.props.createCostCodeSuccess) {\r\n      return <Spinner />;\r\n    } else if (this.props.createCostCodeSuccess && this.state.create) {\r\n      this.exit();\r\n    }\r\n\r\n    let categoryNames = [\"None\"];\r\n\r\n    this.props.costbook.map((cost) => {\r\n      return categoryNames.push(cost.categoryName);\r\n    });\r\n\r\n    return (\r\n      <Overlay>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n            Cancel\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"center\"\r\n            style={{ fontWeight: \"600\", fontSize: \"0.9em\" }}\r\n          >\r\n            New Cost Code\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"flex-end\"\r\n            color=\"#205284\"\r\n            onClick={this.onCostCodeSubmit}\r\n          >\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n        >\r\n          <div>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.costCode.costCodeTitle}\r\n              name=\"costCodeTitle\"\r\n              id=\"costCodeTitle\"\r\n              placeholder=\"Cost Code Title\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <InfoTitle style={{ margin: \"1em 1em\", fontSize: \"1em\" }}>\r\n            Choose a cost category:\r\n          </InfoTitle>\r\n          <DropDown\r\n            key=\"categoryId\"\r\n            options={categoryNames}\r\n            selected={categoryNames[0]}\r\n            onChange={this.handleOnChange}\r\n            costbook={this.props.costbook}\r\n          />\r\n        </form>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  costbook: selectCostBookDetails,\r\n  createCostCodeSuccess: selectCreateCostCodeSuccess,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createCostCode: (costCodeDetails) =>\r\n    dispatch(createCostCodeStart(costCodeDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CostBookCreateCostCode));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcostcode\\costbook-createcostcode.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcostcode\\form-dropdown\\form-dropdown.component.jsx",["1861","1862","1863","1864","1865"],"import React, { Component } from \"react\";\r\nimport {\r\n  DropDownDiv,\r\n  DropDownButton,\r\n  DropDownContent,\r\n  DropDownOption,\r\n  DropDownOptionHeading,\r\n  DropDownOptionDescription,\r\n} from \"./form-dropdown.styles\";\r\nimport DownArrow from \"../../../assets/down-arrow.png\";\r\n\r\nclass DropDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.dropdownContainer = React.createRef();\r\n    this.state = {\r\n      dropDownSwitch: false,\r\n      selected: this.props.selected,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  handleClickOutside = (event) => {\r\n    if (\r\n      this.dropdownContainer.current &&\r\n      !this.dropdownContainer.current.contains(event.target)\r\n    ) {\r\n      this.setState({\r\n        dropDownSwitch: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  DropDownToggle = (e) => {\r\n    e.preventDefault();\r\n    this.setState((prevState) => ({\r\n      dropDownSwitch: !prevState.dropDownSwitch,\r\n    }));\r\n  };\r\n\r\n  handleOptionClick = (e) => {\r\n    e.preventDefault();\r\n    let { permission } = e.target.dataset;\r\n\r\n    let id = \"\";\r\n\r\n    this.props.costbook.map((cost) => {\r\n      if (cost.categoryName === permission) {\r\n        id = cost._id;\r\n      }\r\n    });\r\n\r\n    this.props.onChange({ target: { name: \"categoryId\", value: id } });\r\n\r\n    this.setState((prevState) => ({\r\n      dropDownSwitch: false,\r\n      selected: permission,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { options } = this.props;\r\n    let { selected } = this.state;\r\n\r\n    let selectedIndex = 0;\r\n    options.map((option, index) => {\r\n      if (option === selected) {\r\n        selectedIndex = index;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <DropDownDiv ref={this.dropdownContainer}>\r\n        <DropDownButton onClick={this.DropDownToggle} img={DownArrow}>\r\n          {options[selectedIndex]}\r\n        </DropDownButton>\r\n        <DropDownContent display={this.state.dropDownSwitch ? \"block\" : \"none\"}>\r\n          <DropDownOption\r\n            data-permission={options[selectedIndex]}\r\n            onClick={this.handleOptionClick}\r\n            backgroundFlag={true}\r\n            key={options[selectedIndex]}\r\n          >\r\n            <DropDownOptionHeading\r\n              data-permission={options[selectedIndex]}\r\n              onClick={this.handleOptionClick}\r\n            >\r\n              {options[selectedIndex]}\r\n            </DropDownOptionHeading>\r\n          </DropDownOption>\r\n\r\n          {options.map((option) => {\r\n            let selectedFlag = false;\r\n            if (option != selected) {\r\n              return (\r\n                <DropDownOption\r\n                  data-permission={option}\r\n                  onClick={this.handleOptionClick}\r\n                  backgroundFlag={selectedFlag}\r\n                >\r\n                  <DropDownOptionHeading\r\n                    data-permission={option}\r\n                    onClick={this.handleOptionClick}\r\n                    key={option}\r\n                  >\r\n                    {option}\r\n                  </DropDownOptionHeading>\r\n                </DropDownOption>\r\n              );\r\n            }\r\n          })}\r\n        </DropDownContent>\r\n      </DropDownDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropDown;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-createcostcode\\form-dropdown\\form-dropdown.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-editcostcode\\costbook-editcostcode.jsx",["1866","1867","1868","1869","1870","1871","1872","1873","1874","1875","1876","1877"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  Overlay,\r\n} from \"./costbook-editcostcode.styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  createCostBookCategoryStart,\r\n  createCostCodeStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCostBookDetails } from \"../../redux/costbook/costbook.selectors\";\r\nimport DropDown from \"./form-dropdown/form-dropdown.component\";\r\n\r\nclass CostBookEditCostCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      costCode: {\r\n        costCodeTitle: this.props.costCodeTitle,\r\n        categoryId: this.props.categoryId,\r\n      },\r\n      categoryName: this.props.categoryName,\r\n    };\r\n  }\r\n\r\n  onCostCodeSubmit = (e) => {\r\n    e.preventDefault();\r\n    let costCodeDetails = this.state.costCode;\r\n\r\n    this.exit();\r\n  };\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value, catName } = e.target;\r\n    let costcodeinfo = this.state.costCode;\r\n    costcodeinfo[name] = value;\r\n    this.setState({ costCode: costcodeinfo });\r\n    console.log(this.state);\r\n\r\n    if (name === \"categoryId\") {\r\n      this.setState({ categoryName: catName });\r\n    }\r\n  };\r\n\r\n  exit = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    let categoryNames = [];\r\n\r\n    this.props.costbook.map((cost) => {\r\n      return categoryNames.push(cost.categoryName);\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n        >\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Title\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.costCode.costCodeTitle}\r\n              name=\"costCodeTitle\"\r\n              id=\"costCodeTitle\"\r\n              placeholder={this.state.costCode.costCodeTitle}\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n            Choose a cost category:\r\n          </InfoTitle>\r\n          <DropDown\r\n            key=\"categoryId\"\r\n            options={categoryNames}\r\n            selected={this.state.categoryName}\r\n            onChange={this.handleOnChange}\r\n            costbook={this.props.costbook}\r\n          />\r\n\r\n          <button\r\n            style={{\r\n              padding: \"0.5em 1em\",\r\n              backgroundColor: \"#6C7B8A\",\r\n              color: \"white\",\r\n              fontSize: \"1em\",\r\n              fontWeight: \"600\",\r\n              border: \"none\",\r\n              borderRadius: \"4px\",\r\n              marginTop: \"1em\",\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  costbook: selectCostBookDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CostBookEditCostCode));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-editcostcode\\form-dropdown\\form-dropdown.component.jsx",["1878","1879","1880","1881","1882"],"import React, { Component } from \"react\";\r\nimport {\r\n  DropDownDiv,\r\n  DropDownButton,\r\n  DropDownContent,\r\n  DropDownOption,\r\n  DropDownOptionHeading,\r\n  DropDownOptionDescription,\r\n} from \"./form-dropdown.styles\";\r\nimport DownArrow from \"../../../assets/down-arrow.png\";\r\n\r\nclass DropDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.dropdownContainer = React.createRef();\r\n    this.state = {\r\n      dropDownSwitch: false,\r\n      selected: this.props.selected,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  handleClickOutside = (event) => {\r\n    if (\r\n      this.dropdownContainer.current &&\r\n      !this.dropdownContainer.current.contains(event.target)\r\n    ) {\r\n      this.setState({\r\n        dropDownSwitch: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  DropDownToggle = (e) => {\r\n    e.preventDefault();\r\n    this.setState((prevState) => ({\r\n      dropDownSwitch: !prevState.dropDownSwitch,\r\n    }));\r\n  };\r\n\r\n  handleOptionClick = (e) => {\r\n    e.preventDefault();\r\n    let { permission } = e.target.dataset;\r\n\r\n    let id = \"\";\r\n\r\n    this.props.costbook.map((cost) => {\r\n      if (cost.categoryName === permission) {\r\n        id = cost._id;\r\n      }\r\n    });\r\n\r\n    this.props.onChange({\r\n      target: { name: \"categoryId\", value: id, catName: permission },\r\n    });\r\n\r\n    this.setState((prevState) => ({\r\n      dropDownSwitch: !prevState.dropDownSwitch,\r\n      selected: permission,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { options } = this.props;\r\n    let { selected } = this.state;\r\n\r\n    let selectedIndex = 0;\r\n    options.map((option, index) => {\r\n      if (option === selected) {\r\n        selectedIndex = index;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <DropDownDiv ref={this.dropdownContainer}>\r\n        <DropDownButton onClick={this.DropDownToggle} img={DownArrow}>\r\n          {options[selectedIndex]}\r\n        </DropDownButton>\r\n        <DropDownContent display={this.state.dropDownSwitch ? \"block\" : \"none\"}>\r\n          <DropDownOption\r\n            data-permission={options[selectedIndex]}\r\n            onClick={this.handleOptionClick}\r\n            backgroundFlag={true}\r\n          >\r\n            <DropDownOptionHeading\r\n              data-permission={options[selectedIndex]}\r\n              onClick={this.handleOptionClick}\r\n            >\r\n              {options[selectedIndex]}\r\n            </DropDownOptionHeading>\r\n          </DropDownOption>\r\n\r\n          {options.map((option) => {\r\n            let selectedFlag = false;\r\n            if (option != selected) {\r\n              return (\r\n                <DropDownOption\r\n                  data-permission={option}\r\n                  onClick={this.handleOptionClick}\r\n                  backgroundFlag={selectedFlag}\r\n                >\r\n                  <DropDownOptionHeading\r\n                    data-permission={option}\r\n                    onClick={this.handleOptionClick}\r\n                  >\r\n                    {option}\r\n                  </DropDownOptionHeading>\r\n                </DropDownOption>\r\n              );\r\n            }\r\n          })}\r\n        </DropDownContent>\r\n      </DropDownDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropDown;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-editcostcode\\form-dropdown\\form-dropdown.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costbook-editcostcode\\costbook-editcostcode.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-createbutton\\costcode-createbutton.component.jsx",["1883","1884","1885","1886","1887","1888","1889"],"import react, { Component } from \"react\";\r\nimport {\r\n  BigCircle,\r\n  CreateDiv,\r\n  CreateOptionsDiv,\r\n  CreateOptionsImg,\r\n} from \"./costcode-createbutton.styles\";\r\nimport { Overlay } from \"../admin-panel-task-page/admin-panel-task-page.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport VPO from \"../../assets/VPODark.png\";\r\nimport PO from \"../../assets/PODark.png\";\r\nimport task from \"../../assets/taskDark.png\";\r\nimport punch from \"../../assets/PunchDark.png\";\r\n\r\nclass CostCodeCreateButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createSwitch: false,\r\n    };\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    this.setState((prevState) => ({\r\n      createSwitch: !prevState.createSwitch,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { projectId } = this.props;\r\n    return (\r\n      <div>\r\n        {this.state.createSwitch ? (\r\n          <Overlay\r\n            backgroundcolor=\"rgba(0,0,0,0.3)\"\r\n            style={{\r\n              bottom: \"0\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CreateDiv>\r\n              <Link\r\n                to={`/costbook/${this.props.categoryId}/${this.props.costCodeId}/createitem`}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <CreateOptionsDiv justify={false}>Item</CreateOptionsDiv>\r\n              </Link>\r\n\r\n              <CreateOptionsDiv\r\n                onClick={this.handleOnClick}\r\n                justify={true}\r\n                style={{ flex: \"2\" }}\r\n              >\r\n                CANCEL\r\n              </CreateOptionsDiv>\r\n            </CreateDiv>\r\n          </Overlay>\r\n        ) : (\r\n          <BigCircle onClick={this.handleOnClick}>\r\n            <p style={{ fontSize: \"2em\", margin: \"0\" }}>+</p>\r\n          </BigCircle>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CostCodeCreateButton;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-createbutton\\costcode-createbutton.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-cost-code-item\\create-cost-code-item.js",["1890"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createCostCodeItemStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\nimport { selectCostBookDetails } from \"../../redux/costbook/costbook.selectors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CostCodeCreateItem from \"../../components/costcode-createitem/costcode-createitem.component\";\r\n\r\nclass CreateCostCodeItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    console.log(this.costbook);\r\n    return (\r\n      <>\r\n        <CostCodeCreateItem\r\n          categoryId={this.props.match.params.categoryId}\r\n          costCodeId={this.props.match.params.costCodeId}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  costbook: selectCostBookDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCostBook: () => dispatch(fetchCostBookStart()),\r\n  createItem: (itemDetails) => dispatch(createCostCodeItemStart(itemDetails)),\r\n  // createCategory: (costBookDetails) => dispatch(createCostBookCategoryStart(costBookDetails)),\r\n  // createCostCode: (costCodeDetails) => dispatch(createCostCodeStart(costCodeDetails))\r\n  //updateRoles: (payload) => dispatch(UpdateRolesInProjectStart(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCostCodeItem);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-cost-code-item\\create-cost-code-item.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-createitem\\costcode-createitem.component.jsx",["1891","1892","1893","1894","1895","1896","1897"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  Overlay,\r\n} from \"./costcode-createitem.styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  selectCostBookDetails,\r\n  selectCreateCostCodeItemStart,\r\n  selectCreateCostCodeItemSuccess,\r\n  selectCreateCostCodeSuccess,\r\n} from \"../../redux/costbook/costbook.selectors\";\r\nimport {\r\n  createCostCodeItemStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nclass CostCodeCreateItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: {\r\n        itemName: null,\r\n        partNo: null,\r\n        cost: null,\r\n        description: null,\r\n        itemLink: null,\r\n        costCodeId: this.props.costCodeId,\r\n        categoryId: this.props.categoryId,\r\n      },\r\n      create: false,\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let itemDetails = this.state.item;\r\n    this.props.createItem(itemDetails);\r\n    this.setState({ create: true });\r\n  };\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let itemInfo = this.state.item;\r\n    itemInfo[name] = value;\r\n    this.setState({ item: itemInfo }, console.log(this.state.item));\r\n  };\r\n\r\n  exit = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    let categoryNames = [];\r\n    console.log(this.props.createCostCodeSuccess, this.state);\r\n    if (this.state.create && !this.props.createCostCodeSuccess) {\r\n      return <Spinner />;\r\n    } else if (\r\n      this.props.createCostCodeSuccess &&\r\n      this.state.create &&\r\n      this.props.createCostItemStart\r\n    ) {\r\n      this.exit();\r\n    }\r\n\r\n    this.props.costbook.map((cost) => {\r\n      return categoryNames.push(cost.categoryName);\r\n    });\r\n\r\n    return (\r\n      <Overlay>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n            Cancel\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"center\"\r\n            style={{ fontWeight: \"600\", fontSize: \"0.9em\" }}\r\n          >\r\n            New Item\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"flex-end\" color=\"#205284\" onClick={this.onSubmit}>\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\", width: \"90%\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n        >\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Item Name\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.item.itemName}\r\n              name=\"itemName\"\r\n              id=\"itemName\"\r\n              placeholder=\"Item Name\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Part #\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.item.partNo}\r\n              name=\"partNo\"\r\n              id=\"partNo\"\r\n              placeholder=\"Part Number\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Cost/Rate\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.item.cost}\r\n              name=\"cost\"\r\n              id=\"cost\"\r\n              placeholder=\"Cost\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Item Link\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.item.itemLink}\r\n              name=\"itemLink\"\r\n              id=\"itemLink\"\r\n              placeholder=\"Item Link\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Description\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"textarea\"\r\n              value={this.state.item.description}\r\n              name=\"description\"\r\n              id=\"description\"\r\n              placeholder=\"Description\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              style={{\r\n                height: \"4em\",\r\n              }}\r\n              required\r\n            />\r\n          </div>\r\n        </form>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  costbook: selectCostBookDetails,\r\n  createCostCodeSuccess: selectCreateCostCodeSuccess,\r\n  createCostItemStart: selectCreateCostCodeItemStart,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createItem: (itemDetails) => dispatch(createCostCodeItemStart(itemDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CostCodeCreateItem));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-createitem\\costcode-createitem.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\spinner\\spinner.component.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\spinner\\spinner.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-displayitem\\costcode-displayitem.component.jsx",["1898","1899","1900","1901","1902","1903","1904","1905"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  Overlay,\r\n  ItemField,\r\n} from \"./costcode-displayitem.styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCostBookDetails } from \"../../redux/costbook/costbook.selectors\";\r\nimport {\r\n  createCostCodeItemStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\n\r\nclass CostCodeDisplayItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  exit = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    let { item } = this.props;\r\n    return (\r\n      <Overlay>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n            Back\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"center\"\r\n            style={{ fontWeight: \"600\", fontSize: \"1em\" }}\r\n          >\r\n            Item\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"flex-end\"\r\n            color=\"#205284\"\r\n            onClick={this.props.toggleEdit}\r\n          >\r\n            Edit\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", width: \"90%\" }}>\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Item Name\r\n            </InfoTitle>\r\n            <ItemField>{item.itemName}</ItemField>\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Part #\r\n            </InfoTitle>\r\n            <ItemField>{item.partNo}</ItemField>\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Cost/Rate\r\n            </InfoTitle>\r\n            <ItemField>{item.cost}</ItemField>\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Item Link\r\n            </InfoTitle>\r\n            <ItemField>{item.itemLink}</ItemField>\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Description\r\n            </InfoTitle>\r\n            <ItemField>{item.description}</ItemField>\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  costbook: selectCostBookDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createItem: (itemDetails) => dispatch(createCostCodeItemStart(itemDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CostCodeDisplayItem));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-displayitem\\costcode-displayitem.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-edititem\\costcode-edititem.component.jsx",["1906","1907","1908","1909","1910","1911"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  Overlay,\r\n} from \"./costcode-edititem.styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCostBookDetails } from \"../../redux/costbook/costbook.selectors\";\r\nimport {\r\n  createCostCodeItemStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\n\r\nclass CostCodeEditItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: {\r\n        itemName: null,\r\n        partNo: null,\r\n        cost: null,\r\n        description: null,\r\n        itemLink: null,\r\n        costCodeId: this.props.costCodeId,\r\n        categoryId: this.props.categoryId,\r\n      },\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let itemDetails = this.state.item;\r\n    this.props.createItem(itemDetails);\r\n    this.exit();\r\n  };\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let itemInfo = this.state.item;\r\n    itemInfo[name] = value;\r\n    this.setState({ item: itemInfo }, console.log(this.state.item));\r\n  };\r\n\r\n  exit = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    let categoryNames = [];\r\n\r\n    this.props.costbook.map((cost) => {\r\n      return categoryNames.push(cost.categoryName);\r\n    });\r\n\r\n    return (\r\n      <Overlay>\r\n        <NavBar>\r\n          <OneThirdDiv\r\n            align=\"flex-start\"\r\n            color=\"#205284\"\r\n            onClick={this.props.toggleEdit}\r\n          >\r\n            Cancel\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"center\"\r\n            style={{ fontWeight: \"600\", fontSize: \"0.9em\" }}\r\n          >\r\n            Item\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"flex-end\" color=\"#205284\">\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\", width: \"90%\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n        >\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Item Name\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.item.itemName}\r\n              name=\"itemName\"\r\n              id=\"itemName\"\r\n              placeholder=\"Item Name\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Part #\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.item.partNo}\r\n              name=\"partNo\"\r\n              id=\"partNo\"\r\n              placeholder=\"Part Number\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Cost/Rate\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.item.cost}\r\n              name=\"cost\"\r\n              id=\"cost\"\r\n              placeholder=\"Cost\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Item Link\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.item.itemLink}\r\n              name=\"itemLink\"\r\n              id=\"itemLink\"\r\n              placeholder=\"Item Link\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <InfoTitle style={{ margin: \"1em 0em\", fontSize: \"1em\" }}>\r\n              Description\r\n            </InfoTitle>\r\n            <LongInput\r\n              type=\"textarea\"\r\n              value={this.state.item.description}\r\n              name=\"description\"\r\n              id=\"description\"\r\n              placeholder=\"Description\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              style={{\r\n                height: \"4em\",\r\n              }}\r\n              required\r\n            />\r\n          </div>\r\n        </form>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  costbook: selectCostBookDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createItem: (itemDetails) => dispatch(createCostCodeItemStart(itemDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CostCodeEditItem));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\costcode-edititem\\costcode-edititem.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-fullscreen-selection\\form-fullscreen-selection.component.js",["1912","1913","1914","1915","1916","1917","1918","1919","1920"],"import React, { Component } from \"react\";\r\nimport { LongButton } from \"../long-button/long-button.styles\";\r\nimport {\r\n  ContainerDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  ItemDiv,\r\n} from \"./form-fullscreen-selection.styles\";\r\nimport { SmallText } from \"../project-item/project-item.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { inviteUserStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentProjectRoles } from \"../../redux/current-project/current-project.selectors\";\r\nimport {\r\n  FormHeading,\r\n  FormLabel,\r\n  FormInput,\r\n  FormDiv,\r\n} from \"../create-project-form/create-project-form.styles\";\r\nimport DropDown from \"../form-dropdown/form-dropdown.component\";\r\n\r\nclass FormFullScreenSelection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleOnClick = (e) => {\r\n    let { item } = e.target.dataset;\r\n    console.log(item);\r\n\r\n    this.props.select({ value: item, type: this.props.type });\r\n    this.props.exit();\r\n  };\r\n\r\n  render() {\r\n    const { exit, items, selected } = this.props;\r\n\r\n    return (\r\n      <ContainerDiv>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={exit}>\r\n            Back\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n            Select Task\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"flex-end\" color=\"#205284\"></OneThirdDiv>\r\n        </NavBar>\r\n        {items.includes(selected) ? (\r\n          <ItemDiv selected={true}>{selected}</ItemDiv>\r\n        ) : null}\r\n        {items.map((item) => {\r\n          if (item != selected) {\r\n            return (\r\n              <ItemDiv\r\n                data-item={item}\r\n                key={item}\r\n                onClick={this.handleOnClick}\r\n                selected={false}\r\n              >\r\n                {item}\r\n              </ItemDiv>\r\n            );\r\n          }\r\n        })}\r\n      </ContainerDiv>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  // name: selectCurrentUserFirstName,\r\n  // projects: selectUserProjects\r\n  projectRoles: selectCurrentProjectRoles,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // signOut: () => dispatch(signOut())\r\n  inviteUser: (userDetails) => dispatch(inviteUserStart(userDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FormFullScreenSelection);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-fullscreen-selection\\form-fullscreen-selection.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\organisation\\organisation.page.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-costbook-selection\\form-costbook-selection.component.js",["1921","1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932"],"import React, { Component } from \"react\";\r\nimport { LongButton } from \"../long-button/long-button.styles\";\r\nimport {\r\n  ContainerDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  ItemDiv,\r\n  LongDiv,\r\n  Input,\r\n} from \"./form-costbook-selection.styles\";\r\nimport { SmallText } from \"../project-item/project-item.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { inviteUserStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentProjectRoles } from \"../../redux/current-project/current-project.selectors\";\r\nimport {\r\n  selectCostBookDetails,\r\n  selectFetchCostBookSuccess,\r\n} from \"../../redux/costbook/costbook.selectors\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\nimport { fetchCostBookStart } from \"../../redux/costbook/costbook.actions\";\r\nimport { CostbookCategory } from \"../costbook-category/costbook-category.component\";\r\nimport { CostbookCostCode } from \"../costbook-costcode/costbook-costcode.component\";\r\n\r\nclass FormCostbookSelection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      setCostbook: 0,\r\n      costbook: null,\r\n      itemDetails: {\r\n        itemName: null,\r\n        itemNumber: null,\r\n        itemValue: null,\r\n        comment: null,\r\n        itemId: null,\r\n      },\r\n      costCodeId: null,\r\n      categoryId: null,\r\n      show: \"costbook\", //costbook, costcode, item\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"fetchcostbook\");\r\n    this.props.fetchCostBook();\r\n  }\r\n\r\n  setCostbook = () => {\r\n    this.setState({ costbook: this.props.costbook, setCostbook: 1 });\r\n  };\r\n\r\n  toggleShow = (type) => {\r\n    this.setState({ show: type });\r\n  };\r\n\r\n  selectCostCode = (costcodeid, categoryid) => {\r\n    this.setState({\r\n      costCodeId: costcodeid,\r\n      categoryId: categoryid,\r\n      show: \"costcode\",\r\n    });\r\n  };\r\n\r\n  selectItem = ({ cost, description, itemName, partNo, _id }) => {\r\n    let temp = {\r\n      itemName: itemName,\r\n      itemNumber: this.state.itemDetails.itemNumber,\r\n      itemValue: cost,\r\n      comment: description,\r\n      itemId: _id,\r\n    };\r\n    this.setState({ itemDetails: temp, show: \"item\" });\r\n  };\r\n\r\n  changeItemNumber = (e) => {\r\n    let { value } = e.target;\r\n    value = parseInt(value);\r\n    console.log(\"item number\", value);\r\n    let { itemName, itemNumber, itemValue, comment, itemId } =\r\n      this.state.itemDetails;\r\n    let temp = {\r\n      itemName: itemName,\r\n      itemNumber: value,\r\n      itemValue: itemValue,\r\n      comment: comment,\r\n      itemId: itemId,\r\n    };\r\n    this.setState({ itemDetails: temp }, () => {\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    if (this.state.itemDetails.itemNumber) {\r\n      this.props.submitItem({\r\n        type: \"purchasedItem\",\r\n        value: this.state.itemDetails,\r\n      });\r\n    }\r\n    this.props.exit();\r\n  };\r\n\r\n  showNavbar = (exit) => {\r\n    console.log(\"show nav\");\r\n    if (this.state.show === \"costbook\") {\r\n      return (\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={exit}>\r\n            Back\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n            Add Line Item\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"flex-end\" color=\"#205284\"></OneThirdDiv>\r\n        </NavBar>\r\n      );\r\n    } else if (this.state.show === \"costcode\") {\r\n      return (\r\n        <NavBar>\r\n          <OneThirdDiv\r\n            align=\"flex-start\"\r\n            color=\"#205284\"\r\n            onClick={() => {\r\n              this.toggleShow(\"costbook\");\r\n            }}\r\n          >\r\n            Back\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n            Items\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"flex-end\" color=\"#205284\"></OneThirdDiv>\r\n        </NavBar>\r\n      );\r\n    } else if (this.state.show === \"item\") {\r\n      return (\r\n        <NavBar>\r\n          <OneThirdDiv\r\n            align=\"flex-start\"\r\n            color=\"#205284\"\r\n            onClick={() => {\r\n              this.toggleShow(\"costcode\");\r\n            }}\r\n          >\r\n            Back\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n            Line Item\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"flex-end\" color=\"#205284\" onClick={this.submit}>\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n      );\r\n    }\r\n  };\r\n\r\n  showContent = (costbook) => {\r\n    if (this.state.show == \"costbook\") {\r\n      let content = costbook.map((cost) => {\r\n        console.log(\"hi\");\r\n        return (\r\n          <>\r\n            <CostbookCategory categoryName={cost.categoryName} />\r\n            {cost.costCodes.map((costcode) => {\r\n              return (\r\n                <div\r\n                  onClick={() => {\r\n                    this.selectCostCode(costcode._id, cost._id);\r\n                  }}\r\n                >\r\n                  <CostbookCostCode\r\n                    key={costcode._id}\r\n                    title={costcode.costCodeTitle}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        );\r\n      });\r\n\r\n      return content;\r\n    } else if (this.state.show == \"costcode\") {\r\n      console.log(this.state);\r\n      let category = costbook.find(\r\n        (book) => book._id === this.state.categoryId\r\n      );\r\n      console.log(category);\r\n      let costCodeItem = category.costCodes.find(\r\n        (id) => id._id === this.state.costCodeId\r\n      );\r\n\r\n      let items = costCodeItem.items.map((item) => {\r\n        return (\r\n          <div\r\n            onClick={() => {\r\n              this.selectItem(item);\r\n            }}\r\n          >\r\n            <CostbookCostCode title={item.itemName} />\r\n          </div>\r\n        );\r\n      });\r\n      return (\r\n        <>\r\n          <CostbookCategory categoryName={costCodeItem.costCodeTitle} />\r\n          {items}\r\n        </>\r\n      );\r\n    } else if (this.state.show == \"item\") {\r\n      let { itemName, itemNumber, itemValue, comment, itemId } =\r\n        this.state.itemDetails;\r\n\r\n      return (\r\n        <div>\r\n          <div\r\n            style={{\r\n              color: \"black\",\r\n              fontSize: \"1.25em\",\r\n              fontWeight: \"600\",\r\n              margin: \"1em\",\r\n            }}\r\n          >\r\n            {itemName}\r\n          </div>\r\n          <LongDiv>\r\n            <div>Quantity</div>\r\n            <form onChange={(e) => this.changeItemNumber(e)}>\r\n              <Input\r\n                type=\"number\"\r\n                placeholder=\"Enter\"\r\n                value={itemNumber}\r\n              ></Input>\r\n            </form>\r\n          </LongDiv>\r\n          <LongDiv>\r\n            <div>Cost</div>\r\n            <div>${itemValue}</div>\r\n          </LongDiv>\r\n          <LongDiv style={{ border: \"none\", backgroundColor: \"#f5f5f5\" }}>\r\n            <div>Amount</div>\r\n            <div>${itemValue * itemNumber}</div>\r\n          </LongDiv>\r\n          <br></br>\r\n          <div\r\n            style={{\r\n              color: \"rgba(0, 0, 0, 0.8)\",\r\n              fontSize: \"1em\",\r\n              fontWeight: \"600\",\r\n              margin: \"0.5em 1em\",\r\n            }}\r\n          >\r\n            Description\r\n          </div>\r\n          <div\r\n            style={{\r\n              border: \"none\",\r\n              marginLeft: \"1em\",\r\n              color: \"rgba(0, 0, 0, 0.8)\",\r\n            }}\r\n          >\r\n            {comment}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { exit, items, selected } = this.props;\r\n    console.log(\r\n      \"success\",\r\n      this.props.fetchCostBookSuccess,\r\n      this.props.costbook\r\n    );\r\n    if (!this.props.fetchCostBookSuccess) {\r\n      return <Spinner />;\r\n    } else if (this.props.fetchCostBookSuccess && this.state.setCostbook == 0) {\r\n      this.setCostbook();\r\n    }\r\n    console.log(this.state.costbook);\r\n    return (\r\n      <ContainerDiv>\r\n        {this.showNavbar(exit)}\r\n        {this.showContent(this.props.costbook)}\r\n      </ContainerDiv>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  costbook: selectCostBookDetails,\r\n  fetchCostBookSuccess: selectFetchCostBookSuccess,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCostBook: () => dispatch(fetchCostBookStart()),\r\n  inviteUser: (userDetails) => dispatch(inviteUserStart(userDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FormCostbookSelection);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\form-costbook-selection\\form-costbook-selection.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\organisation\\organisation.selectors.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\organisation\\organisation.actions.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\organisation\\organisation.types.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\organisation\\organisation.reducer.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\redux\\organisation\\organisation.sagas.js",["1933"],"import { all, call, put, select, takeLatest } from \"redux-saga/effects\";\r\nimport { onTaskCompletionStart } from \"../current-task/current-task.sagas\";\r\nimport { selectUserId } from \"../user/user.selectors\";\r\nimport {\r\n  createOrganisationFail,\r\n  createOrganisationSucessful,\r\n  fetchAllOrganisationFailure,\r\n  fetchAllOrganisationSuccess,\r\n  fetchOrganisationFailure,\r\n  fetchOrganisationSuccess,\r\n} from \"./organisation.actions\";\r\nimport { OrganisationActionTypes } from \"./organisation.types\";\r\n\r\nexport function* fetchAllOrganisations({ payload }) {\r\n  let userId = yield select(selectUserId);\r\n\r\n  try {\r\n    let organisation = yield fetch(\r\n      `http://127.0.0.1:5000/organisation/${userId}`\r\n    );\r\n    organisation = yield organisation.json();\r\n    organisation.done\r\n      ? yield put(fetchAllOrganisationSuccess(organisation.org))\r\n      : yield put(fetchAllOrganisationFailure(\"error!\"));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* createOrganisation({ payload }) {\r\n  let userId = yield select(selectUserId);\r\n  let data = payload;\r\n  try {\r\n    let org = yield fetch(\r\n      `http://127.0.0.1:5000/create-organisation/${userId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    );\r\n    org = yield org.json();\r\n    org.done\r\n      ? yield put(createOrganisationSucessful(org.message))\r\n      : yield put(createOrganisationFail(\"error!\"));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* fetchOrganisation({ payload }) {\r\n  let orgId = payload;\r\n  try {\r\n    let organisation = yield fetch(`http://127.0.0.1:5000/org/${orgId}`);\r\n    organisation = yield organisation.json();\r\n    organisation.done\r\n      ? yield put(fetchOrganisationSuccess(organisation.org))\r\n      : yield put(fetchOrganisationFailure(\"error!\"));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* onFetchAllOrganisations() {\r\n  yield takeLatest(\r\n    OrganisationActionTypes.FETCH_ALL_ORGANISATIONS_START,\r\n    fetchAllOrganisations\r\n  );\r\n}\r\n\r\nexport function* onCreateOrganisationStart() {\r\n  yield takeLatest(\r\n    OrganisationActionTypes.CREATE_ORGANISATION_START,\r\n    createOrganisation\r\n  );\r\n}\r\n\r\nexport function* onFetchOrganisationStart() {\r\n  yield takeLatest(\r\n    OrganisationActionTypes.FETCH_ORGANISATION_START,\r\n    fetchOrganisation\r\n  );\r\n}\r\n\r\nexport function* organisationSagas() {\r\n  yield all([\r\n    call(onFetchAllOrganisations),\r\n    call(onCreateOrganisationStart),\r\n    call(onFetchOrganisationStart),\r\n  ]);\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\organisation-createbutton\\organisation-createbutton.component.jsx",["1934","1935","1936","1937","1938"],"import react, { Component } from \"react\";\r\nimport {\r\n  BigCircle,\r\n  CreateDiv,\r\n  CreateOptionsDiv,\r\n  CreateOptionsImg,\r\n} from \"./organisation-createbutton.styles\";\r\nimport { Overlay } from \"../admin-panel-task-page/admin-panel-task-page.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport VPO from \"../../assets/VPODark.png\";\r\nimport PO from \"../../assets/PODark.png\";\r\nimport task from \"../../assets/taskDark.png\";\r\nimport punch from \"../../assets/PunchDark.png\";\r\n\r\nclass OrganisationCreateButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createSwitch: false,\r\n    };\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    this.setState((prevState) => ({\r\n      createSwitch: !prevState.createSwitch,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { projectId } = this.props;\r\n    return (\r\n      <div>\r\n        {this.state.createSwitch ? (\r\n          <Overlay\r\n            backgroundcolor=\"rgba(0,0,0,0.3)\"\r\n            style={{\r\n              bottom: \"0\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CreateDiv>\r\n              <Link\r\n                to={`/createOrganisation`}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <CreateOptionsDiv justify={false}>\r\n                  <CreateOptionsImg\r\n                    src={task}\r\n                    style={{ width: \"2em\", height: \"2em\" }}\r\n                  />\r\n                  Organisation\r\n                </CreateOptionsDiv>\r\n              </Link>\r\n              <CreateOptionsDiv\r\n                onClick={this.handleOnClick}\r\n                justify={true}\r\n                style={{ flex: \"2\" }}\r\n              >\r\n                CANCEL\r\n              </CreateOptionsDiv>\r\n            </CreateDiv>\r\n          </Overlay>\r\n        ) : (\r\n          <BigCircle onClick={this.handleOnClick}>\r\n            <p style={{ fontSize: \"2em\", margin: \"0\" }}>+</p>\r\n          </BigCircle>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrganisationCreateButton;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\organisation-createbutton\\organisation-createbutton.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-organisation\\create-organisation.page.js",["1939","1940"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  clearAllOrganisationData,\r\n  createOrganisationStart,\r\n  fetchAllOrganisationsClear,\r\n  fetchAllOrganisationsStart,\r\n} from \"../../redux/organisation/organisation.actions\";\r\nimport {\r\n  selectAllOrganisations,\r\n  selectCreateOrganisationStart,\r\n  selectFetchAllOrganisationsSuccess,\r\n} from \"../../redux/organisation/organisation.selectors\";\r\nimport { NavBar, OneThirdDiv, LongInput } from \"./create-organisation.styles\";\r\nimport Organisation from \"./../organisation/organisation.page\";\r\nimport { selectCreateOrganisationSuccessful } from \"./../../redux/organisation/organisation.selectors\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\n\r\nclass CreateOrganisation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      organisationDetails: {\r\n        organisationName: null,\r\n        organisationEmail: null,\r\n        organisationNumber: null,\r\n        organisationAddress: null,\r\n      },\r\n    };\r\n  }\r\n\r\n  organisationOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let org = this.state.organisationDetails;\r\n    org[name] = value;\r\n    this.setState({ organisationDetails: org }, () => console.log(this.state));\r\n  };\r\n\r\n  createOrg = (e) => {\r\n    e.preventDefault();\r\n    let orgDetails = this.state.organisationDetails;\r\n    this.props.createOrganisation(orgDetails);\r\n  };\r\n\r\n  exit = () => {\r\n    console.log(\"exit\");\r\n    this.props.history.push(\"/organisations\");\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.clearAllOrganisationData();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.createOrganisationStart && !this.props.createdOrganisation) {\r\n      return <Spinner />;\r\n    } else if (this.props.createdOrganisation) {\r\n      this.exit();\r\n    }\r\n    return (\r\n      <>\r\n        <div\r\n          style={{ width: \"100%\", height: \"100vh\", backgroundColor: \"#F5F5F5\" }}\r\n        >\r\n          <NavBar>\r\n            <OneThirdDiv align=\"flex-start\" color=\"#205284\">\r\n              <Link\r\n                to={`/organisations`}\r\n                style={{ textDecoration: \"none\", color: \"#205284\" }}\r\n              >\r\n                Cancel\r\n              </Link>\r\n            </OneThirdDiv>\r\n            <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n              New Org\r\n            </OneThirdDiv>\r\n            <OneThirdDiv\r\n              align=\"flex-end\"\r\n              color=\"#205284\"\r\n              onClick={this.createOrg}\r\n            >\r\n              Save\r\n            </OneThirdDiv>\r\n          </NavBar>\r\n          <form onChange={this.organisationOnChange} onSubmit={this.createOrg}>\r\n            <LongInput\r\n              id=\"organisationName\"\r\n              name=\"organisationName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Organisation Name\"\r\n            />\r\n\r\n            <LongInput\r\n              id=\"organisationAddress\"\r\n              name=\"organisationAddress\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Organisation Address\"\r\n            />\r\n\r\n            <LongInput\r\n              id=\"organisationNumber\"\r\n              name=\"organisationNumber\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Organisation Number\"\r\n            />\r\n\r\n            <LongInput\r\n              id=\"organisationEmail\"\r\n              name=\"organisationEmail\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Organisation Email\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  organisationsFetched: selectFetchAllOrganisationsSuccess,\r\n  organisations: selectAllOrganisations,\r\n  createdOrganisation: selectCreateOrganisationSuccessful,\r\n  createOrganisationStart: selectCreateOrganisationStart,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createOrganisation: (orgDetails) =>\r\n    dispatch(createOrganisationStart(orgDetails)),\r\n  fetchOrganisations: (userId) => dispatch(fetchAllOrganisationsStart(userId)),\r\n  clearAllOrganisationData: () => dispatch(clearAllOrganisationData()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOrganisation);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-organisation\\create-organisation.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\hamburger\\hamburger.page.js",["1941","1942","1943","1944"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createOrganisationStart,\r\n  fetchAllOrganisationsStart,\r\n} from \"../../redux/organisation/organisation.actions\";\r\nimport {\r\n  selectAllOrganisations,\r\n  selectFetchAllOrganisationsSuccess,\r\n} from \"../../redux/organisation/organisation.selectors\";\r\nimport ProjectsNav from \"../../components/projects-nav/projects-nav.component\";\r\nimport { CostbookCostCode } from \"../../components/costbook-costcode/costbook-costcode.component\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\nimport OrganisationCreateButton from \"../../components/organisation-createbutton/organisation-createbutton.component\";\r\n\r\nclass Hamburger extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  signOut = () => {\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: \"2em 0\" }}>\r\n        <Link\r\n          key=\"org\"\r\n          to={`/organisations`}\r\n          style={{ textDecoration: \"none\", color: \"rgba(0,0,0,0.8)\" }}\r\n        >\r\n          {\" \"}\r\n          <CostbookCostCode key=\"org\" title=\"Organisations\" />\r\n        </Link>\r\n        <Link\r\n          key=\"org\"\r\n          to={`/costbook`}\r\n          style={{ textDecoration: \"none\", color: \"rgba(0,0,0,0.8)\" }}\r\n        >\r\n          {\" \"}\r\n          <CostbookCostCode key=\"org\" title=\"Costbook\" />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  organisationsFetched: selectFetchAllOrganisationsSuccess,\r\n  organisations: selectAllOrganisations,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createOrganisation: (orgDetails) =>\r\n    dispatch(createOrganisationStart(orgDetails)),\r\n  fetchOrganisations: (userId) => dispatch(fetchAllOrganisationsStart(userId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Hamburger);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-project\\create-project.page.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-createbutton\\project-createbutton.component.jsx",["1945","1946","1947"],"import react, { Component } from \"react\";\r\nimport {\r\n  BigCircle,\r\n  CreateDiv,\r\n  CreateOptionsDiv,\r\n  CreateOptionsImg,\r\n} from \"./project-createbutton.styles\";\r\nimport { Overlay } from \"../admin-panel-task-page/admin-panel-task-page.styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ProjectCreateButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createSwitch: false,\r\n    };\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    this.setState(\r\n      (prevState) => ({\r\n        createSwitch: !prevState.createSwitch,\r\n      }),\r\n      () => {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { projectId } = this.props;\r\n    return (\r\n      <div>\r\n        {this.state.createSwitch ? (\r\n          <Overlay\r\n            backgroundcolor=\"rgba(0,0,0,0.3)\"\r\n            style={{\r\n              bottom: \"0\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CreateDiv>\r\n              <Link\r\n                to={`/createProject/${this.props.orgId}`}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <CreateOptionsDiv justify={false}>Project</CreateOptionsDiv>\r\n              </Link>\r\n\r\n              <CreateOptionsDiv\r\n                onClick={this.handleOnClick}\r\n                justify={true}\r\n                style={{ flex: \"2\" }}\r\n              >\r\n                CANCEL\r\n              </CreateOptionsDiv>\r\n            </CreateDiv>\r\n          </Overlay>\r\n        ) : (\r\n          <BigCircle onClick={this.handleOnClick}>\r\n            <p style={{ fontSize: \"2em\", margin: \"0\" }}>+</p>\r\n          </BigCircle>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectCreateButton;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-createbutton\\project-createbutton.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-choose-template\\project-choose-template.component.jsx",["1948"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createProjectStart,\r\n  createProjectTemplateStart,\r\n  fetchProjectsStart,\r\n} from \"../../redux/all-projects/all-projects.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\r\nimport {\r\n  Heading,\r\n  Description,\r\n  TemplateScrollDiv,\r\n  TemplateDiv,\r\n  TemplateDescription,\r\n  TemplateHeading,\r\n  TemplateButton,\r\n  Img,\r\n  TemplateDivContainer,\r\n} from \"./project-choose-template.styles\";\r\nimport { selectCurrentOrganisationId } from \"../../redux/organisation/organisation.selectors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport template from \"../../assets/template.png\";\r\n\r\nclass ProjectChooseTemplate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { orgId } = this.props;\r\n    return (\r\n      <div>\r\n        <Heading style={{ padding: \"1em\" }}>\r\n          Create a New Project\r\n          <Link\r\n            to={`/all-projects/${this.props.orgId}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <button\r\n              style={{\r\n                textDecoration: \"none\",\r\n                background: \"none\",\r\n                border: \"none\",\r\n                fontSize: \"1.4em\",\r\n              }}\r\n            >\r\n              &times;\r\n            </button>\r\n          </Link>\r\n        </Heading>\r\n\r\n        <Description style={{ padding: \"1em\" }}>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            Streamline work- flows and automate processes with ready made\r\n            project templates\r\n          </div>\r\n          <div\r\n            style={{\r\n              margin: \"1em 0em\",\r\n              color: \"black\",\r\n              fontWeight: \"600\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            OR\r\n          </div>\r\n          <div style={{ textAlign: \"center\" }}>Create Your Own</div>\r\n        </Description>\r\n\r\n        <div\r\n          style={{\r\n            backgroundColor: \"rgba(0,0,0,0.5)\",\r\n            width: \"100%\",\r\n            height: \"0.02em\",\r\n          }}\r\n        />\r\n\r\n        <TemplateScrollDiv>\r\n          <TemplateDivContainer>\r\n            <TemplateDiv>\r\n              <Img src={template} />\r\n              <TemplateHeading>\r\n                <div>From Scratch</div>\r\n                <Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  to={`/createProject/FromScratch/${orgId}`}\r\n                >\r\n                  <TemplateButton> Build </TemplateButton>\r\n                </Link>\r\n              </TemplateHeading>\r\n            </TemplateDiv>\r\n            <TemplateDescription>\r\n              <div style={{ fontWeight: \"600\", fontSize: \"1.2em\" }}>\r\n                The Best Solution For:\r\n              </div>\r\n              <div style={{ color: \"rgba(0,0,0,0.8)\" }}>\r\n                <div style={{ margin: \"0.5em 0em\" }}>\r\n                  <div>\r\n                    Tailor it to your needs and and what you need to make it\r\n                    your own.\r\n                  </div>\r\n                </div>\r\n                <div style={{ margin: \"0.5em 0em\" }}>\r\n                  <div>Tailor it to your needs</div>\r\n                </div>\r\n              </div>\r\n            </TemplateDescription>\r\n          </TemplateDivContainer>\r\n          <TemplateDivContainer>\r\n            <TemplateDiv>\r\n              <Img src={template} />\r\n              <TemplateHeading>\r\n                <div>From Scratch</div>\r\n                <TemplateButton> Build </TemplateButton>\r\n              </TemplateHeading>\r\n            </TemplateDiv>\r\n            <TemplateDescription>\r\n              <div style={{ fontWeight: \"600\", fontSize: \"1.2em\" }}>\r\n                The Best Solution For:\r\n              </div>\r\n              <div style={{ color: \"rgba(0,0,0,0.8)\" }}>\r\n                <div style={{ margin: \"0.5em 0em\" }}>\r\n                  <div>\r\n                    Tailor it to your needs and and what you need to make it\r\n                    your own.\r\n                  </div>\r\n                </div>\r\n                <div style={{ margin: \"0.5em 0em\" }}>\r\n                  <div>Tailor it to your needs</div>\r\n                </div>\r\n              </div>\r\n            </TemplateDescription>\r\n          </TemplateDivContainer>\r\n          <TemplateDivContainer>\r\n            <TemplateDiv>\r\n              <Img src={template} />\r\n              <TemplateHeading>\r\n                <div>From Scratch</div>\r\n                <TemplateButton> Build </TemplateButton>\r\n              </TemplateHeading>\r\n            </TemplateDiv>\r\n            <TemplateDescription>\r\n              <div style={{ fontWeight: \"600\", fontSize: \"1.2em\" }}>\r\n                The Best Solution For:\r\n              </div>\r\n              <div style={{ color: \"rgba(0,0,0,0.8)\" }}>\r\n                <div style={{ margin: \"0.5em 0em\" }}>\r\n                  <div>\r\n                    Tailor it to your needs and and what you need to make it\r\n                    your own.\r\n                  </div>\r\n                </div>\r\n                <div style={{ margin: \"0.5em 0em\" }}>\r\n                  <div>Tailor it to your needs</div>\r\n                </div>\r\n              </div>\r\n            </TemplateDescription>\r\n          </TemplateDivContainer>\r\n        </TemplateScrollDiv>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  name: selectCurrentUserFirstName,\r\n  orgId: selectCurrentOrganisationId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createProject: (projectDetails) =>\r\n    dispatch(createProjectStart(projectDetails)),\r\n  createProjectTemplate: (projectDetails) =>\r\n    dispatch(createProjectTemplateStart(projectDetails)),\r\n  fetchProjects: () => dispatch(fetchProjectsStart()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectChooseTemplate);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\project-choose-template\\project-choose-template.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-project-scratch\\create-project-scratch.page.jsx",["1949"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport ProjectChooseTemplate from \"../../components/project-choose-template/project-choose-template.component\";\r\nimport CreateProjectForm from \"./../../components/create-project-form/create-project-form.component\";\r\n\r\nclass CreateProjectScratch extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      orgId: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const orgId = this.props.match.params.orgId;\r\n    this.setState({ orgId: orgId });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreateProjectForm orgId={this.state.orgId} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProjectScratch);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-purchase-order-info\\individual-purchase-order-info.component.jsx",["1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { createPurchaseOrderStart } from \"../../redux/current-purchase-order/current-purchase-order.actions\";\r\nimport {\r\n  selectCurrentProjectId,\r\n  selectCurrentProjectTasks,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoInputDiv,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  POFormDiv,\r\n  Overlay,\r\n  AddLineItemDiv,\r\n  AmountDiv,\r\n  LongDiv,\r\n} from \"./individual-purchase-order-info.styles\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport FormFullScreenSelection from \"../form-fullscreen-selection/form-fullscreen-selection.component\";\r\nimport FormCostbookSelection from \"../form-costbook-selection/form-costbook-selection.component\";\r\nimport add from \"../../assets/add.png\";\r\nimport remove from \"../../assets/minuscircle.png\";\r\nimport PurchaseOrder from \"./../../pages/task-purchase-orders/task-purchase-orders.page\";\r\n\r\nclass IndividualPurchaseOrderInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let purchaseOrder = this.props.purchaseOrder[0];\r\n    console.log(purchaseOrder);\r\n    return (\r\n      <Container>\r\n        <InfoDiv>\r\n          <InfoTitle>Title</InfoTitle>\r\n          <InfoInputDiv id=\"Title\">{purchaseOrder.PoTitle}</InfoInputDiv>\r\n        </InfoDiv>\r\n\r\n        <InfoDiv>\r\n          <InfoTitle>Group</InfoTitle>\r\n          <InfoInputDiv id=\"Group\">{purchaseOrder.group}</InfoInputDiv>\r\n        </InfoDiv>\r\n\r\n        <InfoDiv>\r\n          <InfoTitle>Date</InfoTitle>\r\n          <InfoInputDiv id=\"Date\">{purchaseOrder.PoDate}</InfoInputDiv>\r\n        </InfoDiv>\r\n\r\n        <InfoDiv>\r\n          <InfoTitle>Terms</InfoTitle>\r\n          <InfoInputDiv id=\"Terms\">{purchaseOrder.terms}</InfoInputDiv>\r\n        </InfoDiv>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  projectId: selectCurrentProjectId,\r\n  tasks: selectCurrentProjectTasks,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createPurchaseOrder: (purchaseOrderDetails) =>\r\n    dispatch(createPurchaseOrderStart(purchaseOrderDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(IndividualPurchaseOrderInfo));\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\individual-purchase-order-info\\individual-purchase-order-info.styles.jsx",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-list-admin\\purchase-orders-list-admin.component.jsx",["1968","1969","1970"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport SearchBar from \"../search-bar/search-bar.component\";\r\nimport {\r\n  PODetailsDiv,\r\n  PODiv,\r\n  PONameDiv,\r\n  TinyText,\r\n  POGreyHeading,\r\n  BigText,\r\n  Tick,\r\n  Circle,\r\n} from \"./purchase-orders-list-admin.styles\";\r\nimport tick from \"../../assets/tick.jpg\";\r\n\r\nclass PurchaseOrderListAdmin extends React.Component {\r\n  render() {\r\n    let purchaseOrders = this.props.purchaseOrders;\r\n    console.log(purchaseOrders);\r\n    let purchasedItemsAmounts = [];\r\n    let purchasedItemPaid = [];\r\n    let openAmount = 0;\r\n\r\n    purchaseOrders.map(({ purchasedItems, paid }) => {\r\n      let Amount = 0;\r\n      purchasedItems.map(({ itemNumber, itemValue }) => {\r\n        Amount += itemNumber * itemValue;\r\n      });\r\n      purchasedItemsAmounts.push(Amount);\r\n      if (paid) {\r\n        purchasedItemPaid.push(Amount);\r\n      } else {\r\n        purchasedItemPaid.push(0);\r\n      }\r\n    });\r\n\r\n    console.log(purchasedItemsAmounts, purchasedItemPaid);\r\n    const sum = (accumulator, currentValue) => accumulator + currentValue;\r\n    openAmount = purchasedItemsAmounts.reduce(sum);\r\n\r\n    if (!purchaseOrders) {\r\n      purchaseOrders = [];\r\n    }\r\n    return (\r\n      <div style={{ marginBottom: \"5em\" }}>\r\n        <POGreyHeading>\r\n          <div>OPEN: ${openAmount}</div>\r\n          <div>STATUS</div>\r\n        </POGreyHeading>\r\n        {purchaseOrders.map(({ PoDate, _id, PoTitle, CoTitle }, index) => {\r\n          let date = new Date(PoDate);\r\n          return (\r\n            <Link\r\n              to={\r\n                this.props.VPO ? `/changeOrder/${_id}` : `/purchaseOrder/${_id}`\r\n              }\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <PODiv key={_id}>\r\n                <PONameDiv>\r\n                  <BigText weight=\"600\">\r\n                    {this.props.VPO ? CoTitle : PoTitle}\r\n                  </BigText>\r\n                  <BigText>{this.props.VPO ? CoTitle : PoTitle}</BigText>\r\n                  <TinyText>\r\n                    {purchasedItemsAmounts[index] ===\r\n                    purchasedItemPaid[index] ? (\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          fontWeight: \"600\",\r\n                          color: \"#43962A\",\r\n                        }}\r\n                      >\r\n                        <Tick src={tick} />\r\n                        Paid\r\n                      </div>\r\n                    ) : (\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          fontWeight: \"600\",\r\n                        }}\r\n                      >\r\n                        <Circle />\r\n                        Open\r\n                      </div>\r\n                    )}\r\n                  </TinyText>\r\n                </PONameDiv>\r\n                <PODetailsDiv>\r\n                  <BigText weight=\"600\">\r\n                    ${purchasedItemsAmounts[index]}\r\n                  </BigText>\r\n                  <TinyText>#{1000 + index}</TinyText>\r\n                  <TinyText>{date.toISOString().slice(0, 10)}</TinyText>\r\n                </PODetailsDiv>\r\n              </PODiv>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PurchaseOrderListAdmin);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\purchase-orders-list-admin\\purchase-orders-list-admin.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\steps-list\\steps-list.component.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\create-CO\\create-CO.js",["1971"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport CreateChangeOrderForm from \"../../components/create-change-order-form/create-change-order-form\";\r\nimport CreatePurchaseOrderForm from '../../components/create-purchase-order-form/create-purchase-order-form.component'\r\n\r\n class CreateCO extends Component {\r\n\r\n    constructor(){\r\n      super()\r\n      this.state={\r\n       projectId: ''\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      const projectId = this.props.match.params.projectId;\r\n      this.setState({projectId:projectId})\r\n  }\r\n\r\n    render() {\r\n        const {projectId} = this.state\r\n       \r\n\r\n        return (\r\n            <div>\r\n                <CreateChangeOrderForm projectId = {projectId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n \r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(CreateCO);\r\n\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\create-change-order-form\\create-change-order-form.styles.js",[],"C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\pages\\invite\\invite.jsx",["1972"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport CreatePurchaseOrderForm from \"../../components/create-purchase-order-form/create-purchase-order-form.component\";\r\nimport AddUserForm from \"./../../components/adduser-form/adduser-form.component\";\r\n\r\nclass Invite extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectId: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const projectId = this.props.match.params.projectId;\r\n    this.setState({ projectId: projectId });\r\n  }\r\n\r\n  render() {\r\n    const { projectId } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <AddUserForm projectId={projectId} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Invite);\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\adduser-form\\form-dropdown.component.jsx",["1973","1974","1975","1976","1977"],"import React, { Component } from \"react\";\r\nimport {\r\n  DropDownDiv,\r\n  DropDownButton,\r\n  DropDownContent,\r\n  DropDownOption,\r\n  DropDownOptionHeading,\r\n  DropDownOptionDescription,\r\n} from \"./form-dropdown.styles\";\r\nimport DownArrow from \"../../assets/down-arrow.png\";\r\n\r\nclass DropDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.dropdownContainer = React.createRef();\r\n    this.state = {\r\n      dropDownSwitch: false,\r\n      selected: this.props.selected,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  handleClickOutside = (event) => {\r\n    if (\r\n      this.dropdownContainer.current &&\r\n      !this.dropdownContainer.current.contains(event.target)\r\n    ) {\r\n      this.setState({\r\n        dropDownSwitch: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  DropDownToggle = (e) => {\r\n    e.preventDefault();\r\n    this.setState((prevState) => ({\r\n      dropDownSwitch: !prevState.dropDownSwitch,\r\n    }));\r\n  };\r\n\r\n  handleOptionClick = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"change\");\r\n    let { permission } = e.target.dataset;\r\n    this.props.onChangePermission(this.props.type, permission);\r\n    this.setState({ dropDownSwitch: false, selected: permission });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    let { options } = this.props;\r\n    let { selected } = this.state;\r\n    console.log(\"selected\", selected);\r\n\r\n    let selectedIndex = 0;\r\n    options.map((option, index) => {\r\n      if (option[0] === selected) {\r\n        selectedIndex = index;\r\n      }\r\n    });\r\n    return (\r\n      <DropDownDiv ref={this.dropdownContainer}>\r\n        <DropDownButton onClick={this.DropDownToggle} img={DownArrow}>\r\n          {selected != \" \" ? `${options[selectedIndex][1]}` : \"Select\"}\r\n        </DropDownButton>\r\n        <DropDownContent display={this.state.dropDownSwitch ? \"block\" : \"none\"}>\r\n          {selected != \" \" ? (\r\n            <DropDownOption\r\n              data-permission={options[selectedIndex][0]}\r\n              onClick={this.handleOptionClick}\r\n              backgroundFlag={true}\r\n            >\r\n              <DropDownOptionHeading\r\n                data-permission={options[selectedIndex][0]}\r\n                onClick={this.handleOptionClick}\r\n              >\r\n                {options[selectedIndex][1]}\r\n              </DropDownOptionHeading>\r\n              <DropDownOptionDescription\r\n                data-permission={options[selectedIndex][0]}\r\n                onClick={this.handleOptionClick}\r\n              >\r\n                {options[selectedIndex][2]}\r\n              </DropDownOptionDescription>\r\n            </DropDownOption>\r\n          ) : null}\r\n\r\n          {options.map((option) => {\r\n            let selectedFlag = false;\r\n            if (option[0] != selected) {\r\n              return (\r\n                <DropDownOption\r\n                  data-permission={option[0]}\r\n                  onClick={this.handleOptionClick}\r\n                  backgroundFlag={selectedFlag}\r\n                >\r\n                  <DropDownOptionHeading\r\n                    data-permission={option[0]}\r\n                    onClick={this.handleOptionClick}\r\n                  >\r\n                    {option[1]}\r\n                  </DropDownOptionHeading>\r\n                  <DropDownOptionDescription\r\n                    data-permission={option[0]}\r\n                    onClick={this.handleOptionClick}\r\n                  >\r\n                    {option[2]}\r\n                  </DropDownOptionDescription>\r\n                </DropDownOption>\r\n              );\r\n            }\r\n          })}\r\n        </DropDownContent>\r\n      </DropDownDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropDown;\r\n","C:\\Users\\lenovo\\Desktop\\GitHub\\myles-website\\frontend\\src\\components\\adduser-form\\form-dropdown.styles.jsx",[],{"ruleId":"1978","replacedBy":"1979"},{"ruleId":"1980","replacedBy":"1981"},{"ruleId":"1982","severity":1,"message":"1983","line":7,"column":3,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":20},{"ruleId":"1986","severity":1,"message":"1987","line":22,"column":1,"nodeType":"1988","endLine":22,"endColumn":40},{"ruleId":"1982","severity":1,"message":"1989","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":14},{"ruleId":"1990","severity":1,"message":"1991","line":6,"column":5,"nodeType":"1992","messageId":"1993","endLine":8,"endColumn":6},{"ruleId":"1978","replacedBy":"1994"},{"ruleId":"1980","replacedBy":"1995"},{"ruleId":"1982","severity":1,"message":"1983","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":27},{"ruleId":"1986","severity":1,"message":"1987","line":22,"column":1,"nodeType":"1988","endLine":22,"endColumn":40},{"ruleId":"1990","severity":1,"message":"1991","line":6,"column":5,"nodeType":"1992","messageId":"1993","endLine":8,"endColumn":6},{"ruleId":"1982","severity":1,"message":"1989","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":14},{"ruleId":"1996","severity":1,"message":"1997","line":54,"column":7,"nodeType":"1998","messageId":"1999","endLine":60,"endColumn":12},{"ruleId":"2000","severity":1,"message":"2001","line":62,"column":76,"nodeType":"2002","messageId":"1999","endLine":62,"endColumn":78},{"ruleId":"1982","severity":1,"message":"2003","line":4,"column":8,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":19},{"ruleId":"1996","severity":1,"message":"1997","line":52,"column":7,"nodeType":"1998","messageId":"1999","endLine":58,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2004","line":3,"column":47,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":62},{"ruleId":"1982","severity":1,"message":"2005","line":12,"column":9,"nodeType":"1984","messageId":"1985","endLine":12,"endColumn":21},{"ruleId":"1978","replacedBy":"2006"},{"ruleId":"1980","replacedBy":"2007"},{"ruleId":"1982","severity":1,"message":"2008","line":46,"column":19,"nodeType":"1984","messageId":"1985","endLine":46,"endColumn":27},{"ruleId":"1982","severity":1,"message":"1989","line":2,"column":9,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2003","line":4,"column":8,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2009","line":10,"column":3,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":28},{"ruleId":"1982","severity":1,"message":"2010","line":16,"column":8,"nodeType":"1984","messageId":"1985","endLine":16,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2011","line":19,"column":10,"nodeType":"1984","messageId":"1985","endLine":19,"endColumn":23},{"ruleId":"1982","severity":1,"message":"2012","line":20,"column":8,"nodeType":"1984","messageId":"1985","endLine":20,"endColumn":19},{"ruleId":"2000","severity":1,"message":"2001","line":68,"column":27,"nodeType":"2002","messageId":"1999","endLine":68,"endColumn":29},{"ruleId":"2000","severity":1,"message":"2013","line":71,"column":34,"nodeType":"2002","messageId":"1999","endLine":71,"endColumn":36},{"ruleId":"2000","severity":1,"message":"2013","line":118,"column":22,"nodeType":"2002","messageId":"1999","endLine":118,"endColumn":24},{"ruleId":"2000","severity":1,"message":"2013","line":119,"column":30,"nodeType":"2002","messageId":"1999","endLine":119,"endColumn":32},{"ruleId":"1982","severity":1,"message":"2014","line":4,"column":8,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2015","line":23,"column":8,"nodeType":"1984","messageId":"1985","endLine":23,"endColumn":28},{"ruleId":"2000","severity":1,"message":"2013","line":98,"column":17,"nodeType":"2002","messageId":"1999","endLine":98,"endColumn":19},{"ruleId":"2000","severity":1,"message":"2013","line":99,"column":27,"nodeType":"2002","messageId":"1999","endLine":99,"endColumn":29},{"ruleId":"1982","severity":1,"message":"2016","line":4,"column":8,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":22},{"ruleId":"1982","severity":1,"message":"1989","line":19,"column":10,"nodeType":"1984","messageId":"1985","endLine":19,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2017","line":36,"column":10,"nodeType":"1984","messageId":"1985","endLine":36,"endColumn":20},{"ruleId":"2000","severity":1,"message":"2013","line":50,"column":41,"nodeType":"2002","messageId":"1999","endLine":50,"endColumn":43},{"ruleId":"1982","severity":1,"message":"2018","line":60,"column":7,"nodeType":"1984","messageId":"1985","endLine":60,"endColumn":15},{"ruleId":"1982","severity":1,"message":"2019","line":61,"column":7,"nodeType":"1984","messageId":"1985","endLine":61,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2020","line":62,"column":7,"nodeType":"1984","messageId":"1985","endLine":62,"endColumn":28},{"ruleId":"1982","severity":1,"message":"2021","line":1,"column":26,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":32},{"ruleId":"1982","severity":1,"message":"2022","line":2,"column":10,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":34},{"ruleId":"1982","severity":1,"message":"2023","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":32},{"ruleId":"1982","severity":1,"message":"2024","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":27},{"ruleId":"1982","severity":1,"message":"2025","line":4,"column":29,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":46},{"ruleId":"1996","severity":1,"message":"1997","line":56,"column":7,"nodeType":"1998","messageId":"1999","endLine":62,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2026","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":37},{"ruleId":"1982","severity":1,"message":"2027","line":4,"column":39,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":66},{"ruleId":"1982","severity":1,"message":"2028","line":4,"column":124,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":139},{"ruleId":"2000","severity":1,"message":"2001","line":102,"column":28,"nodeType":"2002","messageId":"1999","endLine":102,"endColumn":30},{"ruleId":"1982","severity":1,"message":"2004","line":3,"column":47,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":62},{"ruleId":"1982","severity":1,"message":"2005","line":12,"column":9,"nodeType":"1984","messageId":"1985","endLine":12,"endColumn":21},{"ruleId":"1982","severity":1,"message":"2029","line":23,"column":8,"nodeType":"1984","messageId":"1985","endLine":23,"endColumn":29},{"ruleId":"1982","severity":1,"message":"2030","line":24,"column":10,"nodeType":"1984","messageId":"1985","endLine":24,"endColumn":27},{"ruleId":"1982","severity":1,"message":"2031","line":30,"column":11,"nodeType":"1984","messageId":"1985","endLine":30,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2032","line":14,"column":10,"nodeType":"1984","messageId":"1985","endLine":14,"endColumn":29},{"ruleId":"2000","severity":1,"message":"2001","line":91,"column":14,"nodeType":"2002","messageId":"1999","endLine":91,"endColumn":16},{"ruleId":"2033","severity":1,"message":"2034","line":90,"column":9,"nodeType":"2035","messageId":"1999","endLine":90,"endColumn":32},{"ruleId":"2000","severity":1,"message":"2001","line":112,"column":28,"nodeType":"2002","messageId":"1999","endLine":112,"endColumn":30},{"ruleId":"1982","severity":1,"message":"2036","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":29},{"ruleId":"1982","severity":1,"message":"2037","line":51,"column":16,"nodeType":"1984","messageId":"1985","endLine":51,"endColumn":30},{"ruleId":"1982","severity":1,"message":"2038","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":31},{"ruleId":"1982","severity":1,"message":"2039","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":26},{"ruleId":"1982","severity":1,"message":"2040","line":7,"column":10,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":27},{"ruleId":"1996","severity":1,"message":"1997","line":67,"column":5,"nodeType":"1998","messageId":"1999","endLine":73,"endColumn":9},{"ruleId":"1996","severity":1,"message":"1997","line":55,"column":5,"nodeType":"1998","messageId":"1999","endLine":61,"endColumn":9},{"ruleId":"2000","severity":1,"message":"2001","line":64,"column":34,"nodeType":"2002","messageId":"1999","endLine":64,"endColumn":36},{"ruleId":"2041","severity":1,"message":"2042","line":48,"column":28,"nodeType":"2043","messageId":"2044","endLine":48,"endColumn":30},{"ruleId":"2000","severity":1,"message":"2013","line":50,"column":26,"nodeType":"2002","messageId":"1999","endLine":50,"endColumn":28},{"ruleId":"1982","severity":1,"message":"2045","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":25},{"ruleId":"1982","severity":1,"message":"1989","line":2,"column":9,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":13},{"ruleId":"1982","severity":1,"message":"1989","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2046","line":23,"column":3,"nodeType":"1984","messageId":"1985","endLine":23,"endColumn":14},{"ruleId":"2047","severity":1,"message":"2048","line":291,"column":25,"nodeType":"2049","endLine":291,"endColumn":46},{"ruleId":"1982","severity":1,"message":"2050","line":16,"column":3,"nodeType":"1984","messageId":"1985","endLine":16,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2051","line":17,"column":3,"nodeType":"1984","messageId":"1985","endLine":17,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2052","line":5,"column":19,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":28},{"ruleId":"1982","severity":1,"message":"2053","line":6,"column":8,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2054","line":8,"column":3,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":15},{"ruleId":"1982","severity":1,"message":"2055","line":11,"column":3,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":9},{"ruleId":"1982","severity":1,"message":"2056","line":13,"column":3,"nodeType":"1984","messageId":"1985","endLine":13,"endColumn":11},{"ruleId":"2041","severity":1,"message":"2042","line":26,"column":51,"nodeType":"2043","messageId":"2044","endLine":26,"endColumn":53},{"ruleId":"2041","severity":1,"message":"2042","line":28,"column":54,"nodeType":"2043","messageId":"2044","endLine":28,"endColumn":56},{"ruleId":"1978","replacedBy":"2057"},{"ruleId":"1980","replacedBy":"2058"},{"ruleId":"1978","replacedBy":"2059"},{"ruleId":"1980","replacedBy":"2060"},{"ruleId":"1982","severity":1,"message":"2061","line":1,"column":8,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2062","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2063","line":2,"column":10,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2064","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":34},{"ruleId":"1982","severity":1,"message":"2065","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":37},{"ruleId":"1982","severity":1,"message":"2066","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":15},{"ruleId":"1982","severity":1,"message":"2067","line":3,"column":17,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":32},{"ruleId":"1982","severity":1,"message":"2068","line":3,"column":34,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":48},{"ruleId":"1982","severity":1,"message":"2046","line":3,"column":51,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":62},{"ruleId":"1982","severity":1,"message":"2062","line":8,"column":10,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2069","line":9,"column":8,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2070","line":4,"column":8,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2071","line":57,"column":26,"nodeType":"1984","messageId":"1985","endLine":57,"endColumn":40},{"ruleId":"1982","severity":1,"message":"2016","line":5,"column":8,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2072","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2073","line":7,"column":8,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":16},{"ruleId":"1982","severity":1,"message":"2074","line":11,"column":10,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":40},{"ruleId":"1982","severity":1,"message":"2018","line":34,"column":33,"nodeType":"1984","messageId":"1985","endLine":34,"endColumn":41},{"ruleId":"1982","severity":1,"message":"2016","line":5,"column":8,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2072","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2073","line":7,"column":8,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":16},{"ruleId":"1982","severity":1,"message":"2074","line":11,"column":10,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":40},{"ruleId":"1982","severity":1,"message":"2075","line":5,"column":8,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":40},{"ruleId":"1982","severity":1,"message":"2070","line":4,"column":8,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2021","line":1,"column":38,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":44},{"ruleId":"1982","severity":1,"message":"2026","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":37},{"ruleId":"1982","severity":1,"message":"2027","line":3,"column":39,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":66},{"ruleId":"1982","severity":1,"message":"2028","line":3,"column":124,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":139},{"ruleId":"1996","severity":1,"message":"1997","line":56,"column":7,"nodeType":"1998","messageId":"1999","endLine":62,"endColumn":12},{"ruleId":"2000","severity":1,"message":"2001","line":48,"column":76,"nodeType":"2002","messageId":"1999","endLine":48,"endColumn":78},{"ruleId":"1982","severity":1,"message":"2037","line":51,"column":16,"nodeType":"1984","messageId":"1985","endLine":51,"endColumn":30},{"ruleId":"1982","severity":1,"message":"2036","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":29},{"ruleId":"2033","severity":1,"message":"2034","line":90,"column":9,"nodeType":"2035","messageId":"1999","endLine":90,"endColumn":32},{"ruleId":"2000","severity":1,"message":"2001","line":112,"column":28,"nodeType":"2002","messageId":"1999","endLine":112,"endColumn":30},{"ruleId":"1982","severity":1,"message":"2039","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":26},{"ruleId":"1982","severity":1,"message":"2040","line":7,"column":10,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":27},{"ruleId":"1982","severity":1,"message":"2045","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":25},{"ruleId":"1982","severity":1,"message":"1989","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2076","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":55},{"ruleId":"1982","severity":1,"message":"2077","line":7,"column":8,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":26},{"ruleId":"1982","severity":1,"message":"2078","line":8,"column":10,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2079","line":8,"column":19,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2052","line":8,"column":27,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":36},{"ruleId":"1982","severity":1,"message":"2055","line":6,"column":31,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":37},{"ruleId":"1982","severity":1,"message":"2056","line":6,"column":50,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":58},{"ruleId":"1982","severity":1,"message":"2052","line":5,"column":19,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":28},{"ruleId":"1982","severity":1,"message":"2080","line":10,"column":27,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":33},{"ruleId":"1982","severity":1,"message":"2081","line":10,"column":69,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":81},{"ruleId":"1982","severity":1,"message":"2061","line":1,"column":8,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2082","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":34},{"ruleId":"1982","severity":1,"message":"2036","line":29,"column":3,"nodeType":"1984","messageId":"1985","endLine":29,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2083","line":37,"column":10,"nodeType":"1984","messageId":"1985","endLine":37,"endColumn":18},{"ruleId":"1982","severity":1,"message":"2062","line":38,"column":10,"nodeType":"1984","messageId":"1985","endLine":38,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2084","line":141,"column":7,"nodeType":"1984","messageId":"1985","endLine":141,"endColumn":24},{"ruleId":"1982","severity":1,"message":"2085","line":144,"column":7,"nodeType":"1984","messageId":"1985","endLine":144,"endColumn":25},{"ruleId":"2047","severity":1,"message":"2048","line":153,"column":17,"nodeType":"2049","endLine":160,"endColumn":19},{"ruleId":"1978","replacedBy":"2086"},{"ruleId":"1980","replacedBy":"2087"},{"ruleId":"1982","severity":1,"message":"2082","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":34},{"ruleId":"1982","severity":1,"message":"2036","line":7,"column":46,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":65},{"ruleId":"1982","severity":1,"message":"2084","line":79,"column":25,"nodeType":"1984","messageId":"1985","endLine":79,"endColumn":42},{"ruleId":"1982","severity":1,"message":"2085","line":79,"column":58,"nodeType":"1984","messageId":"1985","endLine":79,"endColumn":76},{"ruleId":"1982","severity":1,"message":"2088","line":2,"column":36,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":61},{"ruleId":"1982","severity":1,"message":"2088","line":2,"column":36,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":61},{"ruleId":"1982","severity":1,"message":"2089","line":7,"column":10,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":32},{"ruleId":"1982","severity":1,"message":"2090","line":8,"column":10,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":20},{"ruleId":"1990","severity":1,"message":"1991","line":12,"column":5,"nodeType":"1992","messageId":"1993","endLine":14,"endColumn":6},{"ruleId":"1990","severity":1,"message":"1991","line":10,"column":5,"nodeType":"1992","messageId":"1993","endLine":12,"endColumn":6},{"ruleId":"1982","severity":1,"message":"2091","line":61,"column":15,"nodeType":"1984","messageId":"1985","endLine":61,"endColumn":28},{"ruleId":"1982","severity":1,"message":"2039","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":26},{"ruleId":"1982","severity":1,"message":"2092","line":7,"column":10,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":27},{"ruleId":"1982","severity":1,"message":"2037","line":51,"column":16,"nodeType":"1984","messageId":"1985","endLine":51,"endColumn":30},{"ruleId":"1982","severity":1,"message":"2016","line":5,"column":8,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2072","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2073","line":7,"column":8,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":16},{"ruleId":"1982","severity":1,"message":"2093","line":8,"column":8,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":31},{"ruleId":"1982","severity":1,"message":"2070","line":9,"column":8,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2094","line":10,"column":41,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":72},{"ruleId":"1982","severity":1,"message":"2074","line":11,"column":10,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":40},{"ruleId":"1982","severity":1,"message":"2095","line":5,"column":8,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2096","line":7,"column":8,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":40},{"ruleId":"1982","severity":1,"message":"2055","line":6,"column":31,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":37},{"ruleId":"1982","severity":1,"message":"2056","line":6,"column":50,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":58},{"ruleId":"1982","severity":1,"message":"2052","line":5,"column":19,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":28},{"ruleId":"1982","severity":1,"message":"2097","line":10,"column":27,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":33},{"ruleId":"1982","severity":1,"message":"2081","line":10,"column":69,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":81},{"ruleId":"1982","severity":1,"message":"2016","line":5,"column":8,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2072","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2073","line":7,"column":8,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":16},{"ruleId":"1982","severity":1,"message":"2070","line":9,"column":8,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2094","line":10,"column":41,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":72},{"ruleId":"1982","severity":1,"message":"2074","line":11,"column":10,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":40},{"ruleId":"1982","severity":1,"message":"2037","line":51,"column":16,"nodeType":"1984","messageId":"1985","endLine":51,"endColumn":30},{"ruleId":"1982","severity":1,"message":"2039","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":26},{"ruleId":"1982","severity":1,"message":"2092","line":7,"column":10,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":27},{"ruleId":"1982","severity":1,"message":"2052","line":5,"column":19,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":28},{"ruleId":"1982","severity":1,"message":"2097","line":10,"column":27,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":33},{"ruleId":"1982","severity":1,"message":"2081","line":10,"column":69,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":81},{"ruleId":"1982","severity":1,"message":"2055","line":6,"column":31,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":37},{"ruleId":"1982","severity":1,"message":"2056","line":6,"column":50,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":58},{"ruleId":"1982","severity":1,"message":"1989","line":26,"column":10,"nodeType":"1984","messageId":"1985","endLine":26,"endColumn":14},{"ruleId":"2041","severity":1,"message":"2042","line":68,"column":33,"nodeType":"2043","messageId":"2044","endLine":68,"endColumn":35},{"ruleId":"2000","severity":1,"message":"2013","line":69,"column":25,"nodeType":"2002","messageId":"1999","endLine":69,"endColumn":27},{"ruleId":"2000","severity":1,"message":"2001","line":118,"column":26,"nodeType":"2002","messageId":"1999","endLine":118,"endColumn":28},{"ruleId":"2041","severity":1,"message":"2042","line":132,"column":22,"nodeType":"2043","messageId":"2044","endLine":132,"endColumn":24},{"ruleId":"2033","severity":1,"message":"2098","line":294,"column":29,"nodeType":"2035","messageId":"1999","endLine":294,"endColumn":36},{"ruleId":"2047","severity":1,"message":"2048","line":300,"column":27,"nodeType":"2049","endLine":306,"endColumn":29},{"ruleId":"2047","severity":1,"message":"2048","line":330,"column":19,"nodeType":"2049","endLine":330,"endColumn":36},{"ruleId":"1982","severity":1,"message":"1989","line":2,"column":10,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2099","line":2,"column":16,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":26},{"ruleId":"1982","severity":1,"message":"2078","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":17},{"ruleId":"2000","severity":1,"message":"2013","line":93,"column":28,"nodeType":"2002","messageId":"1999","endLine":93,"endColumn":30},{"ruleId":"1982","severity":1,"message":"2070","line":4,"column":8,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2100","line":8,"column":3,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":37},{"ruleId":"1982","severity":1,"message":"2052","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":19},{"ruleId":"2041","severity":1,"message":"2042","line":71,"column":29,"nodeType":"2043","messageId":"2044","endLine":71,"endColumn":31},{"ruleId":"2041","severity":1,"message":"2042","line":67,"column":47,"nodeType":"2043","messageId":"2044","endLine":67,"endColumn":49},{"ruleId":"1978","replacedBy":"2101"},{"ruleId":"1980","replacedBy":"2102"},{"ruleId":"1982","severity":1,"message":"2012","line":9,"column":8,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2067","line":11,"column":3,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":18},{"ruleId":"1982","severity":1,"message":"2068","line":12,"column":3,"nodeType":"1984","messageId":"1985","endLine":12,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2103","line":14,"column":3,"nodeType":"1984","messageId":"1985","endLine":14,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2050","line":15,"column":3,"nodeType":"1984","messageId":"1985","endLine":15,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2104","line":16,"column":3,"nodeType":"1984","messageId":"1985","endLine":16,"endColumn":20},{"ruleId":"1982","severity":1,"message":"2046","line":18,"column":3,"nodeType":"1984","messageId":"1985","endLine":18,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2105","line":19,"column":3,"nodeType":"1984","messageId":"1985","endLine":19,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2066","line":20,"column":3,"nodeType":"1984","messageId":"1985","endLine":20,"endColumn":8},{"ruleId":"1982","severity":1,"message":"2106","line":22,"column":3,"nodeType":"1984","messageId":"1985","endLine":22,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2069","line":24,"column":8,"nodeType":"1984","messageId":"1985","endLine":24,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2107","line":26,"column":10,"nodeType":"1984","messageId":"1985","endLine":26,"endColumn":20},{"ruleId":"1982","severity":1,"message":"2108","line":27,"column":8,"nodeType":"1984","messageId":"1985","endLine":27,"endColumn":19},{"ruleId":"2000","severity":1,"message":"2013","line":75,"column":27,"nodeType":"2002","messageId":"1999","endLine":75,"endColumn":29},{"ruleId":"1982","severity":1,"message":"2109","line":6,"column":21,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":31},{"ruleId":"1982","severity":1,"message":"2103","line":7,"column":43,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":50},{"ruleId":"2041","severity":1,"message":"2042","line":31,"column":43,"nodeType":"2043","messageId":"2044","endLine":31,"endColumn":45},{"ruleId":"1990","severity":1,"message":"1991","line":5,"column":3,"nodeType":"1992","messageId":"1993","endLine":7,"endColumn":4},{"ruleId":"2041","severity":1,"message":"2042","line":56,"column":36,"nodeType":"2043","messageId":"2044","endLine":56,"endColumn":38},{"ruleId":"2041","severity":1,"message":"2110","line":72,"column":50,"nodeType":"2043","messageId":"2111","endLine":72,"endColumn":52},{"ruleId":"2000","severity":1,"message":"2001","line":74,"column":46,"nodeType":"2002","messageId":"1999","endLine":74,"endColumn":48},{"ruleId":"2041","severity":1,"message":"2042","line":56,"column":36,"nodeType":"2043","messageId":"2044","endLine":56,"endColumn":38},{"ruleId":"2041","severity":1,"message":"2110","line":72,"column":50,"nodeType":"2043","messageId":"2111","endLine":72,"endColumn":52},{"ruleId":"2000","severity":1,"message":"2001","line":74,"column":46,"nodeType":"2002","messageId":"1999","endLine":74,"endColumn":48},{"ruleId":"1982","severity":1,"message":"2017","line":2,"column":10,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":20},{"ruleId":"1982","severity":1,"message":"2052","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2112","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":25},{"ruleId":"2041","severity":1,"message":"2042","line":34,"column":47,"nodeType":"2043","messageId":"2044","endLine":34,"endColumn":49},{"ruleId":"2041","severity":1,"message":"2042","line":61,"column":46,"nodeType":"2043","messageId":"2044","endLine":61,"endColumn":48},{"ruleId":"2041","severity":1,"message":"2042","line":68,"column":42,"nodeType":"2043","messageId":"2044","endLine":68,"endColumn":44},{"ruleId":"1982","severity":1,"message":"2113","line":85,"column":24,"nodeType":"1984","messageId":"1985","endLine":85,"endColumn":36},{"ruleId":"1982","severity":1,"message":"1989","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2078","line":5,"column":10,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2052","line":5,"column":19,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":28},{"ruleId":"1982","severity":1,"message":"2053","line":6,"column":8,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":17},{"ruleId":"2041","severity":1,"message":"2042","line":16,"column":72,"nodeType":"2043","messageId":"2044","endLine":16,"endColumn":74},{"ruleId":"1982","severity":1,"message":"2061","line":1,"column":8,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2088","line":2,"column":68,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":93},{"ruleId":"1982","severity":1,"message":"2114","line":5,"column":10,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":40},{"ruleId":"1982","severity":1,"message":"2052","line":6,"column":19,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":28},{"ruleId":"1982","severity":1,"message":"2053","line":7,"column":8,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":17},{"ruleId":"1990","severity":1,"message":"1991","line":12,"column":3,"nodeType":"1992","messageId":"1993","endLine":14,"endColumn":4},{"ruleId":"1982","severity":1,"message":"2115","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":35},{"ruleId":"1982","severity":1,"message":"2012","line":5,"column":8,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2116","line":6,"column":43,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":51},{"ruleId":"1982","severity":1,"message":"2103","line":6,"column":53,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":60},{"ruleId":"1982","severity":1,"message":"2050","line":6,"column":62,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":72},{"ruleId":"1982","severity":1,"message":"2104","line":6,"column":74,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":91},{"ruleId":"1982","severity":1,"message":"2117","line":6,"column":130,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":137},{"ruleId":"1982","severity":1,"message":"2103","line":8,"column":3,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2051","line":9,"column":3,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2078","line":11,"column":10,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2010","line":12,"column":8,"nodeType":"1984","messageId":"1985","endLine":12,"endColumn":25},{"ruleId":"1990","severity":1,"message":"1991","line":17,"column":3,"nodeType":"1992","messageId":"1993","endLine":19,"endColumn":4},{"ruleId":"2000","severity":1,"message":"2013","line":25,"column":25,"nodeType":"2002","messageId":"1999","endLine":25,"endColumn":27},{"ruleId":"2000","severity":1,"message":"2013","line":28,"column":25,"nodeType":"2002","messageId":"1999","endLine":28,"endColumn":27},{"ruleId":"1982","severity":1,"message":"2112","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2118","line":4,"column":27,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":52},{"ruleId":"2000","severity":1,"message":"2001","line":52,"column":11,"nodeType":"2002","messageId":"1999","endLine":52,"endColumn":13},{"ruleId":"2000","severity":1,"message":"2001","line":61,"column":11,"nodeType":"2002","messageId":"1999","endLine":61,"endColumn":13},{"ruleId":"2000","severity":1,"message":"2001","line":70,"column":11,"nodeType":"2002","messageId":"1999","endLine":70,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2119","line":92,"column":10,"nodeType":"1984","messageId":"1985","endLine":92,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2113","line":92,"column":24,"nodeType":"1984","messageId":"1985","endLine":92,"endColumn":36},{"ruleId":"1982","severity":1,"message":"2120","line":2,"column":94,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":119},{"ruleId":"2041","severity":1,"message":"2042","line":56,"column":36,"nodeType":"2043","messageId":"2044","endLine":56,"endColumn":38},{"ruleId":"2041","severity":1,"message":"2110","line":72,"column":50,"nodeType":"2043","messageId":"2111","endLine":72,"endColumn":52},{"ruleId":"2000","severity":1,"message":"2001","line":75,"column":43,"nodeType":"2002","messageId":"1999","endLine":75,"endColumn":45},{"ruleId":"1982","severity":1,"message":"2121","line":1,"column":10,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":16},{"ruleId":"1990","severity":1,"message":"1991","line":7,"column":5,"nodeType":"1992","messageId":"1993","endLine":9,"endColumn":6},{"ruleId":"1982","severity":1,"message":"2122","line":12,"column":14,"nodeType":"1984","messageId":"1985","endLine":12,"endColumn":23},{"ruleId":"2000","severity":1,"message":"2001","line":52,"column":11,"nodeType":"2002","messageId":"1999","endLine":52,"endColumn":13},{"ruleId":"2000","severity":1,"message":"2001","line":61,"column":11,"nodeType":"2002","messageId":"1999","endLine":61,"endColumn":13},{"ruleId":"2000","severity":1,"message":"2001","line":70,"column":11,"nodeType":"2002","messageId":"1999","endLine":70,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2119","line":92,"column":10,"nodeType":"1984","messageId":"1985","endLine":92,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2113","line":92,"column":24,"nodeType":"1984","messageId":"1985","endLine":92,"endColumn":36},{"ruleId":"1982","severity":1,"message":"1989","line":26,"column":10,"nodeType":"1984","messageId":"1985","endLine":26,"endColumn":14},{"ruleId":"2041","severity":1,"message":"2042","line":67,"column":33,"nodeType":"2043","messageId":"2044","endLine":67,"endColumn":35},{"ruleId":"2000","severity":1,"message":"2013","line":68,"column":25,"nodeType":"2002","messageId":"1999","endLine":68,"endColumn":27},{"ruleId":"2000","severity":1,"message":"2001","line":117,"column":26,"nodeType":"2002","messageId":"1999","endLine":117,"endColumn":28},{"ruleId":"2041","severity":1,"message":"2042","line":131,"column":22,"nodeType":"2043","messageId":"2044","endLine":131,"endColumn":24},{"ruleId":"2033","severity":1,"message":"2098","line":293,"column":29,"nodeType":"2035","messageId":"1999","endLine":293,"endColumn":36},{"ruleId":"2047","severity":1,"message":"2048","line":299,"column":27,"nodeType":"2049","endLine":305,"endColumn":29},{"ruleId":"2047","severity":1,"message":"2048","line":329,"column":19,"nodeType":"2049","endLine":329,"endColumn":36},{"ruleId":"1982","severity":1,"message":"2021","line":1,"column":38,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":44},{"ruleId":"1982","severity":1,"message":"2123","line":1,"column":46,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":51},{"ruleId":"1996","severity":1,"message":"1997","line":91,"column":5,"nodeType":"1998","messageId":"1999","endLine":98,"endColumn":9},{"ruleId":"1996","severity":1,"message":"1997","line":152,"column":5,"nodeType":"1998","messageId":"1999","endLine":158,"endColumn":9},{"ruleId":"1982","severity":1,"message":"1989","line":12,"column":10,"nodeType":"1984","messageId":"1985","endLine":12,"endColumn":14},{"ruleId":"1982","severity":1,"message":"1989","line":1,"column":10,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":14},{"ruleId":"1982","severity":1,"message":"1989","line":1,"column":10,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2061","line":1,"column":8,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2124","line":6,"column":3,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2125","line":10,"column":8,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":11},{"ruleId":"1982","severity":1,"message":"2126","line":11,"column":8,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2127","line":12,"column":8,"nodeType":"1984","messageId":"1985","endLine":12,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2128","line":13,"column":8,"nodeType":"1984","messageId":"1985","endLine":13,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2129","line":30,"column":11,"nodeType":"1984","messageId":"1985","endLine":30,"endColumn":20},{"ruleId":"1982","severity":1,"message":"1989","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2130","line":7,"column":3,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2131","line":8,"column":3,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":21},{"ruleId":"1982","severity":1,"message":"1989","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2045","line":4,"column":10,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":25},{"ruleId":"1982","severity":1,"message":"2022","line":5,"column":10,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":34},{"ruleId":"1982","severity":1,"message":"2132","line":6,"column":10,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2133","line":8,"column":3,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2134","line":9,"column":3,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2135","line":10,"column":3,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2136","line":11,"column":3,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2137","line":13,"column":3,"nodeType":"1984","messageId":"1985","endLine":13,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2138","line":14,"column":3,"nodeType":"1984","messageId":"1985","endLine":14,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2130","line":22,"column":3,"nodeType":"1984","messageId":"1985","endLine":22,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2131","line":23,"column":3,"nodeType":"1984","messageId":"1985","endLine":23,"endColumn":21},{"ruleId":"2000","severity":1,"message":"2001","line":53,"column":38,"nodeType":"2002","messageId":"1999","endLine":53,"endColumn":40},{"ruleId":"1982","severity":1,"message":"1989","line":3,"column":10,"nodeType":"1984","messageId":"1985","endLine":3,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2130","line":7,"column":3,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2131","line":8,"column":3,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":21},{"ruleId":"1982","severity":1,"message":"2133","line":4,"column":3,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2134","line":5,"column":3,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2136","line":7,"column":3,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2137","line":9,"column":3,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2138","line":10,"column":3,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2139","line":17,"column":3,"nodeType":"1984","messageId":"1985","endLine":17,"endColumn":30},{"ruleId":"1982","severity":1,"message":"2131","line":19,"column":3,"nodeType":"1984","messageId":"1985","endLine":19,"endColumn":21},{"ruleId":"1982","severity":1,"message":"2120","line":8,"column":3,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":28},{"ruleId":"2041","severity":1,"message":"2042","line":54,"column":36,"nodeType":"2043","messageId":"2044","endLine":54,"endColumn":38},{"ruleId":"2041","severity":1,"message":"2042","line":73,"column":33,"nodeType":"2043","messageId":"2044","endLine":73,"endColumn":35},{"ruleId":"2041","severity":1,"message":"2110","line":99,"column":33,"nodeType":"2043","messageId":"2111","endLine":99,"endColumn":35},{"ruleId":"2000","severity":1,"message":"2001","line":101,"column":24,"nodeType":"2002","messageId":"1999","endLine":101,"endColumn":26},{"ruleId":"1982","severity":1,"message":"2133","line":4,"column":3,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2134","line":5,"column":3,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2136","line":7,"column":3,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2137","line":9,"column":3,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2138","line":10,"column":3,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2140","line":11,"column":3,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":9},{"ruleId":"1982","severity":1,"message":"2141","line":12,"column":3,"nodeType":"1984","messageId":"1985","endLine":12,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2103","line":13,"column":3,"nodeType":"1984","messageId":"1985","endLine":13,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2139","line":17,"column":3,"nodeType":"1984","messageId":"1985","endLine":17,"endColumn":30},{"ruleId":"1982","severity":1,"message":"2130","line":18,"column":3,"nodeType":"1984","messageId":"1985","endLine":18,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2131","line":19,"column":3,"nodeType":"1984","messageId":"1985","endLine":19,"endColumn":21},{"ruleId":"1982","severity":1,"message":"2142","line":39,"column":9,"nodeType":"1984","messageId":"1985","endLine":39,"endColumn":24},{"ruleId":"1982","severity":1,"message":"2120","line":8,"column":3,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":28},{"ruleId":"2041","severity":1,"message":"2042","line":54,"column":36,"nodeType":"2043","messageId":"2044","endLine":54,"endColumn":38},{"ruleId":"2041","severity":1,"message":"2042","line":75,"column":33,"nodeType":"2043","messageId":"2044","endLine":75,"endColumn":35},{"ruleId":"2041","severity":1,"message":"2110","line":100,"column":33,"nodeType":"2043","messageId":"2111","endLine":100,"endColumn":35},{"ruleId":"2000","severity":1,"message":"2001","line":102,"column":24,"nodeType":"2002","messageId":"1999","endLine":102,"endColumn":26},{"ruleId":"1982","severity":1,"message":"2061","line":1,"column":8,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2124","line":6,"column":3,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2125","line":10,"column":8,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":11},{"ruleId":"1982","severity":1,"message":"2126","line":11,"column":8,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2127","line":12,"column":8,"nodeType":"1984","messageId":"1985","endLine":12,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2128","line":13,"column":8,"nodeType":"1984","messageId":"1985","endLine":13,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2129","line":30,"column":11,"nodeType":"1984","messageId":"1985","endLine":30,"endColumn":20},{"ruleId":"1982","severity":1,"message":"1989","line":9,"column":10,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2133","line":4,"column":3,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2134","line":5,"column":3,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2136","line":7,"column":3,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2137","line":9,"column":3,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2138","line":10,"column":3,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2143","line":20,"column":3,"nodeType":"1984","messageId":"1985","endLine":20,"endColumn":34},{"ruleId":"1982","severity":1,"message":"2131","line":25,"column":3,"nodeType":"1984","messageId":"1985","endLine":25,"endColumn":21},{"ruleId":"1982","severity":1,"message":"2133","line":4,"column":3,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2134","line":5,"column":3,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2136","line":7,"column":3,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2144","line":8,"column":3,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2137","line":9,"column":3,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2138","line":10,"column":3,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2131","line":21,"column":3,"nodeType":"1984","messageId":"1985","endLine":21,"endColumn":21},{"ruleId":"1990","severity":1,"message":"1991","line":25,"column":3,"nodeType":"1992","messageId":"1993","endLine":27,"endColumn":4},{"ruleId":"1982","severity":1,"message":"2133","line":4,"column":3,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2134","line":5,"column":3,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2136","line":7,"column":3,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2137","line":9,"column":3,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2138","line":10,"column":3,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2131","line":20,"column":3,"nodeType":"1984","messageId":"1985","endLine":20,"endColumn":21},{"ruleId":"1982","severity":1,"message":"2017","line":2,"column":10,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":20},{"ruleId":"1982","severity":1,"message":"2052","line":9,"column":10,"nodeType":"1984","messageId":"1985","endLine":9,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2051","line":15,"column":3,"nodeType":"1984","messageId":"1985","endLine":15,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2145","line":16,"column":3,"nodeType":"1984","messageId":"1985","endLine":16,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2146","line":17,"column":3,"nodeType":"1984","messageId":"1985","endLine":17,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2147","line":18,"column":3,"nodeType":"1984","messageId":"1985","endLine":18,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2148","line":20,"column":8,"nodeType":"1984","messageId":"1985","endLine":20,"endColumn":16},{"ruleId":"2041","severity":1,"message":"2110","line":53,"column":27,"nodeType":"2043","messageId":"2111","endLine":53,"endColumn":29},{"ruleId":"2000","severity":1,"message":"2001","line":54,"column":20,"nodeType":"2002","messageId":"1999","endLine":54,"endColumn":22},{"ruleId":"1982","severity":1,"message":"2017","line":2,"column":10,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":20},{"ruleId":"1982","severity":1,"message":"2149","line":7,"column":3,"nodeType":"1984","messageId":"1985","endLine":7,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2052","line":11,"column":10,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2150","line":15,"column":10,"nodeType":"1984","messageId":"1985","endLine":15,"endColumn":35},{"ruleId":"1982","severity":1,"message":"2151","line":79,"column":21,"nodeType":"1984","messageId":"1985","endLine":79,"endColumn":31},{"ruleId":"2000","severity":1,"message":"2013","line":159,"column":25,"nodeType":"2002","messageId":"1999","endLine":159,"endColumn":27},{"ruleId":"2000","severity":1,"message":"2013","line":184,"column":32,"nodeType":"2002","messageId":"1999","endLine":184,"endColumn":34},{"ruleId":"2000","severity":1,"message":"2013","line":211,"column":32,"nodeType":"2002","messageId":"1999","endLine":211,"endColumn":34},{"ruleId":"1982","severity":1,"message":"2152","line":212,"column":55,"nodeType":"1984","messageId":"1985","endLine":212,"endColumn":61},{"ruleId":"1982","severity":1,"message":"2153","line":271,"column":19,"nodeType":"1984","messageId":"1985","endLine":271,"endColumn":24},{"ruleId":"1982","severity":1,"message":"2154","line":271,"column":26,"nodeType":"1984","messageId":"1985","endLine":271,"endColumn":34},{"ruleId":"2000","severity":1,"message":"2013","line":279,"column":74,"nodeType":"2002","messageId":"1999","endLine":279,"endColumn":76},{"ruleId":"1982","severity":1,"message":"2155","line":2,"column":10,"nodeType":"1984","messageId":"1985","endLine":2,"endColumn":31},{"ruleId":"1982","severity":1,"message":"2061","line":1,"column":8,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2125","line":10,"column":8,"nodeType":"1984","messageId":"1985","endLine":10,"endColumn":11},{"ruleId":"1982","severity":1,"message":"2126","line":11,"column":8,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2128","line":13,"column":8,"nodeType":"1984","messageId":"1985","endLine":13,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2129","line":30,"column":11,"nodeType":"1984","messageId":"1985","endLine":30,"endColumn":20},{"ruleId":"1982","severity":1,"message":"2156","line":8,"column":3,"nodeType":"1984","messageId":"1985","endLine":8,"endColumn":29},{"ruleId":"1982","severity":1,"message":"2157","line":17,"column":8,"nodeType":"1984","messageId":"1985","endLine":17,"endColumn":20},{"ruleId":"1982","severity":1,"message":"2158","line":13,"column":8,"nodeType":"1984","messageId":"1985","endLine":13,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2159","line":15,"column":8,"nodeType":"1984","messageId":"1985","endLine":15,"endColumn":15},{"ruleId":"1982","severity":1,"message":"2160","line":16,"column":8,"nodeType":"1984","messageId":"1985","endLine":16,"endColumn":32},{"ruleId":"1990","severity":1,"message":"1991","line":19,"column":3,"nodeType":"1992","messageId":"1993","endLine":21,"endColumn":4},{"ruleId":"1982","severity":1,"message":"2061","line":1,"column":8,"nodeType":"1984","messageId":"1985","endLine":1,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2124","line":6,"column":3,"nodeType":"1984","messageId":"1985","endLine":6,"endColumn":19},{"ruleId":"1982","severity":1,"message":"2129","line":31,"column":11,"nodeType":"1984","messageId":"1985","endLine":31,"endColumn":20},{"ruleId":"1990","severity":1,"message":"1991","line":27,"column":3,"nodeType":"1992","messageId":"1993","endLine":29,"endColumn":4},{"ruleId":"1982","severity":1,"message":"2161","line":4,"column":8,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":29},{"ruleId":"1982","severity":1,"message":"2134","line":11,"column":3,"nodeType":"1984","messageId":"1985","endLine":11,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2144","line":15,"column":3,"nodeType":"1984","messageId":"1985","endLine":15,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2137","line":16,"column":3,"nodeType":"1984","messageId":"1985","endLine":16,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2138","line":17,"column":3,"nodeType":"1984","messageId":"1985","endLine":17,"endColumn":13},{"ruleId":"1982","severity":1,"message":"2140","line":18,"column":3,"nodeType":"1984","messageId":"1985","endLine":18,"endColumn":9},{"ruleId":"1982","severity":1,"message":"2141","line":19,"column":3,"nodeType":"1984","messageId":"1985","endLine":19,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2162","line":20,"column":3,"nodeType":"1984","messageId":"1985","endLine":20,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2103","line":21,"column":3,"nodeType":"1984","messageId":"1985","endLine":21,"endColumn":10},{"ruleId":"1982","severity":1,"message":"2163","line":22,"column":3,"nodeType":"1984","messageId":"1985","endLine":22,"endColumn":17},{"ruleId":"1982","severity":1,"message":"2164","line":23,"column":3,"nodeType":"1984","messageId":"1985","endLine":23,"endColumn":12},{"ruleId":"1982","severity":1,"message":"2165","line":24,"column":3,"nodeType":"1984","messageId":"1985","endLine":24,"endColumn":10},{"ruleId":"1982","severity":1,"message":"1989","line":26,"column":10,"nodeType":"1984","messageId":"1985","endLine":26,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2166","line":27,"column":8,"nodeType":"1984","messageId":"1985","endLine":27,"endColumn":31},{"ruleId":"1982","severity":1,"message":"2167","line":28,"column":8,"nodeType":"1984","messageId":"1985","endLine":28,"endColumn":29},{"ruleId":"1982","severity":1,"message":"2168","line":29,"column":8,"nodeType":"1984","messageId":"1985","endLine":29,"endColumn":11},{"ruleId":"1982","severity":1,"message":"2169","line":30,"column":8,"nodeType":"1984","messageId":"1985","endLine":30,"endColumn":14},{"ruleId":"1982","severity":1,"message":"2170","line":31,"column":8,"nodeType":"1984","messageId":"1985","endLine":31,"endColumn":21},{"ruleId":"1990","severity":1,"message":"1991","line":34,"column":3,"nodeType":"1992","messageId":"1993","endLine":36,"endColumn":4},{"ruleId":"1982","severity":1,"message":"2053","line":5,"column":8,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":17},{"ruleId":"2041","severity":1,"message":"2042","line":26,"column":51,"nodeType":"2043","messageId":"2044","endLine":26,"endColumn":53},{"ruleId":"2041","severity":1,"message":"2042","line":28,"column":54,"nodeType":"2043","messageId":"2044","endLine":28,"endColumn":56},{"ruleId":"1982","severity":1,"message":"2093","line":5,"column":8,"nodeType":"1984","messageId":"1985","endLine":5,"endColumn":31},{"ruleId":"1982","severity":1,"message":"2093","line":4,"column":8,"nodeType":"1984","messageId":"1985","endLine":4,"endColumn":31},{"ruleId":"2041","severity":1,"message":"2042","line":63,"column":33,"nodeType":"2043","messageId":"2044","endLine":63,"endColumn":35},{"ruleId":"2000","severity":1,"message":"2001","line":71,"column":21,"nodeType":"2002","messageId":"1999","endLine":71,"endColumn":23},{"ruleId":"2000","severity":1,"message":"2001","line":74,"column":21,"nodeType":"2002","messageId":"1999","endLine":74,"endColumn":23},{"ruleId":"2041","severity":1,"message":"2110","line":95,"column":33,"nodeType":"2043","messageId":"2111","endLine":95,"endColumn":35},{"ruleId":"2000","severity":1,"message":"2001","line":97,"column":27,"nodeType":"2002","messageId":"1999","endLine":97,"endColumn":29},"no-native-reassign",["2171"],"no-negated-in-lhs",["2172"],"no-unused-vars","'selectCurrentUser' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["2171"],["2172"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'ProjectList' is defined but never used.","'fetchTasksStart' is defined but never used.","'projectTasks' is assigned a value but never used.",["2171"],["2172"],"'projects' is assigned a value but never used.","'selectAreProjectsFetching' is defined but never used.","'CreateProjectForm' is defined but never used.","'GenericButton' is defined but never used.","'AddUserForm' is defined but never used.","Expected '===' and instead saw '=='.","'CreateTaskForm' is defined but never used.","'adduserFormComponent' is defined but never used.","'CreateStepForm' is defined but never used.","'LongButton' is defined but never used.","'taskName' is assigned a value but never used.","'isTaskDone' is assigned a value but never used.","'taskCompletionMessage' is assigned a value but never used.","'select' is defined but never used.","'fetchCurrentProjectStart' is defined but never used.","'selectCurrentProjectId' is defined but never used.","'inviteUserFailure' is defined but never used.","'inviteUserSuccess' is defined but never used.","'completeStepQuestionFailure' is defined but never used.","'completeStepQuestionSuccess' is defined but never used.","'fetchStepsStart' is defined but never used.","'currentProjectReducer' is defined but never used.","'setUserPermission' is defined but never used.","'userId' is assigned a value but never used.","'selectCurrentTaskId' is defined but never used.","no-dupe-keys","Duplicate key 'isCurrentTaskCompleting'.","ObjectExpression","'selectCurrentStepId' is defined but never used.","'purchasedItems' is assigned a value but never used.","'fetchCurrentTaskStart' is defined but never used.","'fetchCurrentTask' is defined but never used.","'selectCurrentPOId' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'createTaskStart' is defined but never used.","'SmallCircle' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormButton' is defined but never used.","'FormHeading' is defined but never used.","'SmallText' is defined but never used.","'SearchBar' is defined but never used.","'POSummaryDiv' is defined but never used.","'POName' is defined but never used.","'PONumber' is defined but never used.",["2171"],["2172"],["2171"],["2172"],"'react' is defined but never used.","'DeleteButton' is defined but never used.","'connect' is defined but never used.","'createStructuredSelector' is defined but never used.","'selectCurrentOrganisationId' is defined but never used.","'Image' is defined but never used.","'DropDownContent' is defined but never used.","'DropDownOption' is defined but never used.","'removeImage' is defined but never used.","'PurchaseOrderList' is defined but never used.","'purchaseOrders' is assigned a value but never used.","'selectUserSteps' is defined but never used.","'StepList' is defined but never used.","'fetchCurrentPurchaseOrderStart' is defined but never used.","'IndividualPurchaseOrderComponent' is defined but never used.","'selectStepQuestionAnsweredConfirmationMessage' is defined but never used.","'ConformationMesage' is defined but never used.","'BigText' is defined but never used.","'Circle' is defined but never used.","'POItem' is assigned a value but never used.","'itemsShipped' is assigned a value but never used.","'selectIsStepBeingCreated' is defined but never used.","'CheckBox' is defined but never used.","'questionStatement' is assigned a value but never used.","'isQuestionAnswered' is assigned a value but never used.",["2171"],["2172"],"'selectCurrentProjectTasks' is defined but never used.","'updateCurrentTaskStart' is defined but never used.","'updateTask' is defined but never used.","'onDataUpdated' is assigned a value but never used.","'selectCurrentCOId' is defined but never used.","'CreatePurchaseOrderForm' is defined but never used.","'selectCurrentTaskPurchaseOrders' is defined but never used.","'POItemNav' is defined but never used.","'IndividualPurchaseOrderContainer' is defined but never used.","'COItem' is assigned a value but never used.","Duplicate key 'display'.","'withRouter' is defined but never used.","'selectCurrentProjectPurchaseOrders' is defined but never used.",["2171"],["2172"],"'Overlay' is defined but never used.","'FormInverseButton' is defined but never used.","'BigCircle' is defined but never used.","'TeamDivItem' is defined but never used.","'AddRoleDiv' is defined but never used.","'AddRoleForm' is defined but never used.","'FormSelect' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'inviteUserStart' is defined but never used.","'projectRoles' is assigned a value but never used.","'selectCurrentProjectPunchlists' is defined but never used.","'selectCurrentProjectUsers' is defined but never used.","'LowerDiv' is defined but never used.","'TeamDiv' is defined but never used.","'UpdateRolesInProjectStart' is defined but never used.","'projectUsers' is assigned a value but never used.","'DropDownOptionDescription' is defined but never used.","'string' is defined but never used.","'taskOwner' is assigned a value but never used.","'delay' is defined but never used.","'CreateOptionsImg' is defined but never used.","'VPO' is defined but never used.","'PO' is defined but never used.","'task' is defined but never used.","'punch' is defined but never used.","'projectId' is assigned a value but never used.","'createCostCodeStart' is defined but never used.","'fetchCostBookStart' is defined but never used.","'signOut' is defined but never used.","'Container' is defined but never used.","'InfoInput' is defined but never used.","'InfoTitle' is defined but never used.","'InfoDiv' is defined but never used.","'LowerNavDiv' is defined but never used.","'OneHalfDiv' is defined but never used.","'createCostBookCategoryStart' is defined but never used.","'NavBar' is defined but never used.","'OneThirdDiv' is defined but never used.","'costCodeDetails' is assigned a value but never used.","'selectCreateCostCodeItemSuccess' is defined but never used.","'LongInput' is defined but never used.","'FormLabel' is defined but never used.","'FormInput' is defined but never used.","'FormDiv' is defined but never used.","'DropDown' is defined but never used.","'ItemDiv' is defined but never used.","'selectCurrentProjectRoles' is defined but never used.","'itemNumber' is assigned a value but never used.","'itemId' is assigned a value but never used.","'items' is assigned a value but never used.","'selected' is assigned a value but never used.","'onTaskCompletionStart' is defined but never used.","'fetchAllOrganisationsClear' is defined but never used.","'Organisation' is defined but never used.","'ProjectsNav' is defined but never used.","'Spinner' is defined but never used.","'OrganisationCreateButton' is defined but never used.","'ProjectChooseTemplate' is defined but never used.","'POFormDiv' is defined but never used.","'AddLineItemDiv' is defined but never used.","'AmountDiv' is defined but never used.","'LongDiv' is defined but never used.","'FormFullScreenSelection' is defined but never used.","'FormCostbookSelection' is defined but never used.","'add' is defined but never used.","'remove' is defined but never used.","'PurchaseOrder' is defined but never used.","no-global-assign","no-unsafe-negation"]