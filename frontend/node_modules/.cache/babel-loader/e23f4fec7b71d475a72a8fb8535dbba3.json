{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\steps-list\\\\steps-list.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { completeStepQuestionStart, deleteCurrentStepStart } from \"../../redux/current-step/current-step.actions\";\nimport StepItem from \"../step-item/step-item.component\";\nimport { LongButton } from \"./steps-list.component.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass StepList extends React.Component {\n  render() {\n    let steps = this.props.steps;\n    console.log(steps);\n\n    if (!steps) {\n      steps = [];\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: steps.map(({\n          stepName,\n          questionStatement,\n          _id,\n          isStepDone,\n          isQuestionAnswered\n        }, index) => {\n          console.log(_id);\n          const stepDetails = {\n            stepName,\n            questionStatement,\n            _id,\n            isStepDone,\n            isQuestionAnswered,\n            index\n          };\n          return /*#__PURE__*/_jsxDEV(StepItem, {\n            stepDetails: stepDetails\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(LongButton, {\n          onClick: this.props.completeTask,\n          children: \"COMPLETE TASK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({\n  completeStepQuestion: stepId => dispatch(completeStepQuestionStart(stepId)),\n  deleteStep: stepId => dispatch(deleteCurrentStepStart(stepId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepList);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/steps-list/steps-list.component.jsx"],"names":["React","connect","Link","createStructuredSelector","completeStepQuestionStart","deleteCurrentStepStart","StepItem","LongButton","StepList","Component","render","steps","props","console","log","map","stepName","questionStatement","_id","isStepDone","isQuestionAnswered","index","stepDetails","completeTask","mapStateToProps","mapDispatchToProps","dispatch","completeStepQuestion","stepId","deleteStep"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,yBADF,EAEEC,sBAFF,QAGO,+CAHP;AAIA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,UAAT,QAA2B,+BAA3B;;;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,QAAI,CAACA,KAAL,EAAY;AACVA,MAAAA,KAAK,GAAG,EAAR;AACD;;AACD,wBACE;AAAA,8BACE;AAAA,kBACGA,KAAK,CAACI,GAAN,CACC,CACE;AACEC,UAAAA,QADF;AAEEC,UAAAA,iBAFF;AAGEC,UAAAA,GAHF;AAIEC,UAAAA,UAJF;AAKEC,UAAAA;AALF,SADF,EAQEC,KARF,KASK;AACHR,UAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,gBAAMI,WAAW,GAAG;AAClBN,YAAAA,QADkB;AAElBC,YAAAA,iBAFkB;AAGlBC,YAAAA,GAHkB;AAIlBC,YAAAA,UAJkB;AAKlBC,YAAAA,kBALkB;AAMlBC,YAAAA;AANkB,WAApB;AAQA,8BAAO,QAAC,QAAD;AAAoB,YAAA,WAAW,EAAEC;AAAjC,aAAeJ,GAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SArBF;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eA0BE;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,KAAKN,KAAL,CAAWW,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA,oBADF;AAkCD;;AAzCoC;;AA4CvC,MAAMC,eAAe,GAAGrB,wBAAwB,CAAC,EAAD,CAAhD;;AAEA,MAAMsB,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,oBAAoB,EAAGC,MAAD,IAAYF,QAAQ,CAACtB,yBAAyB,CAACwB,MAAD,CAA1B,CADF;AAExCC,EAAAA,UAAU,EAAGD,MAAD,IAAYF,QAAQ,CAACrB,sBAAsB,CAACuB,MAAD,CAAvB;AAFQ,CAAf,CAA3B;;AAKA,eAAe3B,OAAO,CAACuB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjB,QAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  completeStepQuestionStart,\r\n  deleteCurrentStepStart,\r\n} from \"../../redux/current-step/current-step.actions\";\r\nimport StepItem from \"../step-item/step-item.component\";\r\nimport { LongButton } from \"./steps-list.component.styles\";\r\n\r\nclass StepList extends React.Component {\r\n  render() {\r\n    let steps = this.props.steps;\r\n    console.log(steps);\r\n    if (!steps) {\r\n      steps = [];\r\n    }\r\n    return (\r\n      <>\r\n        <div>\r\n          {steps.map(\r\n            (\r\n              {\r\n                stepName,\r\n                questionStatement,\r\n                _id,\r\n                isStepDone,\r\n                isQuestionAnswered,\r\n              },\r\n              index\r\n            ) => {\r\n              console.log(_id);\r\n              const stepDetails = {\r\n                stepName,\r\n                questionStatement,\r\n                _id,\r\n                isStepDone,\r\n                isQuestionAnswered,\r\n                index,\r\n              };\r\n              return <StepItem key={_id} stepDetails={stepDetails} />;\r\n            }\r\n          )}\r\n        </div>\r\n        <center>\r\n          <LongButton onClick={this.props.completeTask}>\r\n            COMPLETE TASK\r\n          </LongButton>\r\n        </center>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  completeStepQuestion: (stepId) => dispatch(completeStepQuestionStart(stepId)),\r\n  deleteStep: (stepId) => dispatch(deleteCurrentStepStart(stepId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StepList);\r\n"]},"metadata":{},"sourceType":"module"}