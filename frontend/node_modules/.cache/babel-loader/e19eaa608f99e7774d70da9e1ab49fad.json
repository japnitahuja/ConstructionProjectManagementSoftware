{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\desktop\\\\github\\\\myles-website\\\\frontend\\\\src\\\\components\\\\create-task-form\\\\create-task-form.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { createTaskStart } from \"../../redux/all-tasks/all-tasks.actions\";\nimport { signOut } from \"../../redux/user/user.actions\";\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateTaskForm extends Component {\n  constructor() {\n    super();\n\n    this.handleOnChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      let task = this.state.taskDetails;\n      task[name] = value;\n      this.setState({\n        taskDetails: task\n      });\n    };\n\n    this.createTask = e => {\n      e.preventDefault();\n      let taskDetails = this.state.taskDetails;\n      this.props.createTask(taskDetails, this.props.match.params.projectId);\n    };\n\n    this.state = {\n      taskDetails: {\n        taskName: \"\",\n        taskStartDate: \"\",\n        taskEndDate: \"\"\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        onChange: e => this.handleOnChange(e),\n        onSubmit: this.createTask,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskName\",\n            children: \" Task Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.taskDetails.taskName,\n            name: \"taskName\",\n            id: \"taskName\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskStartDate\",\n            children: \" Task Start Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: this.state.taskDetails.taskStartDate,\n            name: \"taskStartDate\",\n            id: \"taskStartDate\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskEndDate\",\n            children: \" Task End Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: this.state.taskDetails.taskEndDate,\n            name: \"taskEndDate\",\n            id: \"taskEndDate\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => dispatch(signOut()),\n  createTask: taskDetails => dispatch(createTaskStart(taskDetails))\n});\n\nexport default connect(null, mapDispatchToProps)(CreateTaskForm);","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/components/create-task-form/create-task-form.component.jsx"],"names":["React","Component","connect","createStructuredSelector","createTaskStart","signOut","selectCurrentUserFirstName","CreateTaskForm","constructor","handleOnChange","e","name","value","target","task","state","taskDetails","setState","createTask","preventDefault","props","match","params","projectId","taskName","taskStartDate","taskEndDate","render","display","flexDirection","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,eAAT,QAA+B,yCAA/B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,0BAAT,QAA2C,iCAA3C;;;AAEA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AACrCO,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,cAXc,GAWIC,CAAD,IAAO;AACtB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACA,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWC,WAAtB;AACAF,MAAAA,IAAI,CAACH,IAAD,CAAJ,GAAaC,KAAb;AAEA,WAAKK,QAAL,CAAc;AAAED,QAAAA,WAAW,EAAEF;AAAf,OAAd;AACD,KAjBa;;AAAA,SAmBdI,UAnBc,GAmBAR,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACS,cAAF;AACA,UAAIH,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA7B;AACA,WAAKI,KAAL,CAAWF,UAAX,CAAsBF,WAAtB,EAAkC,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,SAA1D;AACD,KAvBa;;AAEZ,SAAKR,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AACXQ,QAAAA,QAAQ,EAAE,EADC;AAEXC,QAAAA,aAAa,EAAE,EAFJ;AAGXC,QAAAA,WAAW,EAAE;AAHF;AADF,KAAb;AAOD;;AAgBDC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,6BACE;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,aAAa,EAAE;AAAlC,SADT;AAEE,QAAA,QAAQ,EAAGnB,CAAD,IAAO,KAAKD,cAAL,CAAoBC,CAApB,CAFnB;AAGE,QAAA,QAAQ,EAAE,KAAKQ,UAHjB;AAAA,gCAKE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,WAAX,CAAuBQ,QAFhC;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,EAAE,EAAC,UAJL;AAKE,YAAA,QAAQ,EAAGd,CAAD,IAAO,KAAKD,cAAL,CAAoBC,CAApB,CALnB;AAME,YAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAgBE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,WAAX,CAAuBS,aAFhC;AAGE,YAAA,IAAI,EAAC,eAHP;AAIE,YAAA,EAAE,EAAC,eAJL;AAKE,YAAA,QAAQ,EAAGf,CAAD,IAAO,KAAKD,cAAL,CAAoBC,CAApB,CALnB;AAME,YAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eA2BE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,WAAX,CAAuBU,WAFhC;AAGE,YAAA,IAAI,EAAC,aAHP;AAIE,YAAA,EAAE,EAAC,aAJL;AAKE,YAAA,QAAQ,EAAGhB,CAAD,IAAO,KAAKD,cAAL,CAAoBC,CAApB,CALnB;AAME,YAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BF,eAsCE;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgDD;;AA5EoC;;AA+EvC,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACxC1B,EAAAA,OAAO,EAAE,MAAM0B,QAAQ,CAAC1B,OAAO,EAAR,CADiB;AAExCa,EAAAA,UAAU,EAAGF,WAAD,IAAiBe,QAAQ,CAAC3B,eAAe,CAACY,WAAD,CAAhB;AAFG,CAAf,CAA3B;;AAKA,eAAed,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCvB,cAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { createTaskStart} from \"../../redux/all-tasks/all-tasks.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\r\n\r\nclass CreateTaskForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      taskDetails: {\r\n        taskName: \"\",\r\n        taskStartDate: \"\",\r\n        taskEndDate: \"\"\r\n      },\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let task = this.state.taskDetails;\r\n    task[name] = value;\r\n\r\n    this.setState({ taskDetails: task });\r\n  };\r\n\r\n  createTask = (e) => {\r\n    e.preventDefault();\r\n    let taskDetails = this.state.taskDetails;\r\n    this.props.createTask(taskDetails,this.props.match.params.projectId);\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n          onSubmit={this.createTask}\r\n        >\r\n          <div>\r\n            <label htmlFor=\"taskName\"> Task Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.taskDetails.taskName}\r\n              name=\"taskName\"\r\n              id=\"taskName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required/>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"taskStartDate\"> Task Start Date: </label>\r\n            <input\r\n              type=\"date\"\r\n              value={this.state.taskDetails.taskStartDate}\r\n              name=\"taskStartDate\"\r\n              id=\"taskStartDate\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required/>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"taskEndDate\"> Task End Date: </label>\r\n            <input\r\n              type=\"date\"\r\n              value={this.state.taskDetails.taskEndDate}\r\n              name=\"taskEndDate\"\r\n              id=\"taskEndDate\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required/>\r\n          </div>\r\n          \r\n          <div>\r\n            <input type=\"submit\" value=\"Create Task\" />\r\n   \r\n          </div>\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createTask: (taskDetails) => dispatch(createTaskStart(taskDetails))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateTaskForm);\r\n"]},"metadata":{},"sourceType":"module"}