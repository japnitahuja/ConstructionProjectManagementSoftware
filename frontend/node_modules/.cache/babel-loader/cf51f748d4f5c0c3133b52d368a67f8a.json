{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\access\\\\access.component.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { UpdateUserInProjectStart } from \"../../redux/current-project/current-project.actions\";\nimport { selectCurrentProjectUsers } from \"../../redux/current-project/current-project.selectors\";\nimport { AccessForm, FormSelect } from \"./access.styles\";\nimport { TeamDivItem, BigCircle, LowerDiv, Overlay, Text, FormButton, FormInverseButton } from \"../team/team.styles\";\nimport DropDown from \"../access-dropdown/access-dropdown.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Access extends Component {\n  constructor() {\n    super();\n\n    this.handleOnChange = (Userid, newPermission) => {\n      this.state.userDetails.map(user => {\n        console.log(user);\n\n        if (user.id === Userid) {\n          user.updatedPermission = newPermission;\n          console.log(this.state.userDetails);\n          return 1;\n        }\n      });\n      const user = {\n        id: Userid,\n        updatedPermission: newPermission\n      };\n      this.state.userDetails.push(user); //console.log(this.state.userDetails)\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n      const userDetails = this.state.userDetails;\n      const {\n        updateUser\n      } = this.props;\n      console.log(userDetails);\n      updateUser(userDetails);\n    };\n\n    console.log(\"access\", this.props);\n    this.state = {\n      userDetails: [],\n      permissions: [[\"BILLINGADMIN\", \"Billing Admin\", \"Can lorem ipsum dolor\"], [\"ADMIN\", \"Admin\", \"Can lorem ipsum dolor\"], [\"AUTHOR\", \"Author\", \"Can lorem ipsum dolor\"], [\"CONTRIBUTER\", \"Contributer\", \"Can lorem ipsum dolor\"]]\n    };\n  }\n\n  render() {\n    const {\n      users\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AccessForm, {\n        children: users.map((user, index) => {\n          console.log(user);\n          let unnamed = user.user.email.slice(0, user.user.email.indexOf('@'));\n          return /*#__PURE__*/_jsxDEV(TeamDivItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: user.user._id,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(BigCircle, {\n                  children: user.user.firstName ? user.user.firstName.charAt(0) : unnamed.charAt(0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  style: {\n                    marginLeft: \"1em\"\n                  },\n                  children: user.user.firstName ? user.user.firstName : unnamed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n              userID: user.user._id,\n              options: this.state.permissions,\n              selected: user.permission,\n              onChangePermission: this.handleOnChange\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), console.log(this.state)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(LowerDiv, {\n        style: {\n          marginBottom: \"7em\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormButton, {\n          onClick: this.submit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInverseButton, {\n          onClick: this.props.exit,\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  users: selectCurrentProjectUsers\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateUser: userDetails => dispatch(UpdateUserInProjectStart(userDetails))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Access);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/access/access.component.js"],"names":["React","Component","connect","createStructuredSelector","UpdateUserInProjectStart","selectCurrentProjectUsers","AccessForm","FormSelect","TeamDivItem","BigCircle","LowerDiv","Overlay","Text","FormButton","FormInverseButton","DropDown","Access","constructor","handleOnChange","Userid","newPermission","state","userDetails","map","user","console","log","id","updatedPermission","push","submit","e","preventDefault","updateUser","props","permissions","render","users","index","unnamed","email","slice","indexOf","_id","display","flexDirection","alignItems","firstName","charAt","marginLeft","permission","marginBottom","exit","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,wBAAT,QAAyC,qDAAzC;AACA,SAASC,yBAAT,QAA0C,uDAA1C;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,iBAArC;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,EAA0CC,OAA1C,EAAmDC,IAAnD,EAAyDC,UAAzD,EAAqEC,iBAArE,QAA6F,qBAA7F;AACA,OAAOC,QAAP,MAAqB,8CAArB;;;;AAEA,MAAMC,MAAN,SAAqBf,SAArB,CAA+B;AAC3BgB,EAAAA,WAAW,GAAE;AACT;;AADS,SAcbC,cAda,GAcI,CAACC,MAAD,EAASC,aAAT,KAA2B;AACxC,WAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA4BC,IAAD,IAAU;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAIA,IAAI,CAACG,EAAL,KAAYR,MAAhB,EAAuB;AACrBK,UAAAA,IAAI,CAACI,iBAAL,GAAyBR,aAAzB;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,WAAvB;AACA,iBAAO,CAAP;AACD;AACF,OAPD;AAQA,YAAME,IAAI,GAAG;AACTG,QAAAA,EAAE,EAAER,MADK;AAETS,QAAAA,iBAAiB,EAAER;AAFV,OAAb;AAIA,WAAKC,KAAL,CAAWC,WAAX,CAAuBO,IAAvB,CAA4BL,IAA5B,EAbwC,CAcxC;AACH,KA7BY;;AAAA,SA+BbM,MA/Ba,GA+BHC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMV,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,YAAM;AAACW,QAAAA;AAAD,UAAe,KAAKC,KAA1B;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAW,MAAAA,UAAU,CAACX,WAAD,CAAV;AACD,KArCY;;AAETG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKQ,KAA3B;AACA,SAAKb,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETa,MAAAA,WAAW,EAAC,CACV,CAAC,cAAD,EAAiB,eAAjB,EAAkC,uBAAlC,CADU,EAEV,CAAC,OAAD,EAAU,OAAV,EAAmB,uBAAnB,CAFU,EAGV,CAAC,QAAD,EAAW,QAAX,EAAqB,uBAArB,CAHU,EAIV,CAAC,aAAD,EAAgB,aAAhB,EAA+B,uBAA/B,CAJU;AAFH,KAAb;AASH;;AA0BHC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKH,KAAvB;AACA,wBACA;AAAA,8BACE,QAAC,UAAD;AAAA,kBACGG,KAAK,CAACd,GAAN,CAAU,CAACC,IAAD,EAAOc,KAAP,KAAiB;AAC1Bb,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,cAAIe,OAAO,GAAGf,IAAI,CAACA,IAAL,CAAUgB,KAAV,CAAgBC,KAAhB,CAAsB,CAAtB,EAAwBjB,IAAI,CAACA,IAAL,CAAUgB,KAAV,CAAgBE,OAAhB,CAAwB,GAAxB,CAAxB,CAAd;AACA,8BACE,QAAC,WAAD;AAAA,oCACE;AAAO,cAAA,OAAO,EAAElB,IAAI,CAACA,IAAL,CAAUmB,GAA1B;AAAA,qCACE;AAAK,gBAAA,KAAK,EAAE;AAACC,kBAAAA,OAAO,EAAC,MAAT;AAAiBC,kBAAAA,aAAa,EAAC,KAA/B;AAAsCC,kBAAAA,UAAU,EAAE;AAAlD,iBAAZ;AAAA,wCACE,QAAC,SAAD;AAAA,4BAAYtB,IAAI,CAACA,IAAL,CAAUuB,SAAV,GAAoBvB,IAAI,CAACA,IAAL,CAAUuB,SAAV,CAAoBC,MAApB,CAA2B,CAA3B,CAApB,GAAkDT,OAAO,CAACS,MAAR,CAAe,CAAf;AAA9D;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD;AAAM,kBAAA,KAAK,EAAE;AAACC,oBAAAA,UAAU,EAAC;AAAZ,mBAAb;AAAA,4BAAkCzB,IAAI,CAACA,IAAL,CAAUuB,SAAV,GAAoBvB,IAAI,CAACA,IAAL,CAAUuB,SAA9B,GAAwCR;AAA1E;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,QAAD;AACU,cAAA,MAAM,EAAIf,IAAI,CAACA,IAAL,CAAUmB,GAD9B;AAEU,cAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWc,WAF9B;AAGU,cAAA,QAAQ,EAAEX,IAAI,CAAC0B,UAHzB;AAIU,cAAA,kBAAkB,EAAI,KAAKhC;AAJrC,eAAeoB,KAAf;AAAA;AAAA;AAAA;AAAA,oBARF,EAaKb,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB,CAbL;AAAA,aAAkBiB,KAAlB;AAAA;AAAA;AAAA;AAAA,kBADF;AAkBD,SArBA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eA0BE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE;AAACa,UAAAA,YAAY,EAAC;AAAd,SAAjB;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,KAAKrB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,iBAAD;AAAmB,UAAA,OAAO,EAAE,KAAKI,KAAL,CAAWkB,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA,oBADA;AAkCD;;AA3E4B;;AA8E/B,MAAMC,eAAe,GAAGlD,wBAAwB,CAAC;AAC/CkC,EAAAA,KAAK,EAAEhC;AADwC,CAAD,CAAhD;;AAIA,MAAMiD,kBAAkB,GAAIC,QAAD,KAAe;AACxCtB,EAAAA,UAAU,EAAGX,WAAD,IAAiBiC,QAAQ,CAACnD,wBAAwB,CAACkB,WAAD,CAAzB;AADG,CAAf,CAA3B;;AAIA,eAAepB,OAAO,CAACmD,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CtC,MAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { UpdateUserInProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { selectCurrentProjectUsers } from \"../../redux/current-project/current-project.selectors\";\r\nimport {AccessForm, FormSelect} from \"./access.styles\";\r\nimport {TeamDivItem, BigCircle, LowerDiv, Overlay, Text, FormButton, FormInverseButton} from \"../team/team.styles\";\r\nimport DropDown from \"../access-dropdown/access-dropdown.component\";\r\n\r\nclass Access extends Component {\r\n    constructor(){\r\n        super()\r\n        console.log(\"access\", this.props)\r\n        this.state = {\r\n            userDetails: [],\r\n            permissions:[\r\n              [\"BILLINGADMIN\", \"Billing Admin\", \"Can lorem ipsum dolor\"],\r\n              [\"ADMIN\", \"Admin\", \"Can lorem ipsum dolor\"],\r\n              [\"AUTHOR\", \"Author\", \"Can lorem ipsum dolor\"],\r\n              [\"CONTRIBUTER\", \"Contributer\", \"Can lorem ipsum dolor\"]\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleOnChange = (Userid, newPermission) => {\r\n        this.state.userDetails.map((user) => {\r\n          console.log(user)\r\n          if (user.id === Userid){\r\n            user.updatedPermission = newPermission;\r\n            console.log(this.state.userDetails)\r\n            return 1;\r\n          }\r\n        })\r\n        const user = {\r\n            id: Userid,\r\n            updatedPermission: newPermission\r\n        }\r\n        this.state.userDetails.push(user)\r\n        //console.log(this.state.userDetails)\r\n    }\r\n \r\n    submit = (e) => {\r\n      e.preventDefault()\r\n      const userDetails = this.state.userDetails\r\n      const {updateUser} = this.props\r\n      console.log(userDetails)\r\n      updateUser(userDetails)\r\n    }\r\n  render() {\r\n    const { users } = this.props;\r\n    return (\r\n    <>\r\n      <AccessForm>\r\n        {users.map((user, index) => {\r\n          console.log(user)\r\n          let unnamed = user.user.email.slice(0,user.user.email.indexOf('@'));\r\n          return (\r\n            <TeamDivItem key={index}>\r\n              <label htmlFor={user.user._id}>\r\n                <div style={{display:\"flex\", flexDirection:\"row\", alignItems: \"center\"}}>\r\n                  <BigCircle>{user.user.firstName?user.user.firstName.charAt(0):unnamed.charAt(0)}</BigCircle>\r\n                  <Text style={{marginLeft:\"1em\"}}>{user.user.firstName?user.user.firstName:unnamed}</Text>\r\n                </div>\r\n              </label>\r\n              \r\n              <DropDown key={index} \r\n                        userID = {user.user._id} \r\n                        options={this.state.permissions} \r\n                        selected={user.permission}\r\n                        onChangePermission = {this.handleOnChange}/> \r\n                {console.log(this.state)}\r\n\r\n            </TeamDivItem>\r\n          );\r\n        })}\r\n      </AccessForm>\r\n      \r\n      <LowerDiv style={{marginBottom:\"7em\"}}>\r\n          <FormButton onClick={this.submit}>Save</FormButton>\r\n          <FormInverseButton onClick={this.props.exit}>Exit</FormInverseButton>\r\n      </LowerDiv>\r\n      \r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  users: selectCurrentProjectUsers,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateUser: (userDetails) => dispatch(UpdateUserInProjectStart(userDetails))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Access);\r\n"]},"metadata":{},"sourceType":"module"}