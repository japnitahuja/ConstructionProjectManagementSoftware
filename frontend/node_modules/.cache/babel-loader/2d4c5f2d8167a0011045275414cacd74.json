{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\task-item\\\\task-item.component.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, Circle, ProgressBar, Progress, ProgressDiv } from \"./task-item.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskItem extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      _id,\n      index,\n      taskName,\n      completionPercentage,\n      completedSteps,\n      totalSteps\n    } = this.props;\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/task/${_id}`,\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(ProjectDiv, {\n        children: [/*#__PURE__*/_jsxDEV(LeftDiv, {\n          children: [/*#__PURE__*/_jsxDEV(SmallText, {\n            children: [\"Task-\", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(BigText, {\n            children: taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ProgressDiv, {\n            children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n              children: /*#__PURE__*/_jsxDEV(Progress, {\n                style: {\n                  width: `${completionPercentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(SmallText, {\n              children: [\" \", completedSteps, \"/\", totalSteps, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RightDiv, {\n          children: [/*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  signUpStart: selectSignUpStart,\n  signUpSuccessful: selectSignUpSuccessful,\n  signUpFail: selectSignUpFail,\n  message: selectSignInSignUpMessage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: data => dispatch(signUpStart(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/task-item/task-item.component.jsx"],"names":["React","Link","ProjectDiv","LeftDiv","RightDiv","BigText","SmallText","Circle","ProgressBar","Progress","ProgressDiv","TaskItem","Component","constructor","props","_id","index","taskName","completionPercentage","completedSteps","totalSteps","state","render","textDecoration","width","mapStateToProps","createStructuredSelector","signUpStart","selectSignUpStart","signUpSuccessful","selectSignUpSuccessful","signUpFail","selectSignUpFail","message","selectSignInSignUpMessage","mapDispatchToProps","dispatch","data","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwCC,OAAxC,EAAiDC,SAAjD,EAA4DC,MAA5D,EAAoEC,WAApE,EAAiFC,QAAjF,EAA2FC,WAA3F,QAA6G,oBAA7G;;;AAEA,MAAMC,QAAN,SAAuBC,SAAvB,CAAgC;AAC5BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,UAAM;AAACC,MAAAA,GAAD;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA,oBAAvB;AAA6CC,MAAAA,cAA7C;AAA6DC,MAAAA;AAA7D,QAA4E,KAAKN,KAAvF;AACA,SAAKO,KAAL,GAAa,EAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,SAAQP,GAAI,EAAvB;AAA0B,MAAA,KAAK,EAAE;AAACQ,QAAAA,cAAc,EAAC;AAAhB,OAAjC;AAAA,6BACI,QAAC,UAAD;AAAA,gCACI,QAAC,OAAD;AAAA,kCACI,QAAC,SAAD;AAAA,gCAAiBP,KAAK,GAAG,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,OAAD;AAAA,sBAAUC;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,WAAD;AAAA,oCACI,QAAC,WAAD;AAAA,qCACI,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAE;AAACO,kBAAAA,KAAK,EAAE,GAAEN,oBAAqB;AAA/B;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,SAAD;AAAA,8BAAaC,cAAb,OAA8BC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI,QAAC,QAAD;AAAA,kCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA,SAAiBL,GAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAmBF;;AA7B0B;;AAgChC,MAAMU,eAAe,GAAGC,wBAAwB,CAAC;AAC7CC,EAAAA,WAAW,EAAEC,iBADgC;AAE7CC,EAAAA,gBAAgB,EAAEC,sBAF2B;AAG7CC,EAAAA,UAAU,EAAEC,gBAHiC;AAI7CC,EAAAA,OAAO,EAAEC;AAJoC,CAAD,CAAhD;;AAOE,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCT,EAAAA,WAAW,EAAGU,IAAD,IAAUD,QAAQ,CAACT,WAAW,CAACU,IAAD,CAAZ;AADS,CAAf,CAA3B;;AAIA,eAAeC,OAAO,CACpBb,eADoB,EAEpBU,kBAFoB,CAAP,CAGbxB,QAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, Circle, ProgressBar, Progress, ProgressDiv} from \"./task-item.styles\";\r\n\r\nclass TaskItem extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        const {_id, index, taskName, completionPercentage, completedSteps, totalSteps,} = this.props;\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    \r\n    render (){\r\n        return (\r\n        <Link to={`/task/${_id}`} style={{textDecoration:'none'}}> \r\n            <ProjectDiv key={_id}>\r\n                <LeftDiv>\r\n                    <SmallText>Task-{index + 1}</SmallText>\r\n                    <BigText>{taskName}</BigText>\r\n                    <ProgressDiv>\r\n                        <ProgressBar>\r\n                            <Progress style={{width:`${completionPercentage}%`}}/>\r\n                        </ProgressBar>\r\n                        <SmallText> {completedSteps}/{totalSteps} </SmallText>\r\n                    </ProgressDiv>\r\n                </LeftDiv>\r\n                <RightDiv>\r\n                    <Circle/>\r\n                    <button>Delete</button>\r\n                </RightDiv>\r\n            </ProjectDiv>\r\n        </Link>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    signUpStart: selectSignUpStart,\r\n    signUpSuccessful: selectSignUpSuccessful,\r\n    signUpFail: selectSignUpFail,\r\n    message: selectSignInSignUpMessage\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    signUpStart: (data) => dispatch(signUpStart(data)),\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TaskItem);\r\n"]},"metadata":{},"sourceType":"module"}