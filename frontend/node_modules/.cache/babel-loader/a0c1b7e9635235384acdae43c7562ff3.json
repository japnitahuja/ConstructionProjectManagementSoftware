{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\project-item\\\\project-item.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { createStructuredSelector } from 'reselect';\nimport { deleteCurrentProjectStart } from '../../redux/current-project/current-project.actions';\nimport { DeleteButton } from '../delete-button/delete-button.styles';\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, UpperDiv, LowerDiv, Image } from \"./project-item.styles\";\nimport checkCircle from '../../assets/check-circle.png';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      projectName: this.props.projectName,\n      totalTasks: this.props.totalTasks,\n      completedTasks: this.props.completedTasks\n    };\n  }\n\n  deleteProject(e) {\n    console.log(\"delete button\", this.state.id);\n    let projectId = this.state.id;\n    this.props.deleteProject(projectId);\n    window.location.reload();\n  }\n\n  render() {\n    const {\n      id,\n      projectName,\n      totalTasks,\n      completedTasks\n    } = this.state;\n    const progress = completedTasks / totalTasks * 100;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/project/${id}`,\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(ProjectDiv, {\n        children: [/*#__PURE__*/_jsxDEV(LeftDiv, {\n          children: [/*#__PURE__*/_jsxDEV(UpperDiv, {\n            children: [/*#__PURE__*/_jsxDEV(BigText, {\n              children: projectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SmallText, {\n              children: \"Total: $1800000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(LowerDiv, {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: checkCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), \"PUBLISHED\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RightDiv, {\n          children: [/*#__PURE__*/_jsxDEV(UpperDiv, {\n            children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n              value: progress,\n              text: `${progress}%`,\n              styles: buildStyles({\n                width: '10em',\n                height: '10em',\n                pathColor: `rgba(62, 152, 199, ${percentage / 100})`,\n                textColor: '#f88',\n                trailColor: '#d6d6d6',\n                backgroundColor: '#3e98c7'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LowerDiv, {\n            children: [completedTasks, \"/\", totalTasks, /*#__PURE__*/_jsxDEV(DeleteButton, {\n              onClick: e => this.deleteProject(e),\n              children: \"DELETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteProject: projectId => dispatch(deleteCurrentProjectStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectItem);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/project-item/project-item.component.jsx"],"names":["React","Component","connect","Link","createStructuredSelector","deleteCurrentProjectStart","DeleteButton","ProjectDiv","LeftDiv","RightDiv","BigText","SmallText","UpperDiv","LowerDiv","Image","checkCircle","CircularProgressbar","ProjectItem","constructor","props","state","id","projectName","totalTasks","completedTasks","deleteProject","e","console","log","projectId","window","location","reload","render","progress","textDecoration","buildStyles","width","height","pathColor","percentage","textColor","trailColor","backgroundColor","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { deleteCurrentProjectStart } from '../../redux/current-project/current-project.actions';\r\nimport { DeleteButton } from '../delete-button/delete-button.styles';\r\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, UpperDiv, LowerDiv, Image} from \"./project-item.styles\";\r\nimport checkCircle from '../../assets/check-circle.png';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nclass ProjectItem extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.id,\r\n            projectName: this.props.projectName,\r\n            totalTasks: this.props.totalTasks,\r\n            completedTasks: this.props.completedTasks\r\n        }\r\n    }\r\n    deleteProject(e){\r\n        console.log(\"delete button\", this.state.id);\r\n        let projectId = this.state.id\r\n        this.props.deleteProject(projectId);\r\n        window.location.reload()\r\n    }\r\n    render() {\r\n        const {id, projectName, totalTasks, completedTasks} = this.state;\r\n        const progress = completedTasks/totalTasks*100;\r\n        return (\r\n            <Link to={`/project/${id}`} style={{textDecoration:'none'}}>\r\n                <ProjectDiv key={id}>\r\n                    <LeftDiv>\r\n                            <UpperDiv>\r\n                                <BigText>{projectName}</BigText>\r\n                                <SmallText>Total: $1800000</SmallText>\r\n                            </UpperDiv>\r\n                            <LowerDiv>\r\n                                <Image src = {checkCircle}/>\r\n                                PUBLISHED\r\n                            </LowerDiv>\r\n                    </LeftDiv>\r\n                    \r\n                    <RightDiv>\r\n                        <UpperDiv>\r\n                            <CircularProgressbar value={progress} text={`${progress}%`} \r\n                            styles={buildStyles({width: '10em', \r\n                                                height: '10em',\r\n                                                pathColor: `rgba(62, 152, 199, ${percentage / 100})`,\r\n                                                textColor: '#f88',\r\n                                                trailColor: '#d6d6d6',\r\n                                                backgroundColor: '#3e98c7',})}/>\r\n                        </UpperDiv>\r\n                        <LowerDiv>\r\n                            {completedTasks}/{totalTasks}\r\n\r\n                            <DeleteButton onClick={(e)=>this.deleteProject(e)}>DELETE</DeleteButton>\r\n                            \r\n                        </LowerDiv>\r\n                    </RightDiv>\r\n                </ProjectDiv>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteProject: (projectId) => dispatch(deleteCurrentProjectStart(projectId))\r\n  });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectItem)\r\n\r\n"]},"metadata":{},"sourceType":"module"}