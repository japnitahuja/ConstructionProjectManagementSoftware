{"ast":null,"code":"import faker from 'faker';\nimport randomColor from 'randomcolor';\nimport moment from 'moment';\nexport default function (groupCount = 30, itemCount = 1000, daysInPast = 30) {\n  let randomSeed = Math.floor(Math.random() * 1000);\n  let groups = [];\n\n  for (let i = 0; i < groupCount; i++) {\n    groups.push({\n      id: `${i + 1}`,\n      title: faker.name.firstName(),\n      rightTitle: faker.name.lastName(),\n      bgColor: randomColor({\n        luminosity: 'light',\n        seed: randomSeed + i\n      })\n    });\n  }\n\n  let items = [];\n\n  for (let i = 0; i < itemCount; i++) {\n    const startDate = faker.date.recent(daysInPast).valueOf() + daysInPast * 0.3 * 86400 * 1000;\n    const startValue = Math.floor(moment(startDate).valueOf() / 10000000) * 10000000;\n    const endValue = moment(startDate + faker.random.number({\n      min: 2,\n      max: 20\n    }) * 15 * 60 * 1000).valueOf();\n    items.push({\n      id: i + '',\n      group: faker.random.number({\n        min: 1,\n        max: groups.length\n      }) + '',\n      title: faker.hacker.phrase(),\n      start: startValue,\n      end: endValue,\n      // canMove: startValue > new Date().getTime(),\n      // canResize: startValue > new Date().getTime() ? (endValue > new Date().getTime() ? 'both' : 'left') : (endValue > new Date().getTime() ? 'right' : false),\n      className: moment(startDate).day() === 6 || moment(startDate).day() === 0 ? 'item-weekend' : '',\n      itemProps: {\n        'data-tip': faker.hacker.phrase()\n      }\n    });\n  }\n\n  items = items.sort((a, b) => b - a);\n  return {\n    groups,\n    items\n  };\n}","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/components/schedule/generate-fake-data.js"],"names":["faker","randomColor","moment","groupCount","itemCount","daysInPast","randomSeed","Math","floor","random","groups","i","push","id","title","name","firstName","rightTitle","lastName","bgColor","luminosity","seed","items","startDate","date","recent","valueOf","startValue","endValue","number","min","max","group","length","hacker","phrase","start","end","className","day","itemProps","sort","a","b"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,UAAUC,UAAU,GAAG,EAAvB,EAA2BC,SAAS,GAAG,IAAvC,EAA6CC,UAAU,GAAG,EAA1D,EAA8D;AAC3E,MAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAjB;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAApB,EAAgCQ,CAAC,EAAjC,EAAqC;AACnCD,IAAAA,MAAM,CAACE,IAAP,CAAY;AACVC,MAAAA,EAAE,EAAG,GAAEF,CAAC,GAAG,CAAE,EADH;AAEVG,MAAAA,KAAK,EAAEd,KAAK,CAACe,IAAN,CAAWC,SAAX,EAFG;AAGVC,MAAAA,UAAU,EAAEjB,KAAK,CAACe,IAAN,CAAWG,QAAX,EAHF;AAIVC,MAAAA,OAAO,EAAElB,WAAW,CAAC;AAAEmB,QAAAA,UAAU,EAAE,OAAd;AAAuBC,QAAAA,IAAI,EAAEf,UAAU,GAAGK;AAA1C,OAAD;AAJV,KAAZ;AAMD;;AAED,MAAIW,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,SAApB,EAA+BO,CAAC,EAAhC,EAAoC;AAClC,UAAMY,SAAS,GAAGvB,KAAK,CAACwB,IAAN,CAAWC,MAAX,CAAkBpB,UAAlB,EAA8BqB,OAA9B,KAA2CrB,UAAU,GAAG,GAAd,GAAqB,KAArB,GAA6B,IAAzF;AACA,UAAMsB,UAAU,GAAGpB,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACqB,SAAD,CAAN,CAAkBG,OAAlB,KAA8B,QAAzC,IAAqD,QAAxE;AACA,UAAME,QAAQ,GAAG1B,MAAM,CAACqB,SAAS,GAAGvB,KAAK,CAACS,MAAN,CAAaoB,MAAb,CAAoB;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE;AAAf,KAApB,IAA2C,EAA3C,GAAgD,EAAhD,GAAqD,IAAlE,CAAN,CAA8EL,OAA9E,EAAjB;AAEAJ,IAAAA,KAAK,CAACV,IAAN,CAAW;AACTC,MAAAA,EAAE,EAAEF,CAAC,GAAG,EADC;AAETqB,MAAAA,KAAK,EAAEhC,KAAK,CAACS,MAAN,CAAaoB,MAAb,CAAoB;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAErB,MAAM,CAACuB;AAAtB,OAApB,IAAsD,EAFpD;AAGTnB,MAAAA,KAAK,EAAEd,KAAK,CAACkC,MAAN,CAAaC,MAAb,EAHE;AAITC,MAAAA,KAAK,EAAET,UAJE;AAKTU,MAAAA,GAAG,EAAET,QALI;AAMT;AACA;AACAU,MAAAA,SAAS,EAAGpC,MAAM,CAACqB,SAAD,CAAN,CAAkBgB,GAAlB,OAA4B,CAA5B,IAAiCrC,MAAM,CAACqB,SAAD,CAAN,CAAkBgB,GAAlB,OAA4B,CAA9D,GAAmE,cAAnE,GAAoF,EARtF;AASTC,MAAAA,SAAS,EAAE;AACT,oBAAYxC,KAAK,CAACkC,MAAN,CAAaC,MAAb;AADH;AATF,KAAX;AAaD;;AAEDb,EAAAA,KAAK,GAAGA,KAAK,CAACmB,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAGD,CAAzB,CAAR;AAEA,SAAO;AAAEhC,IAAAA,MAAF;AAAUY,IAAAA;AAAV,GAAP;AACD","sourcesContent":["import faker from 'faker'\r\nimport randomColor from 'randomcolor'\r\nimport moment from 'moment'\r\n\r\nexport default function (groupCount = 30, itemCount = 1000, daysInPast = 30) {\r\n  let randomSeed = Math.floor(Math.random() * 1000)\r\n  let groups = []\r\n  for (let i = 0; i < groupCount; i++) {\r\n    groups.push({\r\n      id: `${i + 1}`,\r\n      title: faker.name.firstName(),\r\n      rightTitle: faker.name.lastName(),\r\n      bgColor: randomColor({ luminosity: 'light', seed: randomSeed + i })\r\n    })\r\n  }\r\n\r\n  let items = []\r\n  for (let i = 0; i < itemCount; i++) {\r\n    const startDate = faker.date.recent(daysInPast).valueOf() + (daysInPast * 0.3) * 86400 * 1000\r\n    const startValue = Math.floor(moment(startDate).valueOf() / 10000000) * 10000000\r\n    const endValue = moment(startDate + faker.random.number({ min: 2, max: 20 }) * 15 * 60 * 1000).valueOf()\r\n\r\n    items.push({\r\n      id: i + '',\r\n      group: faker.random.number({ min: 1, max: groups.length }) + '',\r\n      title: faker.hacker.phrase(),\r\n      start: startValue,\r\n      end: endValue,\r\n      // canMove: startValue > new Date().getTime(),\r\n      // canResize: startValue > new Date().getTime() ? (endValue > new Date().getTime() ? 'both' : 'left') : (endValue > new Date().getTime() ? 'right' : false),\r\n      className: (moment(startDate).day() === 6 || moment(startDate).day() === 0) ? 'item-weekend' : '',\r\n      itemProps: {\r\n        'data-tip': faker.hacker.phrase()\r\n      }\r\n    })\r\n  }\r\n\r\n  items = items.sort((a, b) => b - a)\r\n\r\n  return { groups, items }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}