{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\task\\\\task.page.js\";\nimport React, { Component } from 'react';\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { fetchStepsStart } from '../../redux/all-steps/all-steps.actions';\nimport CreateStepForm from '../../components/create-step-form/create-step-form.component';\nimport { selectUserSteps } from '../../redux/all-steps/all-steps.selector';\nimport StepList from '../../components/steps-list/steps-list.component';\nimport CreatePurchaseOrderForm from '../../components/create-purchase-order/create-purchase-order.component';\nimport { completeCurrentTaskStart, fetchCurrentTaskStart } from '../../redux/current-task/current-task.actions';\nimport { selectCurrentTaskCompletionMessage, selectCurrentTaskIsDone, selectCurrentTaskName, selectCurrentTaskSteps } from '../../redux/current-task/current-task.selectors';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Task extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.completeTask = () => {\n      const taskId = this.props.match.params.taskId;\n      this.props.completeTask(taskId);\n    };\n  }\n\n  componentDidMount() {\n    const taskId = this.props.match.params.taskId;\n    this.props.fetchSteps(taskId);\n    console.log(taskId);\n  }\n\n  render() {\n    const {\n      steps,\n      taskName,\n      isTaskDone,\n      taskCompletionMessage\n    } = this.props;\n    console.log('task page');\n    console.log(steps);\n    const taskId = this.props.match.params.taskId;\n    console.log(taskId);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/purchaseOrders/${taskId}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"PURCHASE ORDERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: taskCompletionMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }, this), isTaskDone ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"TASK IS DONE!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.completeTask,\n        children: \"COMPLETE TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" All STEPS \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StepList, {\n        steps: steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateStepForm, {\n        taskId: this.props.match.params.taskId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  steps: selectCurrentTaskSteps,\n  taskName: selectCurrentTaskName,\n  isTaskDone: selectCurrentTaskIsDone,\n  taskCompletionMessage: selectCurrentTaskCompletionMessage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSteps: taskId => dispatch(fetchCurrentTaskStart(taskId)),\n  completeTask: taskId => dispatch(completeCurrentTaskStart(taskId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/task/task.page.js"],"names":["React","Component","createStructuredSelector","connect","fetchStepsStart","CreateStepForm","selectUserSteps","StepList","CreatePurchaseOrderForm","completeCurrentTaskStart","fetchCurrentTaskStart","selectCurrentTaskCompletionMessage","selectCurrentTaskIsDone","selectCurrentTaskName","selectCurrentTaskSteps","Link","Task","completeTask","taskId","props","match","params","componentDidMount","fetchSteps","console","log","render","steps","taskName","isTaskDone","taskCompletionMessage","margin","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport {fetchStepsStart} from '../../redux/all-steps/all-steps.actions'\r\nimport CreateStepForm from '../../components/create-step-form/create-step-form.component';\r\nimport { selectUserSteps } from '../../redux/all-steps/all-steps.selector';\r\nimport StepList from '../../components/steps-list/steps-list.component'\r\nimport CreatePurchaseOrderForm from '../../components/create-purchase-order/create-purchase-order.component'\r\nimport { completeCurrentTaskStart, fetchCurrentTaskStart } from '../../redux/current-task/current-task.actions';\r\nimport { selectCurrentTaskCompletionMessage, selectCurrentTaskIsDone, selectCurrentTaskName, selectCurrentTaskSteps } from '../../redux/current-task/current-task.selectors';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Task extends Component {\r\n    componentDidMount(){\r\n        const taskId = this.props.match.params.taskId\r\n       this.props.fetchSteps(taskId)\r\n       console.log(taskId)\r\n    }\r\n    \r\n    completeTask = () => {\r\n        const taskId = this.props.match.params.taskId\r\n        this.props.completeTask(taskId)\r\n    }\r\n\r\n    render() {\r\n        const {steps, taskName, isTaskDone, taskCompletionMessage} = this.props;\r\n        console.log('task page')\r\n        console.log(steps)\r\n        const taskId = this.props.match.params.taskId\r\n        console.log(taskId)\r\n        return (\r\n             <div style={{margin:\"10px\"}}>\r\n                 <h1>{taskName}</h1>\r\n                 <Link to={`/purchaseOrders/${taskId}`}><button>PURCHASE ORDERS</button></Link>\r\n                 <h3>{taskCompletionMessage}</h3>\r\n                 {\r\n                     isTaskDone ? <div>TASK IS DONE!</div> : <button onClick={this.completeTask}>COMPLETE TASK</button> \r\n                 }\r\n\r\n                <h2> All STEPS </h2>\r\n                {/* <TaskList tasks = {tasks}/> */}\r\n                <StepList steps = {steps} />\r\n                <CreateStepForm taskId = {this.props.match.params.taskId} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    steps: selectCurrentTaskSteps,\r\n    taskName: selectCurrentTaskName,\r\n    isTaskDone: selectCurrentTaskIsDone,\r\n    taskCompletionMessage: selectCurrentTaskCompletionMessage,\r\n    \r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    fetchSteps : (taskId) => dispatch(fetchCurrentTaskStart(taskId)),\r\n    completeTask: (taskId) => dispatch(completeCurrentTaskStart(taskId))\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Task);"]},"metadata":{},"sourceType":"module"}