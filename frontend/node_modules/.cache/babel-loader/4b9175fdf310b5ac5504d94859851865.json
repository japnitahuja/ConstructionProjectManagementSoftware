{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\task-item\\\\task-item.component.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, Circle, ProgressBar, Progress, ProgressDiv } from \"./task-item.styles\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { deleteCurrentTaskStart } from \"../../redux/current-task/current-task.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskDetails: this.props.taskDetails\n    };\n  }\n\n  deleteTask(e) {\n    this.props.deleteTask(this.state.taskDetails._id);\n  }\n\n  render() {\n    const {\n      _id,\n      index,\n      taskName,\n      completionPercentage,\n      completedSteps,\n      totalSteps\n    } = this.state.taskDetails;\n    return /*#__PURE__*/_jsxDEV(ProjectDiv, {\n      children: [/*#__PURE__*/_jsxDEV(LeftDiv, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/task/${_id}`,\n          style: {\n            textDecoration: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(SmallText, {\n            children: [\"Task-\", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(BigText, {\n            children: taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ProgressDiv, {\n            children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n              children: /*#__PURE__*/_jsxDEV(Progress, {\n                style: {\n                  width: `${completionPercentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(SmallText, {\n              children: [\" \", completedSteps, \"/\", totalSteps, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RightDiv, {\n        children: [/*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => this.deleteTask(e),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, _id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTask: taskId => dispatch(deleteCurrentTaskStart(taskId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/task-item/task-item.component.jsx"],"names":["React","Component","Link","ProjectDiv","LeftDiv","RightDiv","BigText","SmallText","Circle","ProgressBar","Progress","ProgressDiv","connect","createStructuredSelector","deleteCurrentTaskStart","TaskItem","constructor","props","state","taskDetails","deleteTask","e","_id","render","index","taskName","completionPercentage","completedSteps","totalSteps","textDecoration","width","mapStateToProps","mapDispatchToProps","dispatch","taskId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwCC,OAAxC,EAAiDC,SAAjD,EAA4DC,MAA5D,EAAoEC,WAApE,EAAiFC,QAAjF,EAA2FC,WAA3F,QAA6G,oBAA7G;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,sBAAT,QAAuC,+CAAvC;;;AAEA,MAAMC,QAAN,SAAuBd,SAAvB,CAAgC;AAC5Be,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AADf,KAAb;AAGH;;AAEDC,EAAAA,UAAU,CAACC,CAAD,EAAG;AACT,SAAKJ,KAAL,CAAWG,UAAX,CAAsB,KAAKF,KAAL,CAAWC,WAAX,CAAuBG,GAA7C;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACD,MAAAA,GAAD;AAAME,MAAAA,KAAN;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA,oBAAvB;AAA6CC,MAAAA,cAA7C;AAA6DC,MAAAA;AAA7D,QAA2E,KAAKV,KAAL,CAAWC,WAA5F;AACA,wBACI,QAAC,UAAD;AAAA,8BACI,QAAC,OAAD;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAQG,GAAI,EAAvB;AAA0B,UAAA,KAAK,EAAE;AAACO,YAAAA,cAAc,EAAC;AAAhB,WAAjC;AAAA,kCACI,QAAC,SAAD;AAAA,gCAAiBL,KAAK,GAAG,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,OAAD;AAAA,sBAAUC;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,WAAD;AAAA,oCACI,QAAC,WAAD;AAAA,qCACI,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAE;AAACK,kBAAAA,KAAK,EAAE,GAAEJ,oBAAqB;AAA/B;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,SAAD;AAAA,8BAAaC,cAAb,OAA8BC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI,QAAC,QAAD;AAAA,gCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAGP,CAAD,IAAK,KAAKD,UAAL,CAAgBC,CAAhB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA,OAAiBC,GAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBF;;AApC0B;;AAuChC,MAAMS,eAAe,GAAGlB,wBAAwB,CAAC,EAAD,CAAhD;;AAIE,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,UAAU,EAAIc,MAAD,IAAYD,QAAQ,CAACnB,sBAAsB,CAACoB,MAAD,CAAvB;AADO,CAAf,CAA3B;;AAIA,eAAetB,OAAO,CACpBmB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbjB,QAHa,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, Circle, ProgressBar, Progress, ProgressDiv} from \"./task-item.styles\";\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { deleteCurrentTaskStart } from \"../../redux/current-task/current-task.actions\";\r\n\r\nclass TaskItem extends Component{\r\n    constructor(props){\r\n        super(props);\r\n      \r\n        this.state = {\r\n            taskDetails: this.props.taskDetails\r\n        };\r\n    }\r\n\r\n    deleteTask(e){\r\n        this.props.deleteTask(this.state.taskDetails._id)\r\n    }\r\n    \r\n    render (){\r\n        const {_id, index, taskName, completionPercentage, completedSteps, totalSteps} = this.state.taskDetails;\r\n        return (\r\n            <ProjectDiv key={_id}>\r\n                <LeftDiv>\r\n                <Link to={`/task/${_id}`} style={{textDecoration:'none'}}> \r\n                    <SmallText>Task-{index + 1}</SmallText>\r\n                    <BigText>{taskName}</BigText>\r\n                    <ProgressDiv>\r\n                        <ProgressBar>\r\n                            <Progress style={{width:`${completionPercentage}%`}}/>\r\n                        </ProgressBar>\r\n                        <SmallText> {completedSteps}/{totalSteps} </SmallText>\r\n                    </ProgressDiv>\r\n                    </Link>\r\n                </LeftDiv>\r\n                \r\n                <RightDiv>\r\n                    <Circle/>\r\n                    <button onClick={(e)=>this.deleteTask(e)}>Delete</button>\r\n                </RightDiv>\r\n            </ProjectDiv>\r\n        \r\n    )}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    \r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    deleteTask : (taskId) => dispatch(deleteCurrentTaskStart(taskId))\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TaskItem);\r\n"]},"metadata":{},"sourceType":"module"}