{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\project\\\\project.page.js\";\nimport React, { Component } from 'react';\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport CreateTaskForm from '../../components/create-task-form/create-task-form.component';\nimport { fetchCurrentProjectStart } from '../../redux/current-project/current-project.actions';\nimport { selectCurrentProjectName, selectCurrentProjectStatus, selectCurrentProjectTasks } from '../../redux/current-project/current-project.selectors';\nimport { TaskNav } from \"../../components/task-nav/task-nav.component\";\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\nimport TaskListContainer from '../../components/tasks-list/tasks-list.container';\nimport SearchBar from '../../components/search-bar/search-bar.component';\nimport AdminPanelTaskPage from '../../components/admin-panel-task-page/admin-panel-task-page.component';\nimport ManageTeam from '../../components/manage-team/manage-team.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Project extends Component {\n  componentDidMount() {\n    const projectId = this.props.match.params.projectId;\n    this.props.fetchProjects(projectId);\n  }\n\n  render() {\n    const {\n      tasks,\n      projectName\n    } = this.props;\n    console.log('project page');\n    console.log(tasks);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"5em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TaskNav, {\n        title: projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AdminPanelTaskPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        placeholder: \"Search Tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskListContainer, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        projectId: this.props.match.params.projectId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LowerNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  projectName: selectCurrentProjectName,\n  projectStatus: selectCurrentProjectStatus,\n  tasks: selectCurrentProjectTasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProjects: projectId => dispatch(fetchCurrentProjectStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/project/project.page.js"],"names":["React","Component","createStructuredSelector","connect","CreateTaskForm","fetchCurrentProjectStart","selectCurrentProjectName","selectCurrentProjectStatus","selectCurrentProjectTasks","TaskNav","LowerNavBar","TaskListContainer","SearchBar","AdminPanelTaskPage","ManageTeam","Project","componentDidMount","projectId","props","match","params","fetchProjects","render","tasks","projectName","console","log","marginBottom","mapStateToProps","projectStatus","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,8DAA3B;AACA,SAASC,wBAAT,QAAyC,qDAAzC;AACA,SAASC,wBAAT,EAAmCC,0BAAnC,EAA+DC,yBAA/D,QAAgG,uDAAhG;AACA,SAAQC,OAAR,QAAsB,8CAAtB;AACA,OAAOC,WAAP,MAAwB,wDAAxB;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,kBAAP,MAA+B,wEAA/B;AACA,OAAOC,UAAP,MAAuB,oDAAvB;;;AAEA,MAAMC,OAAN,SAAsBd,SAAtB,CAAgC;AAC5Be,EAAAA,iBAAiB,GAAE;AACf,UAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,SAA1C;AACA,SAAKC,KAAL,CAAWG,aAAX,CAAyBJ,SAAzB;AACH;;AAIDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAuB,KAAKN,KAAlC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,wBACK;AAAK,MAAA,KAAK,EAAE;AAACI,QAAAA,YAAY,EAAC;AAAd,OAAZ;AAAA,8BACG,QAAC,OAAD;AAAS,QAAA,KAAK,EAAIH;AAAlB;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHH,eAIG,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAID;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJH,eAKG,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAI,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH;AAArD;AAAA;AAAA;AAAA;AAAA,cALH,eAMG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cANH;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAWH;;AAxB2B;;AA2BhC,MAAMW,eAAe,GAAG1B,wBAAwB,CAAC;AAC7CsB,EAAAA,WAAW,EAAElB,wBADgC;AAE7CuB,EAAAA,aAAa,EAAEtB,0BAF8B;AAG7CgB,EAAAA,KAAK,EAAEf;AAHsC,CAAD,CAAhD;;AAMA,MAAMsB,kBAAkB,GAAIC,QAAD,KAAe;AACtCV,EAAAA,aAAa,EAAIJ,SAAD,IAAec,QAAQ,CAAC1B,wBAAwB,CAACY,SAAD,CAAzB;AADD,CAAf,CAA3B;;AAIE,eAAed,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport CreateTaskForm from '../../components/create-task-form/create-task-form.component';\r\nimport { fetchCurrentProjectStart } from '../../redux/current-project/current-project.actions';\r\nimport { selectCurrentProjectName, selectCurrentProjectStatus, selectCurrentProjectTasks } from '../../redux/current-project/current-project.selectors';\r\nimport {TaskNav} from \"../../components/task-nav/task-nav.component\"\r\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\r\nimport TaskListContainer from '../../components/tasks-list/tasks-list.container';\r\nimport SearchBar from '../../components/search-bar/search-bar.component';\r\nimport AdminPanelTaskPage from '../../components/admin-panel-task-page/admin-panel-task-page.component';\r\nimport ManageTeam from '../../components/manage-team/manage-team.component';\r\n\r\nclass Project extends Component {\r\n    componentDidMount(){\r\n        const projectId = this.props.match.params.projectId;\r\n        this.props.fetchProjects(projectId);\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        const {tasks, projectName} = this.props;\r\n        console.log('project page')\r\n        console.log(tasks)\r\n        \r\n        return (\r\n             <div style={{marginBottom:\"5em\"}}>\r\n                <TaskNav title = {projectName}/>\r\n                <AdminPanelTaskPage />\r\n                <SearchBar placeholder='Search Tasks...' />\r\n                <TaskListContainer tasks = {tasks}/>\r\n                <CreateTaskForm projectId = {this.props.match.params.projectId}/>\r\n                <LowerNavBar  />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    projectName: selectCurrentProjectName,\r\n    projectStatus: selectCurrentProjectStatus,\r\n    tasks: selectCurrentProjectTasks\r\n});\r\n  \r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchProjects : (projectId) => dispatch(fetchCurrentProjectStart(projectId))\r\n});\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Project);"]},"metadata":{},"sourceType":"module"}