{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\task-change-orders\\\\task-change-orders.page.js\";\nimport React, { Component } from 'react';\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { fetchStepsStart } from '../../redux/all-steps/all-steps.actions';\nimport CreateStepForm from '../../components/create-step-form/create-step-form.component';\nimport { selectUserSteps } from '../../redux/all-steps/all-steps.selector';\nimport StepList from '../../components/steps-list/steps-list.component';\nimport PurchaseOrderList from '../../components/purchase-orders-list/purchase-orders-list.component';\nimport { selectCurrentTaskChangeOrders, selectCurrentTaskPurchaseOrders } from '../../redux/current-task/current-task.selectors';\nimport { fetchCurrentPurchaseOrderStart } from '../../redux/current-purchase-order/current-purchase-order.actions';\nimport { fetchCurrentTaskStart } from '../../redux/current-task/current-task.actions';\nimport { selectCurrentProjectName } from '../../redux/current-project/current-project.selectors';\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\nimport CreateChangeOrderForm from '../../components/create-change-order-form/create-change-order-form';\nimport ChangeOrderList from '../../components/change-orders-list/change-orders-list.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChangeOrder extends Component {\n  componentDidMount() {\n    const taskId = this.props.match.params.taskId;\n    this.props.fetchTask(taskId);\n    console.log(taskId);\n  }\n\n  render() {\n    const {\n      changeOrders,\n      projectName\n    } = this.props;\n    console.log('task page');\n    console.log(changeOrders);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TaskNav, {\n        title: projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChangeOrderList, {\n        changeOrders: changeOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateChangeOrderForm, {\n        taskId: this.props.match.params.taskId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  projectName: selectCurrentProjectName,\n  changeOrders: selectCurrentTaskChangeOrders\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSteps: taskId => dispatch(fetchStepsStart(taskId)),\n  fetchTask: taskId => dispatch(fetchCurrentTaskStart(taskId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeOrder);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/task-change-orders/task-change-orders.page.js"],"names":["React","Component","createStructuredSelector","connect","fetchStepsStart","CreateStepForm","selectUserSteps","StepList","PurchaseOrderList","selectCurrentTaskChangeOrders","selectCurrentTaskPurchaseOrders","fetchCurrentPurchaseOrderStart","fetchCurrentTaskStart","selectCurrentProjectName","TaskNav","CreateChangeOrderForm","ChangeOrderList","ChangeOrder","componentDidMount","taskId","props","match","params","fetchTask","console","log","render","changeOrders","projectName","mapStateToProps","mapDispatchToProps","dispatch","fetchSteps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,eAAR,QAA8B,yCAA9B;AACA,OAAOC,cAAP,MAA2B,8DAA3B;AACA,SAASC,eAAT,QAAgC,0CAAhC;AACA,OAAOC,QAAP,MAAqB,kDAArB;AAEA,OAAOC,iBAAP,MAA8B,sEAA9B;AACA,SAASC,6BAAT,EAAwCC,+BAAxC,QAA+E,iDAA/E;AACA,SAASC,8BAAT,QAA+C,mEAA/C;AACA,SAASC,qBAAT,QAAsC,+CAAtC;AACA,SAASC,wBAAT,QAAyC,uDAAzC;AACA,SAASC,OAAT,QAAwB,8CAAxB;AACA,OAAOC,qBAAP,MAAkC,oEAAlC;AACA,OAAOC,eAAP,MAA4B,kEAA5B;;;AACA,MAAMC,WAAN,SAA0BhB,SAA1B,CAAoC;AAChCiB,EAAAA,iBAAiB,GAAE;AACf,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAvC;AACD,SAAKC,KAAL,CAAWG,SAAX,CAAqBJ,MAArB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACF;;AAEDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,YAAD;AAAeC,MAAAA;AAAf,QAA8B,KAAKR,KAAzC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AAEA,wBACK;AAAA,8BACG,QAAC,OAAD;AAAS,QAAA,KAAK,EAAIC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,eAAD;AAAiB,QAAA,YAAY,EAAID;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG,QAAC,qBAAD;AAAuB,QAAA,MAAM,EAAI,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH;AAAzD;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAOH;;AAnB+B;;AAsBpC,MAAMU,eAAe,GAAG3B,wBAAwB,CAAC;AAC7C0B,EAAAA,WAAW,EAAEf,wBADgC;AAE7Cc,EAAAA,YAAY,EAAElB;AAF+B,CAAD,CAAhD;;AAKE,MAAMqB,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,UAAU,EAAIb,MAAD,IAAYY,QAAQ,CAAC3B,eAAe,CAACe,MAAD,CAAhB,CADO;AAExCI,EAAAA,SAAS,EAAGJ,MAAD,IAAYY,QAAQ,CAACnB,qBAAqB,CAACO,MAAD,CAAtB;AAFS,CAAf,CAA3B;;AAKA,eAAehB,OAAO,CAAC0B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cb,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport {fetchStepsStart} from '../../redux/all-steps/all-steps.actions'\r\nimport CreateStepForm from '../../components/create-step-form/create-step-form.component';\r\nimport { selectUserSteps } from '../../redux/all-steps/all-steps.selector';\r\nimport StepList from '../../components/steps-list/steps-list.component'\r\n\r\nimport PurchaseOrderList from '../../components/purchase-orders-list/purchase-orders-list.component'\r\nimport { selectCurrentTaskChangeOrders, selectCurrentTaskPurchaseOrders } from '../../redux/current-task/current-task.selectors';\r\nimport { fetchCurrentPurchaseOrderStart } from '../../redux/current-purchase-order/current-purchase-order.actions';\r\nimport { fetchCurrentTaskStart } from '../../redux/current-task/current-task.actions';\r\nimport { selectCurrentProjectName } from '../../redux/current-project/current-project.selectors';\r\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\r\nimport CreateChangeOrderForm from '../../components/create-change-order-form/create-change-order-form';\r\nimport ChangeOrderList from '../../components/change-orders-list/change-orders-list.component';\r\nclass ChangeOrder extends Component {\r\n    componentDidMount(){\r\n        const taskId = this.props.match.params.taskId\r\n       this.props.fetchTask(taskId)\r\n       console.log(taskId)\r\n    }\r\n    \r\n    render() {\r\n        const {changeOrders, projectName} = this.props;\r\n        console.log('task page')\r\n        console.log(changeOrders)\r\n        \r\n        return (\r\n             <div>\r\n                <TaskNav title = {projectName}/>\r\n                <ChangeOrderList changeOrders = {changeOrders} />\r\n                <CreateChangeOrderForm taskId = {this.props.match.params.taskId} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    projectName: selectCurrentProjectName,\r\n    changeOrders: selectCurrentTaskChangeOrders\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    fetchSteps : (taskId) => dispatch(fetchStepsStart(taskId)),\r\n    fetchTask: (taskId) => dispatch(fetchCurrentTaskStart(taskId))\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ChangeOrder);"]},"metadata":{},"sourceType":"module"}