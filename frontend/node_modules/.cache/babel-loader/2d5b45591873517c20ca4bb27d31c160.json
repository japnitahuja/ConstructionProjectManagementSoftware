{"ast":null,"code":"import { CurrentProjectActionTypes } from \"./current-project.types\";\nconst INITIAL_STATE = {\n  isCurrentProjectFetching: false,\n  currentProjectId: null,\n  currentProjectName: null,\n  currentProjectStatus: null,\n  currentProjectPurchaseOrders: null,\n  currentProjectChangeOrders: null,\n  currentProjectTasks: null,\n  currentProjectMessage: null,\n  currentProjectRoles: null,\n  currentProjectUsers: null,\n  currentProjectType: null,\n  currentPropertyType: null,\n  currentProjectOwner: null,\n  errorMessage: null,\n  isCurrentProjectDeleting: false,\n  deletionMessage: null,\n  deletionError: null,\n  inviteUserStart: false,\n  inviteUserMessage: null,\n  updateUserInProjectStart: null,\n  updateUserInProjectMessage: null\n};\n\nconst currentProjectReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START:\n      return { ...state,\n        isCurrentProjectFetching: true\n      };\n\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_SUCCESS:\n      const {\n        tasks,\n        purchaseOrders,\n        _id,\n        projectName,\n        projectStatus,\n        changeOrders,\n        projectOwner,\n        projectType,\n        propertyType,\n        projectRoles,\n        Users\n      } = action.payload;\n      return { ...state,\n        isCurrentProjectFetching: false,\n        currentProjectStatus: projectStatus,\n        currentProjectName: projectName,\n        currentProjectTasks: tasks,\n        currentProjectPurchaseOrders: purchaseOrders,\n        currentProjectChangeOrders: changeOrders,\n        currentProjectId: _id,\n        currentProjectType: projectType,\n        currentProjectOwner: projectOwner,\n        currentPropertyType: propertyType,\n        currentProjectRoles: projectRoles,\n        currentProjectUsers: Users,\n        currentProjectMessage: \"PROJECT FETCHED!\"\n      };\n\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_FAILURE:\n      return { ...state,\n        isCurrentProjectFetching: false,\n        errorMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_TASK_IN_REDUCER:\n      console.log(state);\n      let updatedTasks = state.currentProjectTasks.filter(task => task._id != action.payload);\n      console.log(\"current project reducer\", updatedTasks);\n      console.log(action.payload);\n      return { ...state,\n        currentProjectTasks: updatedTasks\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_START:\n      return {\n        isCurrentProjectDeleting: true\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_SUCCESS:\n      return {\n        isCurrentProjectDeleting: false,\n        deletionMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_FAILURE:\n      return {\n        isCurrentProjectDeleting: false,\n        deletionError: action.payload\n      };\n\n    case CurrentProjectActionTypes.INVITE_USER_START:\n      return { ...state,\n        inviteUserStart: true,\n        inviteUserMessage: null\n      };\n\n    case CurrentProjectActionTypes.INVITE_USER_SUCCESS:\n      return { ...state,\n        inviteUserStart: false,\n        inviteUserMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.INVITE_USER_FAILURE:\n      return { ...state,\n        inviteUserStart: false,\n        inviteUserMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_START:\n      return { ...state,\n        updateUserInProjectStart: true,\n        updateUserInProjectMessage: null\n      };\n\n    case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_SUCCESS:\n      return { ...state,\n        updateUserInProjectStart: false,\n        updateUserInProjectMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_FAILURE:\n      return { ...state,\n        updateUserInProjectStart: false,\n        updateUserInProjectMessage: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default currentProjectReducer;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/current-project/current-project.reducer.js"],"names":["CurrentProjectActionTypes","INITIAL_STATE","isCurrentProjectFetching","currentProjectId","currentProjectName","currentProjectStatus","currentProjectPurchaseOrders","currentProjectChangeOrders","currentProjectTasks","currentProjectMessage","currentProjectRoles","currentProjectUsers","currentProjectType","currentPropertyType","currentProjectOwner","errorMessage","isCurrentProjectDeleting","deletionMessage","deletionError","inviteUserStart","inviteUserMessage","updateUserInProjectStart","updateUserInProjectMessage","currentProjectReducer","state","action","type","FETCH_CURRENT_PROJECT_START","FETCH_CURRENT_PROJECT_SUCCESS","tasks","purchaseOrders","_id","projectName","projectStatus","changeOrders","projectOwner","projectType","propertyType","projectRoles","Users","payload","FETCH_CURRENT_PROJECT_FAILURE","DELETE_CURRENT_TASK_IN_REDUCER","console","log","updatedTasks","filter","task","DELETE_CURRENT_PROJECT_START","DELETE_CURRENT_PROJECT_SUCCESS","DELETE_CURRENT_PROJECT_FAILURE","INVITE_USER_START","INVITE_USER_SUCCESS","INVITE_USER_FAILURE","UPDATE_USER_IN_PROJECT_START","UPDATE_USER_IN_PROJECT_SUCCESS","UPDATE_USER_IN_PROJECT_FAILURE"],"mappings":"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","sourcesContent":["import { CurrentProjectActionTypes } from \"./current-project.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  isCurrentProjectFetching: false,\r\n  currentProjectId: null,\r\n  currentProjectName: null,\r\n  currentProjectStatus: null,\r\n  currentProjectPurchaseOrders: null,\r\n  currentProjectChangeOrders: null,\r\n  currentProjectTasks: null,\r\n  currentProjectMessage: null,\r\n  currentProjectRoles: null,\r\n  currentProjectUsers: null,\r\n  currentProjectType: null,\r\n  currentPropertyType: null,\r\n  currentProjectOwner: null,\r\n  errorMessage: null,\r\n  isCurrentProjectDeleting: false,\r\n  deletionMessage: null,\r\n  deletionError: null,\r\n  inviteUserStart: false,\r\n  inviteUserMessage: null,\r\n  updateUserInProjectStart: null,\r\n  updateUserInProjectMessage: null,\r\n};\r\n\r\nconst currentProjectReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        isCurrentProjectFetching: true,\r\n      };\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_SUCCESS:\r\n      const {\r\n        tasks,\r\n        purchaseOrders,\r\n        _id,\r\n        projectName,\r\n        projectStatus,\r\n        changeOrders,\r\n        projectOwner,\r\n        projectType,\r\n        propertyType,\r\n        projectRoles,\r\n        Users\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        isCurrentProjectFetching: false,\r\n        currentProjectStatus: projectStatus,\r\n        currentProjectName: projectName,\r\n        currentProjectTasks: tasks,\r\n        currentProjectPurchaseOrders: purchaseOrders,\r\n        currentProjectChangeOrders: changeOrders,\r\n        currentProjectId: _id,\r\n        currentProjectType: projectType,\r\n        currentProjectOwner: projectOwner,\r\n        currentPropertyType: propertyType,\r\n        currentProjectRoles: projectRoles,\r\n        currentProjectUsers: Users,\r\n        currentProjectMessage: \"PROJECT FETCHED!\",\r\n      };\r\n\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isCurrentProjectFetching: false,\r\n        errorMessage: action.payload,\r\n      };\r\n\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_TASK_IN_REDUCER:\r\n      console.log(state);\r\n      let updatedTasks = state.currentProjectTasks.filter(\r\n        (task) => task._id != action.payload\r\n      );\r\n      console.log(\"current project reducer\", updatedTasks);\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        currentProjectTasks: updatedTasks,\r\n      };\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_START:\r\n      return {\r\n        isCurrentProjectDeleting: true,\r\n      };\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_SUCCESS:\r\n      return {\r\n        isCurrentProjectDeleting: false,\r\n        deletionMessage: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_FAILURE:\r\n      return {\r\n        isCurrentProjectDeleting: false,\r\n        deletionError: action.payload,\r\n      };\r\n      case CurrentProjectActionTypes.INVITE_USER_START:\r\n        return{\r\n          ...state,\r\n          inviteUserStart: true,\r\n          inviteUserMessage: null\r\n        }\r\n      case CurrentProjectActionTypes.INVITE_USER_SUCCESS:\r\n        return{\r\n          ...state,\r\n          inviteUserStart: false,\r\n          inviteUserMessage: action.payload\r\n        }\r\n      case CurrentProjectActionTypes.INVITE_USER_FAILURE:\r\n        return{\r\n          ...state,\r\n          inviteUserStart: false,\r\n          inviteUserMessage: action.payload\r\n        }\r\n        case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_START:\r\n          return{\r\n            ...state,\r\n            updateUserInProjectStart: true,\r\n            updateUserInProjectMessage: null\r\n          }\r\n        case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_SUCCESS:\r\n          return{\r\n            ...state,\r\n            updateUserInProjectStart: false,\r\n            updateUserInProjectMessage: action.payload\r\n          }\r\n        case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_FAILURE:\r\n          return{\r\n            ...state,\r\n            updateUserInProjectStart: false,\r\n            updateUserInProjectMessage: action.payload\r\n          }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentProjectReducer;\r\n"]},"metadata":{},"sourceType":"module"}