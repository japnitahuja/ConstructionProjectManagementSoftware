{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\nexport function* signUp({\n  payload\n}) {\n  console.log(\"Sign Up has started.\");\n  console.log(payload);\n\n  try {\n    let resp = yield fetch('/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    UserObj = yield resp.user.json();\n    console.log('USER OBJ IS', UserObj);\n\n    if (UserObj.done) {\n      yield put(signUpSuccess());\n    } else {\n      yield put(signUpFailure(UserObj.error));\n    }\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n;\nexport function* onSignUpStart() {\n  takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n;\nexport function* userSagas() {\n  yield all([call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/redux/user/user.sagas.js"],"names":["all","call","put","takeLatest","UserActionTypes","signUp","payload","console","log","resp","fetch","method","headers","body","JSON","stringify","UserObj","user","json","done","signUpSuccess","signUpFailure","error","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,eAAT,QAAgC,cAAhC;AAGA,OAAO,UAAUC,MAAV,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA2B;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEA,MAAG;AACC,QAAIG,IAAI,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AAChCC,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFuB;AAKhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,OAAf;AAL0B,KAAZ,CAAtB;AAQAU,IAAAA,OAAO,GAAG,MAAMP,IAAI,CAACQ,IAAL,CAAUC,IAAV,EAAhB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BQ,OAA3B;;AACA,QAAIA,OAAO,CAACG,IAAZ,EAAkB;AAChB,YAAMjB,GAAG,CAACkB,aAAa,EAAd,CAAT;AACD,KAFD,MAEO;AACL,YAAMlB,GAAG,CAACmB,aAAa,CAACL,OAAO,CAACM,KAAT,CAAd,CAAT;AACD;AACF,GAhBH,CAgBI,OAAOA,KAAP,EAAc;AACd,UAAMpB,GAAG,CAACmB,aAAa,CAACC,KAAD,CAAd,CAAT;AACD;AACN;AAAA;AAGD,OAAO,UAAUC,aAAV,GAA0B;AAC7BpB,EAAAA,UAAU,CAACC,eAAe,CAACoB,aAAjB,EAAgCnB,MAAhC,CAAV;AACH;AAAA;AAED,OAAO,UAAUoB,SAAV,GAAqB;AACxB,QAAMzB,GAAG,CAAC,CACNC,IAAI,CAACsB,aAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport { UserActionTypes } from './user.types';\r\n\r\n\r\nexport function* signUp({payload}){\r\n    console.log(\"Sign Up has started.\")\r\n    console.log(payload)\r\n\r\n    try{\r\n        let resp = yield fetch('/signup', {\r\n          method: 'POST', \r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(payload),\r\n        });\r\n    \r\n        UserObj = yield resp.user.json();\r\n        console.log('USER OBJ IS', UserObj);\r\n        if (UserObj.done) {\r\n          yield put(signUpSuccess());\r\n        } else {\r\n          yield put(signUpFailure(UserObj.error));\r\n        }\r\n      } catch (error) {\r\n        yield put(signUpFailure(error));\r\n      }\r\n};\r\n\r\n\r\nexport function* onSignUpStart() {\r\n    takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n};\r\n\r\nexport function* userSagas(){\r\n    yield all([\r\n        call(onSignUpStart)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}