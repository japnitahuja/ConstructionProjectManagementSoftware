{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\access-dropdown\\\\access-dropdown.component.jsx\";\nimport React, { Component } from 'react';\nimport { DropDownDiv, DropDownButton, DropDownContent, DropDownOption, DropDownOptionHeading, DropDownOptionDescription } from \"./dropdown.styles\";\nimport DownArrow from \"../../assets/down-arrow.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DropDown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOutside = event => {\n      if (this.dropdownContainer.current && !this.dropdownContainer.current.contains(event.target)) {\n        this.setState({\n          dropDownSwitch: false\n        });\n      }\n    };\n\n    this.DropDownToggle = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        dropDownSwitch: !prevState.dropDownSwitch\n      }));\n    };\n\n    this.handleOptionClick = e => {\n      e.preventDefault();\n      let {\n        id\n      } = e.target;\n      console.log(\"selected option\");\n      console.log(e.target);\n      console.log(id);\n      console.log(this.props.userID);\n    };\n\n    this.dropdownContainer = /*#__PURE__*/React.createRef();\n    this.state = {\n      dropDownSwitch: false,\n      selected: this.props.selected\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  render() {\n    console.log(this.props.userID);\n    console.log(this.props);\n    let {\n      options\n    } = this.props;\n    let {\n      selected\n    } = this.state;\n    let selectedIndex = 0;\n    options.map((option, index) => {\n      if (option[0] === selected) {\n        selectedIndex = index;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(DropDownDiv, {\n      ref: this.dropdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(DropDownButton, {\n        onClick: this.DropDownToggle,\n        img: DownArrow,\n        children: options[selectedIndex][1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownContent, {\n        display: this.state.dropDownSwitch ? \"block\" : \"none\",\n        children: [/*#__PURE__*/_jsxDEV(DropDownOption, {\n          id: options[selectedIndex][0],\n          onClick: this.handleOptionClick,\n          backgroundFlag: true,\n          children: [/*#__PURE__*/_jsxDEV(DropDownOptionHeading, {\n            children: options[selectedIndex][1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DropDownOptionDescription, {\n            children: options[selectedIndex][2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), options.map(option => {\n          let selectedFlag = false;\n\n          if (option[0] != selected) {\n            return /*#__PURE__*/_jsxDEV(DropDownOption, {\n              id: option[0],\n              onClick: this.handleOptionClick,\n              backgroundFlag: selectedFlag,\n              children: [/*#__PURE__*/_jsxDEV(DropDownOptionHeading, {\n                children: option[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(DropDownOptionDescription, {\n                children: option[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DropDown;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/access-dropdown/access-dropdown.component.jsx"],"names":["React","Component","DropDownDiv","DropDownButton","DropDownContent","DropDownOption","DropDownOptionHeading","DropDownOptionDescription","DownArrow","DropDown","constructor","props","handleClickOutside","event","dropdownContainer","current","contains","target","setState","dropDownSwitch","DropDownToggle","e","preventDefault","prevState","handleOptionClick","id","console","log","userID","createRef","state","selected","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","options","selectedIndex","map","option","index","selectedFlag"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {DropDownDiv, DropDownButton, DropDownContent, DropDownOption, DropDownOptionHeading, DropDownOptionDescription} from \"./dropdown.styles\";\r\nimport DownArrow from \"../../assets/down-arrow.png\"\r\n\r\nclass DropDown extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.dropdownContainer = React.createRef();\r\n        this.state={\r\n            dropDownSwitch:false, \r\n            selected: this.props.selected\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside = (event) => {\r\n        if (\r\n          this.dropdownContainer.current &&\r\n          !this.dropdownContainer.current.contains(event.target)\r\n        ) {\r\n          this.setState({\r\n            dropDownSwitch: false,\r\n          });\r\n        }\r\n      };\r\n\r\n    DropDownToggle = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => ({\r\n            dropDownSwitch: !prevState.dropDownSwitch\r\n        }));\r\n\r\n    }\r\n\r\n    handleOptionClick = (e) => {\r\n        e.preventDefault()\r\n        let {id} = e.target;\r\n        console.log(\"selected option\")\r\n        console.log(e.target)\r\n        console.log(id)\r\n        console.log(this.props.userID)\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.userID)\r\n        console.log(this.props)\r\n        let {options} = this.props;\r\n        let {selected} = this.state;\r\n\r\n        let selectedIndex = 0;\r\n        options.map((option, index)=> {\r\n            if(option[0] === selected){\r\n                selectedIndex = index;\r\n            }\r\n        })\r\n        return (\r\n            <DropDownDiv ref={this.dropdownContainer}>\r\n                <DropDownButton onClick={this.DropDownToggle} img={DownArrow}>{options[selectedIndex][1]}</DropDownButton>\r\n                    <DropDownContent display={this.state.dropDownSwitch?\"block\":\"none\"}>\r\n\r\n                        <DropDownOption id ={options[selectedIndex][0]} onClick={this.handleOptionClick} backgroundFlag = {true}>\r\n                        <DropDownOptionHeading>{options[selectedIndex][1]}</DropDownOptionHeading>\r\n                        <DropDownOptionDescription>{options[selectedIndex][2]}</DropDownOptionDescription>\r\n                        </DropDownOption>\r\n                        \r\n                            {\r\n                            options.map((option) => {\r\n                                let selectedFlag = false;\r\n                                if(option[0] != selected){\r\n                                    return(\r\n                                        <DropDownOption  id ={option[0]} onClick={this.handleOptionClick} backgroundFlag = {selectedFlag}>\r\n                                            <DropDownOptionHeading>{option[1]}</DropDownOptionHeading>\r\n                                            <DropDownOptionDescription>{option[2]}</DropDownOptionDescription>\r\n                                        </DropDownOption>\r\n                                    \r\n                                    )\r\n                                }\r\n                            })\r\n                            }\r\n                    </DropDownContent>\r\n            </DropDownDiv>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropDown;"]},"metadata":{},"sourceType":"module"}