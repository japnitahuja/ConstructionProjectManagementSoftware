{"ast":null,"code":"import { CurrentTaskActionTypes } from \"./current-task.types\";\nconst INITIAL_STATE = {\n  isCurrentTaskFetching: false,\n  currentTaskId: null,\n  currentTaskName: null,\n  currentTaskPurchaseOrders: null,\n  currentTaskChangeOrders: null,\n  currentTaskSteps: null,\n  currentTaskTotalSteps: null,\n  currentTaskCompletedSteps: null,\n  currentTaskCompletionPercentage: null,\n  currentTaskIsDone: null,\n  currentTaskStartDate: null,\n  currentTaskEndDate: null,\n  currentTaskOwner: null,\n  currentTaskMessage: null,\n  errorMessage: null,\n  currentTaskCompletionMessage: null,\n  isCurrentTaskCompleting: null,\n  isCurrentTaskDeleting: false,\n  currentTaskDeletingMessage: null,\n  currentTaskUpdateMessage: null\n};\n\nconst currentTaskReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CurrentTaskActionTypes.FETCH_CURRENT_TASK_START:\n      return { ...state,\n        isCurrentTaskFetching: true,\n        currentTaskCompletionMessage: null\n      };\n\n    case CurrentTaskActionTypes.FETCH_CURRENT_TASK_SUCCESS:\n      const {\n        taskName,\n        taskStartDate,\n        taskEndDate,\n        taskOwner,\n        purchaseOrders,\n        _id,\n        steps,\n        completionPercentage,\n        completedSteps,\n        totalSteps,\n        isTaskDone,\n        changeOrders\n      } = action.payload;\n      return { ...state,\n        isCurrentTaskFetching: false,\n        currentTaskId: _id,\n        currentTaskName: taskName,\n        currentTaskStartDate: taskStartDate,\n        currentTaskEndDate: taskEndDate,\n        currentTaskOwner: taskOwner,\n        currentTaskPurchaseOrders: purchaseOrders,\n        currentTaskSteps: steps,\n        currentTaskCompletedSteps: completedSteps,\n        currentTaskCompletionPercentage: completionPercentage,\n        currentTaskTotalSteps: totalSteps,\n        currentTaskIsDone: isTaskDone,\n        currentTaskChangeOrders: changeOrders,\n        currentTaskUpdating: null\n      };\n\n    case CurrentTaskActionTypes.FETCH_CURRENT_TASK_FAILURE:\n      return { ...state,\n        isCurrentTaskFetching: false,\n        errorMessage: action.payload\n      };\n\n    case CurrentTaskActionTypes.COMPLETE_CURRENT_TASK_START:\n      return { ...state,\n        isCurrentTaskCompleting: true,\n        currentTaskCompletionMessage: null\n      };\n\n    case CurrentTaskActionTypes.COMPLETE_CURRENT_TASK_SUCCESS:\n      return { ...state,\n        isCurrentTaskCompleting: false,\n        currentTaskCompletionMessage: action.payload\n      };\n\n    case CurrentTaskActionTypes.COMPLETE_CURRENT_TASK_FAILURE:\n      return { ...state,\n        isCurrentTaskCompleting: false,\n        currentTaskCompletionMessage: action.payload,\n        isCurrentTaskCompleting: false\n      };\n\n    case CurrentTaskActionTypes.DELETE_CURRENT_TASK_START:\n      return { ...state,\n        isCurrentTaskDeleting: true,\n        currentTaskDeletionMessage: null\n      };\n\n    case CurrentTaskActionTypes.DELETE_CURRENT_TASK_SUCCESS:\n      return { ...state,\n        isCurrentTaskDeleting: false,\n        currentTaskDeletionMessage: action.payload\n      };\n\n    case CurrentTaskActionTypes.DELETE_CURRENT_TASK_FAILURE:\n      return { ...state,\n        isCurrentTaskDeleting: false,\n        currentTaskDeletionMessage: action.payload\n      };\n\n    case CurrentTaskActionTypes.DELETE_STEP:\n      let updatedSteps = state.currentTaskSteps.filter(step => step._id != action.payload);\n      return { ...state,\n        currentTaskSteps: updatedSteps\n      };\n\n    case CurrentTaskActionTypes.UPDATE_CURRENT_TASK_START:\n      return {\n        currentTaskUpdating: true\n      };\n\n    case CurrentTaskActionTypes.UPDATE_CURRENT_TASK_SUCCESS:\n      return {\n        currentTaskUpdating: false,\n        currentTaskUpdateMessage: action.payload\n      };\n\n    case CurrentTaskActionTypes.UPDATE_CURRENT_TASK_FAILURE:\n      return {\n        currentTaskUpdating: false,\n        errorMessage: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTaskReducer;","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/redux/current-task/current-task.reducer.js"],"names":["CurrentTaskActionTypes","INITIAL_STATE","isCurrentTaskFetching","currentTaskId","currentTaskName","currentTaskPurchaseOrders","currentTaskChangeOrders","currentTaskSteps","currentTaskTotalSteps","currentTaskCompletedSteps","currentTaskCompletionPercentage","currentTaskIsDone","currentTaskStartDate","currentTaskEndDate","currentTaskOwner","currentTaskMessage","errorMessage","currentTaskCompletionMessage","isCurrentTaskCompleting","isCurrentTaskDeleting","currentTaskDeletingMessage","currentTaskUpdateMessage","currentTaskReducer","state","action","type","FETCH_CURRENT_TASK_START","FETCH_CURRENT_TASK_SUCCESS","taskName","taskStartDate","taskEndDate","taskOwner","purchaseOrders","_id","steps","completionPercentage","completedSteps","totalSteps","isTaskDone","changeOrders","payload","currentTaskUpdating","FETCH_CURRENT_TASK_FAILURE","COMPLETE_CURRENT_TASK_START","COMPLETE_CURRENT_TASK_SUCCESS","COMPLETE_CURRENT_TASK_FAILURE","DELETE_CURRENT_TASK_START","currentTaskDeletionMessage","DELETE_CURRENT_TASK_SUCCESS","DELETE_CURRENT_TASK_FAILURE","DELETE_STEP","updatedSteps","filter","step","UPDATE_CURRENT_TASK_START","UPDATE_CURRENT_TASK_SUCCESS","UPDATE_CURRENT_TASK_FAILURE"],"mappings":"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","sourcesContent":["import { CurrentTaskActionTypes } from \"./current-task.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  isCurrentTaskFetching: false,\r\n  currentTaskId: null,\r\n  currentTaskName: null,\r\n  currentTaskPurchaseOrders: null,\r\n  currentTaskChangeOrders: null,\r\n  currentTaskSteps: null,\r\n  currentTaskTotalSteps: null,\r\n  currentTaskCompletedSteps: null,\r\n  currentTaskCompletionPercentage: null,\r\n  currentTaskIsDone: null,\r\n  currentTaskStartDate: null,\r\n  currentTaskEndDate: null,\r\n  currentTaskOwner: null,\r\n  currentTaskMessage: null,\r\n  errorMessage: null,\r\n  currentTaskCompletionMessage: null,\r\n  isCurrentTaskCompleting: null,\r\n  isCurrentTaskDeleting: false,\r\n  currentTaskDeletingMessage: null,\r\n  currentTaskUpdateMessage: null\r\n};\r\n\r\nconst currentTaskReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrentTaskActionTypes.FETCH_CURRENT_TASK_START:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskFetching: true,\r\n        currentTaskCompletionMessage: null,\r\n      };\r\n    case CurrentTaskActionTypes.FETCH_CURRENT_TASK_SUCCESS:\r\n      const {\r\n        taskName,\r\n        taskStartDate,\r\n        taskEndDate,\r\n        taskOwner,\r\n        purchaseOrders,\r\n        _id,\r\n        steps,\r\n        completionPercentage,\r\n        completedSteps,\r\n        totalSteps,\r\n        isTaskDone,\r\n        changeOrders,\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        isCurrentTaskFetching: false,\r\n        currentTaskId: _id,\r\n        currentTaskName: taskName,\r\n        currentTaskStartDate: taskStartDate,\r\n        currentTaskEndDate: taskEndDate,\r\n        currentTaskOwner: taskOwner,\r\n        currentTaskPurchaseOrders: purchaseOrders,\r\n        currentTaskSteps: steps,\r\n        currentTaskCompletedSteps: completedSteps,\r\n        currentTaskCompletionPercentage: completionPercentage,\r\n        currentTaskTotalSteps: totalSteps,\r\n        currentTaskIsDone: isTaskDone,\r\n        currentTaskChangeOrders: changeOrders,\r\n        currentTaskUpdating: null,\r\n      };\r\n\r\n    case CurrentTaskActionTypes.FETCH_CURRENT_TASK_FAILURE:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskFetching: false,\r\n        errorMessage: action.payload,\r\n      };\r\n    case CurrentTaskActionTypes.COMPLETE_CURRENT_TASK_START:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskCompleting: true,\r\n        currentTaskCompletionMessage: null,\r\n      };\r\n    case CurrentTaskActionTypes.COMPLETE_CURRENT_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskCompleting: false,\r\n        currentTaskCompletionMessage: action.payload,\r\n      };\r\n    case CurrentTaskActionTypes.COMPLETE_CURRENT_TASK_FAILURE:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskCompleting: false,\r\n        currentTaskCompletionMessage: action.payload,\r\n        isCurrentTaskCompleting: false,\r\n      };\r\n    case CurrentTaskActionTypes.DELETE_CURRENT_TASK_START:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskDeleting: true,\r\n        currentTaskDeletionMessage: null,\r\n      };\r\n    case CurrentTaskActionTypes.DELETE_CURRENT_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskDeleting: false,\r\n        currentTaskDeletionMessage: action.payload,\r\n      };\r\n    case CurrentTaskActionTypes.DELETE_CURRENT_TASK_FAILURE:\r\n      return {\r\n        ...state,\r\n        isCurrentTaskDeleting: false,\r\n        currentTaskDeletionMessage: action.payload,\r\n      };\r\n    case CurrentTaskActionTypes.DELETE_STEP:\r\n      let updatedSteps = state.currentTaskSteps.filter(\r\n        (step) => step._id != action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        currentTaskSteps: updatedSteps,\r\n      };\r\n    case CurrentTaskActionTypes.UPDATE_CURRENT_TASK_START:\r\n      return {\r\n        currentTaskUpdating: true,\r\n      };\r\n    case CurrentTaskActionTypes.UPDATE_CURRENT_TASK_SUCCESS:\r\n      return {\r\n        currentTaskUpdating: false,\r\n        currentTaskUpdateMessage: action.payload\r\n\r\n      };\r\n    case CurrentTaskActionTypes.UPDATE_CURRENT_TASK_FAILURE:\r\n      return {\r\n        currentTaskUpdating: false,\r\n        errorMessage: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentTaskReducer;\r\n"]},"metadata":{},"sourceType":"module"}