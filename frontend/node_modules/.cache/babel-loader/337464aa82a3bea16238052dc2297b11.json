{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\projects-filter\\\\projects-filter.component.js\";\nimport React, { Component } from \"react\";\nimport { FormLabel, Container, FormDiv, Heading, FormButton } from \"./projects-filter.styles\";\nimport { connect } from \"react-redux\";\nimport { inviteUserStart, UpdateRolesInProjectStart } from \"../../redux/current-project/current-project.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport DropDown from \"../projects-filter-dropdown/projects-filter-dropdown.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProjectsFilter extends Component {\n  constructor() {\n    super();\n\n    this.changeStatus = e => {\n      this.setState({\n        projectStatus: e\n      });\n    };\n\n    this.handleOnSubmit = e => {\n      e.preventDefault();\n      let temp = {};\n\n      if (this.state.projectStatus != '') {\n        temp.projectStatus = this.state.projectStatus;\n      }\n\n      if (this.state.projectType != '') {\n        temp.projectType = this.state.projectType;\n      }\n\n      if (this.state.propertyType != '') {\n        temp.propertyType = this.state.propertyType;\n      }\n\n      this.props.onSubmit(temp);\n      this.props.exit();\n    };\n\n    this.state = {\n      projectStatus: '',\n      projectType: '',\n      propertyType: '',\n      allStatus: ['All Status', 'Active', 'Planned', 'Upcoming'],\n      allProperty: []\n    };\n  }\n\n  render() {\n    let {\n      projectUsers,\n      projectRoles\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: [\"Filters\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.exit,\n            style: {\n              textDecoration: 'none',\n              background: 'none',\n              border: 'none',\n              fontSize: '1.4em',\n              color: 'rgba(102,102,102,0.6)'\n            },\n            children: \" \\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormDiv, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n            options: this.state.allStatus,\n            selected: \"All Status\",\n            onChange: this.changeStatus,\n            field: \"projectStatus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Property Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n            options: this.state.allStatus,\n            selected: \"All Status\",\n            onChange: this.changeStatus,\n            field: \"propertyType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n            options: this.state.allStatus,\n            selected: \"All Status\",\n            onChange: this.changeStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormButton, {\n            border: \"1px solid #000000\",\n            color: \"#3F8CFF\",\n            bgcolor: \"#FFFFFF\",\n            width: \"40%\",\n            onClick: this.props.exit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            border: \"1px solid #3F8CFF\",\n            color: \"#FFFFFF\",\n            bgcolor: \"#3F8CFF\",\n            width: \"40%\",\n            onClick: this.handleOnSubmit,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsFilter);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/projects-filter/projects-filter.component.js"],"names":["React","Component","FormLabel","Container","FormDiv","Heading","FormButton","connect","inviteUserStart","UpdateRolesInProjectStart","createStructuredSelector","DropDown","ProjectsFilter","constructor","changeStatus","e","setState","projectStatus","handleOnSubmit","preventDefault","temp","state","projectType","propertyType","props","onSubmit","exit","allStatus","allProperty","render","projectUsers","projectRoles","textDecoration","background","border","fontSize","color","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FormLabel,Container, FormDiv, Heading,FormButton } from \"./projects-filter.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { inviteUserStart, UpdateRolesInProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport DropDown from \"../projects-filter-dropdown/projects-filter-dropdown.component\"\r\nclass ProjectsFilter extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectStatus:'',\r\n      projectType:'',\r\n      propertyType:'',\r\n\r\n      allStatus: ['All Status','Active', 'Planned', 'Upcoming'],\r\n      allProperty: []\r\n\r\n    };\r\n  }\r\n\r\n  changeStatus = (e) => {\r\n    \r\n    this.setState({\r\n      projectStatus: e\r\n    })\r\n   \r\n  }\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault()\r\n    let temp = {}\r\n    if (this.state.projectStatus != ''){\r\n      temp.projectStatus = this.state.projectStatus\r\n    }\r\n    if (this.state.projectType != ''){\r\n      temp.projectType = this.state.projectType\r\n    }\r\n    if (this.state.propertyType != ''){\r\n      temp.propertyType = this.state.propertyType\r\n    }\r\n    this.props.onSubmit(temp)\r\n    this.props.exit()\r\n    \r\n  }\r\n  \r\n  render() {\r\n    let {projectUsers, projectRoles} = this.props;\r\n    \r\n    return (\r\n        <>\r\n        <Container>\r\n        <Heading>\r\n          Filters\r\n\r\n          <button  onClick={this.props.exit} style={{textDecoration:'none', \r\n                                    background: 'none', \r\n                                    border: 'none', \r\n                                    fontSize:'1.4em', \r\n                                    color:'rgba(102,102,102,0.6)'}}> &times;</button>\r\n        </Heading>\r\n        \r\n        <FormDiv>\r\n          <FormLabel>\r\n            Status\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allStatus}\r\n          selected=\"All Status\"\r\n          onChange = {this.changeStatus}\r\n          field=\"projectStatus\"/>\r\n\r\n          <FormLabel>\r\n            Property Type\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allStatus}\r\n          selected=\"All Status\"\r\n          onChange = {this.changeStatus}\r\n          field=\"propertyType\"\r\n          />\r\n\r\n          <FormLabel>\r\n            Status\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allStatus}\r\n          selected=\"All Status\"\r\n          onChange = {this.changeStatus}/>\r\n        </FormDiv>\r\n\r\n        <div>\r\n        <FormButton \r\n            border=\"1px solid #000000\"\r\n            color=\"#3F8CFF\"\r\n            bgcolor = \"#FFFFFF\"\r\n            width=\"40%\"\r\n            onClick={this.props.exit}\r\n          > \r\n          Cancel\r\n          </FormButton>\r\n          <FormButton \r\n            border=\"1px solid #3F8CFF\"\r\n            color=\"#FFFFFF\"\r\n            bgcolor = \"#3F8CFF\"\r\n            width=\"40%\"\r\n            onClick={this.handleOnSubmit}\r\n          > \r\n          Create\r\n          </FormButton>\r\n        </div>\r\n       \r\n        </Container>\r\n         \r\n      </>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsFilter);\r\n"]},"metadata":{},"sourceType":"module"}