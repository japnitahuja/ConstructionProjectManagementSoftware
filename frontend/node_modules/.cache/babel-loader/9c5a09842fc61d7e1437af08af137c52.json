{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\create-organisation\\\\create-organisation.page.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { createOrganisationStart, fetchAllOrganisationsStart } from \"../../redux/organisation/organisation.actions\";\nimport { selectAllOrganisations, selectFetchAllOrganisationsSuccess } from \"../../redux/organisation/organisation.selectors\";\nimport { NavBar, OneThirdDiv, LongInput } from \"./create-organisation.styles\";\nimport Organisation from \"./../organisation/organisation.page\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateOrganisation extends Component {\n  constructor() {\n    super();\n\n    this.organisationOnChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      let org = this.state.organisationDetails;\n      org[name] = value;\n      this.setState({\n        organisationDetails: org\n      }, () => console.log(this.state));\n    };\n\n    this.createOrg = e => {\n      e.preventDefault();\n      let orgDetails = this.state.organisationDetails;\n      this.props.createOrganisation(orgDetails);\n    };\n\n    this.state = {\n      organisationDetails: {\n        organisationName: null,\n        organisationEmail: null,\n        organisationNumber: null,\n        organisationAddress: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchOrganisations();\n  }\n\n  render() {\n    console.log(this.props.organisations);\n    let {\n      organisationsFetched\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100vh\",\n          backgroundColor: \"#F5F5F5\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          children: [/*#__PURE__*/_jsxDEV(OneThirdDiv, {\n            align: \"flex-start\",\n            color: \"#205284\",\n            onClick: this.exit,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/organisations`,\n              style: {\n                textDecoration: \"none\",\n                color: \"#205284\"\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OneThirdDiv, {\n            align: \"center\",\n            style: {\n              fontWeight: \"600\"\n            },\n            children: \"New Organisation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OneThirdDiv, {\n            align: \"flex-end\",\n            color: \"#205284\",\n            onClick: this.createOrg,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onChange: this.organisationOnChange,\n          onSubmit: this.createOrg,\n          children: [/*#__PURE__*/_jsxDEV(LongInput, {\n            id: \"organisationName\",\n            name: \"organisationName\",\n            type: \"text\",\n            placeholder: \"Enter Oganisation Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LongInput, {\n            id: \"organisationAddress\",\n            name: \"organisationAddress\",\n            type: \"text\",\n            placeholder: \"Enter Oganisation Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LongInput, {\n            id: \"organisationNumber\",\n            name: \"organisationNumber\",\n            type: \"text\",\n            placeholder: \"Enter Oganisation Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LongInput, {\n            id: \"organisationEmail\",\n            name: \"organisationEmail\",\n            type: \"text\",\n            placeholder: \"Enter Oganisation Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  organisationsFetched: selectFetchAllOrganisationsSuccess,\n  organisations: selectAllOrganisations\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // signOut: () => dispatch(signOut()),\n  // createProject: (projectDetails) =>\n  //   dispatch(createProjectStart(projectDetails)),\n  // fetchProjects: () => dispatch(fetchProjectsStart()),\n  createOrganisation: orgDetails => dispatch(createOrganisationStart(orgDetails)),\n  fetchOrganisations: userId => dispatch(fetchAllOrganisationsStart(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOrganisation);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/create-organisation/create-organisation.page.js"],"names":["React","Component","connect","Link","createStructuredSelector","createOrganisationStart","fetchAllOrganisationsStart","selectAllOrganisations","selectFetchAllOrganisationsSuccess","NavBar","OneThirdDiv","LongInput","Organisation","CreateOrganisation","constructor","organisationOnChange","e","name","value","target","org","state","organisationDetails","setState","console","log","createOrg","preventDefault","orgDetails","props","createOrganisation","organisationName","organisationEmail","organisationNumber","organisationAddress","componentDidMount","fetchOrganisations","render","organisations","organisationsFetched","width","height","backgroundColor","exit","textDecoration","color","fontWeight","mapStateToProps","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createOrganisationStart,\r\n  fetchAllOrganisationsStart,\r\n} from \"../../redux/organisation/organisation.actions\";\r\nimport {\r\n  selectAllOrganisations,\r\n  selectFetchAllOrganisationsSuccess,\r\n} from \"../../redux/organisation/organisation.selectors\";\r\nimport { NavBar, OneThirdDiv, LongInput } from \"./create-organisation.styles\";\r\nimport Organisation from \"./../organisation/organisation.page\";\r\n\r\nclass CreateOrganisation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      organisationDetails: {\r\n        organisationName: null,\r\n        organisationEmail: null,\r\n        organisationNumber: null,\r\n        organisationAddress: null,\r\n      },\r\n    };\r\n  }\r\n\r\n  organisationOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let org = this.state.organisationDetails;\r\n    org[name] = value;\r\n    this.setState({ organisationDetails: org }, () => console.log(this.state));\r\n  };\r\n\r\n  createOrg = (e) => {\r\n    e.preventDefault();\r\n    let orgDetails = this.state.organisationDetails;\r\n    this.props.createOrganisation(orgDetails);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchOrganisations();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.organisations);\r\n    let { organisationsFetched } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          style={{ width: \"100%\", height: \"100vh\", backgroundColor: \"#F5F5F5\" }}\r\n        >\r\n          <NavBar>\r\n            <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n              <Link\r\n                to={`/organisations`}\r\n                style={{ textDecoration: \"none\", color: \"#205284\" }}\r\n              >\r\n                Cancel\r\n              </Link>\r\n            </OneThirdDiv>\r\n            <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n              New Organisation\r\n            </OneThirdDiv>\r\n            <OneThirdDiv\r\n              align=\"flex-end\"\r\n              color=\"#205284\"\r\n              onClick={this.createOrg}\r\n            >\r\n              Save\r\n            </OneThirdDiv>\r\n          </NavBar>\r\n          <form onChange={this.organisationOnChange} onSubmit={this.createOrg}>\r\n            <LongInput\r\n              id=\"organisationName\"\r\n              name=\"organisationName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Oganisation Name\"\r\n            />\r\n\r\n            <LongInput\r\n              id=\"organisationAddress\"\r\n              name=\"organisationAddress\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Oganisation Address\"\r\n            />\r\n\r\n            <LongInput\r\n              id=\"organisationNumber\"\r\n              name=\"organisationNumber\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Oganisation Number\"\r\n            />\r\n\r\n            <LongInput\r\n              id=\"organisationEmail\"\r\n              name=\"organisationEmail\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Oganisation Email\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  organisationsFetched: selectFetchAllOrganisationsSuccess,\r\n  organisations: selectAllOrganisations,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // signOut: () => dispatch(signOut()),\r\n  // createProject: (projectDetails) =>\r\n  //   dispatch(createProjectStart(projectDetails)),\r\n  // fetchProjects: () => dispatch(fetchProjectsStart()),\r\n  createOrganisation: (orgDetails) =>\r\n    dispatch(createOrganisationStart(orgDetails)),\r\n  fetchOrganisations: (userId) => dispatch(fetchAllOrganisationsStart(userId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOrganisation);\r\n"]},"metadata":{},"sourceType":"module"}