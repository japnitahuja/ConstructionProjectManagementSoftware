{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\project-purchase-orders\\\\project-purchase-orders.jsx\";\nimport React, { Component } from 'react';\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport PurchaseOrderList from '../../components/purchase-orders-list/purchase-orders-list.component';\nimport { selectCurrentProjectName, selectCurrentProjectPurchaseOrders } from '../../redux/current-project/current-project.selectors';\nimport { fetchCurrentProjectStart } from '../../redux/current-project/current-project.actions';\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\nimport PurchaseOrderListContainer from '../../components/purchase-orders-list/purchase-order-lists.container';\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\nimport SearchBar from '../../components/search-bar/search-bar.component';\nimport PurchaseOrdersSummary from \"../../components/purchase-orders-summary/purchase-orders-summary.component\";\nimport NoResult from '../../components/no-result/no-result.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectPurchaseOrders extends Component {\n  constructor() {\n    super();\n\n    this.search = searchedText => {\n      let temp = this.props.purchaseOrders;\n\n      if (searchedText) {\n        temp = temp.filter(({\n          purchasedItem\n        }) => {\n          return purchasedItem.toLowerCase().includes(searchedText.toLowerCase());\n        });\n      }\n\n      this.setState({\n        POsList: temp\n      });\n    };\n\n    this.state = {\n      POsList: ''\n    };\n  }\n\n  componentDidMount() {\n    const projectId = this.props.match.params.projectId;\n    this.props.fetchProject(projectId);\n    this.setState({\n      POsList: this.props.purchaseOrders\n    });\n  }\n\n  render() {\n    const {\n      projectName,\n      purchaseOrders\n    } = this.props;\n    const {\n      POsList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TaskNav, {\n        title: projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PurchaseOrdersSummary, {\n        purchaseOrders: purchaseOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        placeholder: \"Search POs...\",\n        search: this.search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), POsList.length === 0 ? /*#__PURE__*/_jsxDEV(NoResult, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(PurchaseOrderListContainer, {\n        purchaseOrders: POsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(LowerNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  purchaseOrders: selectCurrentProjectPurchaseOrders,\n  projectName: selectCurrentProjectName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProject: projectId => dispatch(fetchCurrentProjectStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectPurchaseOrders);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/project-purchase-orders/project-purchase-orders.jsx"],"names":["React","Component","createStructuredSelector","connect","PurchaseOrderList","selectCurrentProjectName","selectCurrentProjectPurchaseOrders","fetchCurrentProjectStart","LowerNavBar","PurchaseOrderListContainer","TaskNav","SearchBar","PurchaseOrdersSummary","NoResult","ProjectPurchaseOrders","constructor","search","searchedText","temp","props","purchaseOrders","filter","purchasedItem","toLowerCase","includes","setState","POsList","state","componentDidMount","projectId","match","params","fetchProject","render","projectName","length","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,sEAA9B;AACA,SAASC,wBAAT,EAAmCC,kCAAnC,QAA6E,uDAA7E;AACA,SAASC,wBAAT,QAAyC,qDAAzC;AACA,OAAOC,WAAP,MAAwB,wDAAxB;AACA,OAAOC,0BAAP,MAAuC,sEAAvC;AACA,SAASC,OAAT,QAAwB,8CAAxB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,qBAAP,MAAkC,4EAAlC;AACA,OAAOC,QAAP,MAAqB,gDAArB;;;AAEA,MAAMC,qBAAN,SAAoCb,SAApC,CAA8C;AAC1Cc,EAAAA,WAAW,GAAE;AACT;;AADS,SAYbC,MAZa,GAYHC,YAAD,IAAkB;AACvB,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWC,cAAtB;;AAEA,UAAGH,YAAH,EAAgB;AACdC,QAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAY,CAAC;AAACC,UAAAA;AAAD,SAAD,KAAmB;AACpC,iBAAOA,aAAa,CAACC,WAAd,GAA4BC,QAA5B,CAAqCP,YAAY,CAACM,WAAb,EAArC,CAAP;AACD,SAFM,CAAP;AAGD;;AAGD,WAAKE,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAER;AAAV,OAAd;AAEF,KAxBW;;AAET,SAAKS,KAAL,GAAW;AACPD,MAAAA,OAAO,EAAC;AADD,KAAX;AAGH;;AACDE,EAAAA,iBAAiB,GAAE;AACf,UAAMC,SAAS,GAAG,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBF,SAA1C;AACA,SAAKV,KAAL,CAAWa,YAAX,CAAwBH,SAAxB;AACA,SAAKJ,QAAL,CAAc;AAACC,MAAAA,OAAO,EAAC,KAAKP,KAAL,CAAWC;AAApB,KAAd;AACH;;AAgBDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,WAAD;AAAcd,MAAAA;AAAd,QAAgC,KAAKD,KAA3C;AACA,UAAM;AAACO,MAAAA;AAAD,QAAY,KAAKC,KAAvB;AAEA,wBACK;AAAA,8BACG,QAAC,OAAD;AAAS,QAAA,KAAK,EAAIO;AAAlB;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,qBAAD;AAAuB,QAAA,cAAc,EAAId;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,eAAvB;AAAuC,QAAA,MAAM,EAAE,KAAKJ;AAApD;AAAA;AAAA;AAAA;AAAA,cAHH,EAIIU,OAAO,CAACS,MAAR,KAAmB,CAAnB,gBAAqB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAArB,gBAAiC,QAAC,0BAAD;AAA4B,QAAA,cAAc,EAAIT;AAA9C;AAAA;AAAA;AAAA;AAAA,cAJrC,eAKG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AASH;;AAxCyC;;AA2C9C,MAAMU,eAAe,GAAGlC,wBAAwB,CAAC;AAC7CkB,EAAAA,cAAc,EAAEd,kCAD6B;AAE7C4B,EAAAA,WAAW,EAAE7B;AAFgC,CAAD,CAAhD;;AAKE,MAAMgC,kBAAkB,GAAIC,QAAD,KAAe;AACtCN,EAAAA,YAAY,EAAGH,SAAD,IAAeS,QAAQ,CAAC/B,wBAAwB,CAACsB,SAAD,CAAzB;AADC,CAAf,CAA3B;;AAKA,eAAe1B,OAAO,CAACiC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,qBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport PurchaseOrderList from '../../components/purchase-orders-list/purchase-orders-list.component';\r\nimport { selectCurrentProjectName, selectCurrentProjectPurchaseOrders } from '../../redux/current-project/current-project.selectors';\r\nimport { fetchCurrentProjectStart } from '../../redux/current-project/current-project.actions';\r\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\r\nimport PurchaseOrderListContainer from '../../components/purchase-orders-list/purchase-order-lists.container';\r\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\r\nimport SearchBar from '../../components/search-bar/search-bar.component';\r\nimport PurchaseOrdersSummary from \"../../components/purchase-orders-summary/purchase-orders-summary.component\"\r\nimport NoResult from '../../components/no-result/no-result.component';\r\n\r\nclass ProjectPurchaseOrders extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            POsList:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const projectId = this.props.match.params.projectId;\r\n        this.props.fetchProject(projectId);\r\n        this.setState({POsList:this.props.purchaseOrders})\r\n    }\r\n\r\n    search = (searchedText) => {\r\n        let temp = this.props.purchaseOrders\r\n\r\n        if(searchedText){\r\n          temp = temp.filter(({purchasedItem})=>{\r\n            return purchasedItem.toLowerCase().includes(searchedText.toLowerCase())\r\n          })\r\n        }\r\n        \r\n     \r\n        this.setState({POsList: temp})\r\n        \r\n     }\r\n\r\n    render() {\r\n        const {projectName, purchaseOrders} = this.props;\r\n        const {POsList} = this.state;\r\n        \r\n        return (\r\n             <div>\r\n                <TaskNav title = {projectName}/>\r\n                <PurchaseOrdersSummary purchaseOrders = {purchaseOrders}/>\r\n                <SearchBar placeholder=\"Search POs...\" search={this.search}/>\r\n                {POsList.length === 0?<NoResult/>:<PurchaseOrderListContainer purchaseOrders = {POsList} />}\r\n                <LowerNavBar />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    purchaseOrders: selectCurrentProjectPurchaseOrders,\r\n    projectName: selectCurrentProjectName\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n      fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId))\r\n    \r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ProjectPurchaseOrders);"]},"metadata":{},"sourceType":"module"}