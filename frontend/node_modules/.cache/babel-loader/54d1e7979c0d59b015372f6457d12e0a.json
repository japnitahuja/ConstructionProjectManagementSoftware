{"ast":null,"code":"import { all, call, put, takeLatest, select, delay } from \"redux-saga/effects\";\nimport { UpdatePublishedInProjectFailure, UpdatePublishedInProjectSuccess, deleteCurrentProjectFailure, deleteCurrentProjectSuccess, fetchCurrentProjectFailure, fetchCurrentProjectStart, fetchCurrentProjectSuccess, inviteUserFailure, inviteUserSuccess, UpdateUserInProjectFailure, UpdateUserInProjectSuccess, UpdateRolesInProjectSuccess, UpdateRolesInProjectFailure } from \"./current-project.actions\";\nimport { CurrentProjectActionTypes } from \"./current-project.types\";\nimport { selectUserId } from \"../user/user.selectors\";\nimport { deleteProject } from \"../all-projects/all-projects.actions\";\nimport { selectCurrentProjectId } from \"./current-project.selectors\";\nimport currentProjectReducer from \"./current-project.reducer\";\nimport { setUserPermission } from \"../user/user.actions\";\nexport function* fetchCurrentProject({\n  payload\n}) {\n  try {\n    const projectId = payload;\n    const userId = yield select(selectUserId);\n    const token = localStorage.getItem(\"token\");\n    let currentProject = yield fetch(`http://127.0.0.1:5000/project/${projectId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        role: \"ADMIN\",\n        authorization: `Bearer ${token}`\n      }\n    });\n    currentProject = yield currentProject.json();\n    console.log(\"saga\", currentProject);\n    currentProject.done ? yield put(fetchCurrentProjectSuccess(currentProject.project)) : yield put(fetchCurrentProjectFailure(\"CURRENT PROJECCT FETTCHING FAILED\"));\n  } catch (error) {\n    fetchCurrentProjectFailure(error);\n  }\n}\nexport function* deleteCurrentProject({\n  payload\n}) {\n  try {\n    const projectId = payload;\n    console.log(projectId);\n    yield put(deleteProject(projectId));\n    let userId = yield select(selectUserId);\n    userId = {\n      userId: userId\n    };\n    console.log(userId);\n    let projectDeletion = yield fetch(`http://127.0.0.1:5000/project/${projectId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userId)\n    });\n    projectDeletion = yield projectDeletion.json();\n    projectDeletion.done ? yield put(deleteCurrentProjectSuccess(projectDeletion.message)) : yield put(deleteCurrentProjectFailure(projectDeletion.error));\n  } catch (error) {\n    console.log(error);\n    deleteCurrentProjectFailure(error);\n    console.log(error);\n  }\n}\nexport function* deleteUser({\n  payload\n}) {\n  try {\n    const {\n      projectId,\n      userId\n    } = payload;\n    console.log(projectId, userId);\n    let userDeletion = yield fetch(`http://127.0.0.1:5000/deleteUser/${projectId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: userId\n    });\n    userDeletion = yield userDeletion.json();\n    userDeletion.done ? yield put(deleteCurrentuserSuccess(userDeletion.message)) : yield put(deleteCurrentuserFailure(userDeletion.error));\n  } catch (error) {\n    console.log(error);\n    deleteCurrentProjectFailure(error);\n    console.log(error);\n  }\n}\nexport function* inviteUser({\n  payload\n}) {\n  try {\n    let data = payload;\n    let projectId = yield select(selectCurrentProjectId);\n    data[\"projectId\"] = projectId;\n    let resp = yield fetch(\"http://127.0.0.1:5000/inviteUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(inviteUserSuccess(resp.message));\n      yield put(fetchCurrentProjectStart(projectId));\n    } else {\n      yield put(inviteUserFailure(resp.message));\n    }\n  } catch (error) {\n    console.log(error);\n    yield put(inviteUserFailure(error));\n  }\n}\nexport function* updateUserInProject({\n  payload\n}) {\n  try {\n    let data = payload;\n    let projectId = yield select(selectCurrentProjectId);\n    console.log(data, \"saga data\");\n    console.log(projectId);\n    let resp = yield fetch(`http://127.0.0.1:5000/updatePermissions/${projectId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(UpdateUserInProjectSuccess(resp.message));\n      yield delay(500);\n      yield put(fetchCurrentProjectStart(projectId));\n    } else {\n      yield put(UpdateUserInProjectFailure(resp.message));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* updatePublishedInProject() {\n  try {\n    console.log(\"Inside update published saga\");\n    let projectId = yield select(selectCurrentProjectId);\n    let resp = yield fetch(`http://127.0.0.1:5000/publish/${projectId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(UpdatePublishedInProjectSuccess(resp.message));\n      yield delay(500);\n      yield put(fetchCurrentProjectStart(projectId));\n    } else {\n      yield put(UpdatePublishedInProjectFailure(resp.message));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* updateRoles({\n  payload\n}) {\n  try {\n    let data = payload;\n    let projectId = yield select(selectCurrentProjectId);\n    let resp = yield fetch(`http://127.0.0.1:5000/updateRoles/${projectId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(UpdateRolesInProjectSuccess(resp.message));\n      yield delay(500);\n      yield put(fetchCurrentProjectStart(projectId));\n    } else {\n      yield put(UpdateRolesInProjectFailure(resp.message));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* onCurrentProjectFetchStart() {\n  yield takeLatest(CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START, fetchCurrentProject);\n}\nexport function* onCurrentProjectDeleteStart() {\n  yield takeLatest(CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_START, deleteCurrentProject);\n}\nexport function* onInviteUserStart() {\n  yield takeLatest(CurrentProjectActionTypes.INVITE_USER_START, inviteUser);\n}\nexport function* onUpdateUserStart() {\n  yield takeLatest(CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_START, updateUserInProject);\n}\nexport function* onDeleteUserStart() {\n  yield takeLatest(CurrentProjectActionTypes.DELETE_USER_START, deleteUser);\n}\nexport function* onUpdateRolesStart() {\n  yield takeLatest(CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_START, updateRoles);\n}\nexport function* onUpdatePublishedStart() {\n  yield takeLatest(CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_START, updatePublishedInProject);\n}\nexport function* currentProjectSagas() {\n  yield all([call(onCurrentProjectFetchStart), call(onCurrentProjectDeleteStart), call(onInviteUserStart), call(onUpdateUserStart), call(onUpdatePublishedStart), call(onUpdateRolesStart), call(onDeleteUserStart)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/current-project/current-project.sagas.js"],"names":["all","call","put","takeLatest","select","delay","UpdatePublishedInProjectFailure","UpdatePublishedInProjectSuccess","deleteCurrentProjectFailure","deleteCurrentProjectSuccess","fetchCurrentProjectFailure","fetchCurrentProjectStart","fetchCurrentProjectSuccess","inviteUserFailure","inviteUserSuccess","UpdateUserInProjectFailure","UpdateUserInProjectSuccess","UpdateRolesInProjectSuccess","UpdateRolesInProjectFailure","CurrentProjectActionTypes","selectUserId","deleteProject","selectCurrentProjectId","currentProjectReducer","setUserPermission","fetchCurrentProject","payload","projectId","userId","token","localStorage","getItem","currentProject","fetch","method","headers","role","authorization","json","console","log","done","project","error","deleteCurrentProject","projectDeletion","body","JSON","stringify","message","deleteUser","userDeletion","deleteCurrentuserSuccess","deleteCurrentuserFailure","inviteUser","data","resp","updateUserInProject","updatePublishedInProject","updateRoles","onCurrentProjectFetchStart","FETCH_CURRENT_PROJECT_START","onCurrentProjectDeleteStart","DELETE_CURRENT_PROJECT_START","onInviteUserStart","INVITE_USER_START","onUpdateUserStart","UPDATE_USER_IN_PROJECT_START","onDeleteUserStart","DELETE_USER_START","onUpdateRolesStart","UPDATE_ROLES_IN_PROJECT_START","onUpdatePublishedStart","UPDATE_PUBLISHED_IN_PROJECT_START","currentProjectSagas"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest, select, delay } from \"redux-saga/effects\";\r\nimport {\r\n  UpdatePublishedInProjectFailure,\r\n  UpdatePublishedInProjectSuccess,\r\n  deleteCurrentProjectFailure,\r\n  deleteCurrentProjectSuccess,\r\n  fetchCurrentProjectFailure,\r\n  fetchCurrentProjectStart,\r\n  fetchCurrentProjectSuccess,\r\n  inviteUserFailure,\r\n  inviteUserSuccess,\r\n  UpdateUserInProjectFailure,\r\n  UpdateUserInProjectSuccess,\r\n  UpdateRolesInProjectSuccess,\r\n  UpdateRolesInProjectFailure,\r\n} from \"./current-project.actions\";\r\nimport { CurrentProjectActionTypes } from \"./current-project.types\";\r\nimport { selectUserId } from \"../user/user.selectors\";\r\nimport { deleteProject } from \"../all-projects/all-projects.actions\";\r\nimport { selectCurrentProjectId } from \"./current-project.selectors\";\r\nimport currentProjectReducer from \"./current-project.reducer\";\r\nimport { setUserPermission } from \"../user/user.actions\";\r\n\r\nexport function* fetchCurrentProject({ payload }) {\r\n  try {\r\n    const projectId = payload;\r\n    const userId = yield select(selectUserId);\r\n    const token = localStorage.getItem(\"token\");\r\n    let currentProject = yield fetch(\r\n      `http://127.0.0.1:5000/project/${projectId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          role: \"ADMIN\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    currentProject = yield currentProject.json();\r\n \r\n    console.log(\"saga\", currentProject);\r\n    currentProject.done\r\n      ? yield put(fetchCurrentProjectSuccess(currentProject.project))\r\n      : yield put(\r\n          fetchCurrentProjectFailure(\"CURRENT PROJECCT FETTCHING FAILED\")\r\n        );\r\n  } catch (error) {\r\n    fetchCurrentProjectFailure(error);\r\n  }\r\n}\r\n\r\nexport function* deleteCurrentProject({ payload }) {\r\n  try {\r\n    const projectId = payload;\r\n    console.log(projectId);\r\n    yield put(deleteProject(projectId));\r\n    let userId = yield select(selectUserId);\r\n    userId = { userId: userId };\r\n    console.log(userId);\r\n    let projectDeletion = yield fetch(\r\n      `http://127.0.0.1:5000/project/${projectId}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userId),\r\n      }\r\n    );\r\n    projectDeletion = yield projectDeletion.json();\r\n    projectDeletion.done\r\n      ? yield put(deleteCurrentProjectSuccess(projectDeletion.message))\r\n      : yield put(deleteCurrentProjectFailure(projectDeletion.error));\r\n  } catch (error) {\r\n    console.log(error);\r\n    deleteCurrentProjectFailure(error);\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* deleteUser({ payload }) {\r\n  try {\r\n    const {projectId, userId} = payload;\r\n    console.log(projectId, userId);\r\n\r\n    let userDeletion = yield fetch(\r\n      `http://127.0.0.1:5000/deleteUser/${projectId}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: userId,\r\n      }\r\n    );\r\n    userDeletion = yield userDeletion.json();\r\n    userDeletion.done\r\n      ? yield put(deleteCurrentuserSuccess(userDeletion.message))\r\n      : yield put(deleteCurrentuserFailure(userDeletion.error));\r\n  } catch (error) {\r\n    console.log(error);\r\n    deleteCurrentProjectFailure(error);\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* inviteUser({ payload }) {\r\n  try {\r\n    let data = payload;\r\n    let projectId = yield select(selectCurrentProjectId);\r\n    data[\"projectId\"] = projectId;\r\n    let resp = yield fetch(\"http://127.0.0.1:5000/inviteUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    resp = yield resp.json();\r\n    if (resp.done) {\r\n      yield put(inviteUserSuccess(resp.message));\r\n      yield put(fetchCurrentProjectStart(projectId));\r\n    } else {\r\n      yield put(inviteUserFailure(resp.message));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(inviteUserFailure(error));\r\n  }\r\n}\r\n\r\nexport function* updateUserInProject({ payload }) {\r\n  try {\r\n    let data = payload;\r\n    let projectId = yield select(selectCurrentProjectId);\r\n    console.log(data, \"saga data\");\r\n    console.log(projectId);\r\n    let resp = yield fetch(\r\n      `http://127.0.0.1:5000/updatePermissions/${projectId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    );\r\n    resp = yield resp.json();\r\n    if (resp.done) {\r\n      yield put(UpdateUserInProjectSuccess(resp.message));\r\n      yield delay(500);\r\n      yield put(fetchCurrentProjectStart(projectId));\r\n    } else {\r\n      yield put(UpdateUserInProjectFailure(resp.message));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* updatePublishedInProject() {\r\n  try {\r\n    console.log(\"Inside update published saga\");\r\n    let projectId = yield select(selectCurrentProjectId);\r\n    let resp = yield fetch(`http://127.0.0.1:5000/publish/${projectId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    resp = yield resp.json();\r\n    if (resp.done) {\r\n      yield put(UpdatePublishedInProjectSuccess(resp.message));\r\n      yield delay(500);\r\n      yield put(fetchCurrentProjectStart(projectId));\r\n    } else {\r\n      yield put(UpdatePublishedInProjectFailure(resp.message));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* updateRoles({payload}){\r\n  try {\r\n    let data = payload\r\n    let projectId = yield select(selectCurrentProjectId);\r\n    let resp = yield fetch(`http://127.0.0.1:5000/updateRoles/${projectId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n    resp = yield resp.json();\r\n    if (resp.done) {\r\n      yield put(UpdateRolesInProjectSuccess(resp.message));\r\n      yield delay(500);\r\n      yield put(fetchCurrentProjectStart(projectId));\r\n    } else {\r\n      yield put(UpdateRolesInProjectFailure(resp.message));\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function* onCurrentProjectFetchStart() {\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START,\r\n    fetchCurrentProject\r\n  );\r\n}\r\n\r\nexport function* onCurrentProjectDeleteStart() {\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_START,\r\n    deleteCurrentProject\r\n  );\r\n}\r\n\r\nexport function* onInviteUserStart() {\r\n  yield takeLatest(CurrentProjectActionTypes.INVITE_USER_START, inviteUser);\r\n}\r\n\r\nexport function* onUpdateUserStart() {\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_START,\r\n    updateUserInProject\r\n  );\r\n}\r\n\r\nexport function* onDeleteUserStart() {\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.DELETE_USER_START,\r\n    deleteUser\r\n  );\r\n}\r\n\r\nexport function* onUpdateRolesStart(){\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_START,\r\n    updateRoles\r\n  )\r\n}\r\n\r\nexport function* onUpdatePublishedStart() {\r\n  yield takeLatest(\r\n    CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_START,\r\n    updatePublishedInProject\r\n  );\r\n}\r\n\r\nexport function* currentProjectSagas() {\r\n  yield all([\r\n    call(onCurrentProjectFetchStart),\r\n    call(onCurrentProjectDeleteStart),\r\n    call(onInviteUserStart),\r\n    call(onUpdateUserStart),\r\n    call(onUpdatePublishedStart),\r\n    call(onUpdateRolesStart),\r\n    call(onDeleteUserStart)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}