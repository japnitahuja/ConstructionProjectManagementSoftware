{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\create-task-form\\\\create-task-form.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { clearTaskData, createTaskStart } from \"../../redux/all-tasks/all-tasks.actions\";\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\nimport { signOut } from \"../../redux/user/user.actions\";\nimport { Container, InfoInput, InfoTitle, InfoDiv, LongInput, LowerNavDiv, OneHalfDiv, NavBar, OneThirdDiv, Overlay, GreenButton, StepDiv, SmallCircle } from \"./create-task-form.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { selectCreateTaskStart } from \"../../redux/all-tasks/all-tasks.selectors\";\nimport { selectCreateTaskSuccessful } from \"./../../redux/all-tasks/all-tasks.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport Spinner from \"../spinner/spinner.component\";\nimport dustbin from \"../../assets/dustbin.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateTaskForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      let task = this.state.taskDetails;\n      task[name] = value;\n      this.setState({\n        taskDetails: task\n      });\n      console.log(this.state);\n    };\n\n    this.handleOnStepChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      let step = this.state.stepDetails;\n      step[name] = value;\n      console.log(this.state);\n      this.setState({\n        stepDetails: step\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.handleOnStepSubmit = e => {\n      console.log(\"step submit\");\n      e.preventDefault();\n      let steps = this.state.steps;\n      let step = this.state.stepDetails;\n      steps.push(step);\n      this.setState({\n        steps: steps,\n        stepDetails: {\n          stepName: \"\",\n          questionStatement: \"\"\n        }\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.createTask = async e => {\n      e.preventDefault();\n      let taskDetails = this.state.taskDetails;\n      taskDetails[\"steps\"] = this.state.steps;\n      console.log(taskDetails);\n      console.log(taskDetails);\n      this.props.createTask(taskDetails);\n    };\n\n    this.handleOnClick = e => {\n      let {\n        key\n      } = e.target.dataset;\n      this.setState({\n        active: key\n      });\n    };\n\n    this.state = {\n      taskDetails: {\n        taskName: \"\",\n        taskStartDate: \"\",\n        taskEndDate: \"\",\n        projectId: this.props.match.params.projectId.toString()\n      },\n      stepDetails: {\n        stepName: \"\",\n        questionStatement: \"\"\n      },\n      active: \"Steps\",\n      steps: []\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.clearTaskData();\n  }\n\n  render() {\n    let {\n      active\n    } = this.state;\n    let {\n      projectId\n    } = this.state.taskDetails;\n    console.log(this.props.createTaskStart, this.props.createTaskSuccessful);\n\n    if (this.props.createTaskStart && !this.props.createTaskSuccessful) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 14\n      }, this);\n    } else if (this.props.createTaskSuccessful) {\n      this.props.history.push(`/project/${projectId}`);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Overlay, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        children: [/*#__PURE__*/_jsxDEV(OneThirdDiv, {\n          align: \"flex-start\",\n          color: \"#205284\",\n          onClick: this.exit,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/project/${projectId}`,\n            style: {\n              textDecoration: \"none\",\n              color: \"#205284\"\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OneThirdDiv, {\n          align: \"center\",\n          style: {\n            fontWeight: \"600\"\n          },\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OneThirdDiv, {\n          align: \"flex-end\",\n          color: \"#205284\",\n          onClick: this.createTask,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LowerNavDiv, {\n        children: [/*#__PURE__*/_jsxDEV(OneHalfDiv, {\n          \"data-key\": \"Info\",\n          onClick: this.handleOnClick,\n          active: active === \"Info\",\n          children: \"INFO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OneHalfDiv, {\n          \"data-key\": \"Steps\",\n          onClick: this.handleOnClick,\n          active: active === \"Steps\",\n          children: \"STEPS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), this.state.active === \"Info\" ? /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        onChange: e => this.handleOnChange(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(LongInput, {\n            type: \"text\",\n            value: this.state.taskDetails.taskName,\n            name: \"taskName\",\n            id: \"taskName\",\n            placeholder: \"Task Title\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(InfoDiv, {\n            children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InfoInput, {\n              type: \"date\",\n              value: this.state.taskDetails.taskStartDate,\n              name: \"taskStartDate\",\n              id: \"taskStartDate\",\n              onChange: e => this.handleOnChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoDiv, {\n            children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InfoInput, {\n              type: \"date\",\n              value: this.state.taskDetails.taskEndDate,\n              name: \"taskEndDate\",\n              id: \"taskEndDate\",\n              onChange: e => this.handleOnChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(LongInput, {\n            type: \"text\",\n            value: this.state.taskDetails.taskName,\n            name: \"taskName\",\n            id: \"taskName\",\n            placeholder: \"Task Title\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            padding: \"1em 0em 0em 1em\"\n          },\n          children: /*#__PURE__*/_jsxDEV(InfoTitle, {\n            style: {\n              fontSize: \"1em\"\n            },\n            children: \"Add Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(LongInput, {\n            type: \"text\",\n            value: this.state.stepDetails.stepName,\n            name: \"stepName\",\n            id: \"stepName\",\n            placeholder: \"Step Title\",\n            onChange: e => this.handleOnStepChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LongInput, {\n            type: \"text\",\n            value: this.state.stepDetails.questionStatement,\n            name: \"questionStatement\",\n            id: \"questionStatement\",\n            placeholder: \"Step Description\",\n            onChange: e => this.handleOnStepChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          children: /*#__PURE__*/_jsxDEV(GreenButton, {\n            onClick: this.handleOnStepSubmit,\n            children: \"Add Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            padding: \"1em 0em 0em 1em\"\n          },\n          children: /*#__PURE__*/_jsxDEV(InfoTitle, {\n            style: {\n              fontSize: \"1em\"\n            },\n            children: \"Steps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"1em\"\n          },\n          children: this.state.steps.map(step => {\n            console.log(step, \"hi\");\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(StepDiv, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n                    style: {\n                      fontSize: \"1em\"\n                    },\n                    children: step.stepName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(InfoTitle, {\n                    style: {\n                      fontSize: \"1em\",\n                      fontWeight: \"300\"\n                    },\n                    children: step.questionStatement\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: dustbin\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  createTaskStart: selectCreateTaskStart,\n  createTaskSuccessful: selectCreateTaskSuccessful\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => dispatch(signOut()),\n  createTask: taskDetails => dispatch(createTaskStart(taskDetails)),\n  fetchProject: projectId => dispatch(fetchCurrentProjectStart(projectId)),\n  clearTaskData: () => dispatch(clearTaskData())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateTaskForm));","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/create-task-form/create-task-form.component.jsx"],"names":["React","Component","connect","Link","clearTaskData","createTaskStart","fetchCurrentProjectStart","signOut","Container","InfoInput","InfoTitle","InfoDiv","LongInput","LowerNavDiv","OneHalfDiv","NavBar","OneThirdDiv","Overlay","GreenButton","StepDiv","SmallCircle","withRouter","selectCreateTaskStart","selectCreateTaskSuccessful","createStructuredSelector","Spinner","dustbin","CreateTaskForm","constructor","props","handleOnChange","e","name","value","target","task","state","taskDetails","setState","console","log","handleOnStepChange","step","stepDetails","handleOnStepSubmit","preventDefault","steps","push","stepName","questionStatement","createTask","handleOnClick","key","dataset","active","taskName","taskStartDate","taskEndDate","projectId","match","params","toString","componentWillUnmount","render","createTaskSuccessful","history","exit","textDecoration","color","fontWeight","display","flexDirection","width","padding","fontSize","justifyContent","marginTop","map","mapStateToProps","mapDispatchToProps","dispatch","fetchProject"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  clearTaskData,\r\n  createTaskStart,\r\n} from \"../../redux/all-tasks/all-tasks.actions\";\r\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport {\r\n  Container,\r\n  InfoInput,\r\n  InfoTitle,\r\n  InfoDiv,\r\n  LongInput,\r\n  LowerNavDiv,\r\n  OneHalfDiv,\r\n  NavBar,\r\n  OneThirdDiv,\r\n  Overlay,\r\n  GreenButton,\r\n  StepDiv,\r\n  SmallCircle,\r\n} from \"./create-task-form.styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { selectCreateTaskStart } from \"../../redux/all-tasks/all-tasks.selectors\";\r\nimport { selectCreateTaskSuccessful } from \"./../../redux/all-tasks/all-tasks.selectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\nimport dustbin from \"../../assets/dustbin.png\";\r\n\r\nclass CreateTaskForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskDetails: {\r\n        taskName: \"\",\r\n        taskStartDate: \"\",\r\n        taskEndDate: \"\",\r\n        projectId: this.props.match.params.projectId.toString(),\r\n      },\r\n      stepDetails: {\r\n        stepName: \"\",\r\n        questionStatement: \"\",\r\n      },\r\n      active: \"Steps\",\r\n      steps: [],\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let task = this.state.taskDetails;\r\n    task[name] = value;\r\n\r\n    this.setState({ taskDetails: task });\r\n    console.log(this.state);\r\n  };\r\n\r\n  handleOnStepChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let step = this.state.stepDetails;\r\n    step[name] = value;\r\n    console.log(this.state);\r\n    this.setState({ stepDetails: step }, () => {\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  handleOnStepSubmit = (e) => {\r\n    console.log(\"step submit\");\r\n    e.preventDefault();\r\n    let steps = this.state.steps;\r\n    let step = this.state.stepDetails;\r\n    steps.push(step);\r\n    this.setState(\r\n      { steps: steps, stepDetails: { stepName: \"\", questionStatement: \"\" } },\r\n      () => {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n\r\n  createTask = async (e) => {\r\n    e.preventDefault();\r\n    let taskDetails = this.state.taskDetails;\r\n    taskDetails[\"steps\"] = this.state.steps;\r\n    console.log(taskDetails);\r\n    console.log(taskDetails);\r\n    this.props.createTask(taskDetails);\r\n  };\r\n\r\n  handleOnClick = (e) => {\r\n    let { key } = e.target.dataset;\r\n\r\n    this.setState({\r\n      active: key,\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.clearTaskData();\r\n  }\r\n\r\n  render() {\r\n    let { active } = this.state;\r\n    let { projectId } = this.state.taskDetails;\r\n\r\n    console.log(this.props.createTaskStart, this.props.createTaskSuccessful);\r\n\r\n    if (this.props.createTaskStart && !this.props.createTaskSuccessful) {\r\n      return <Spinner />;\r\n    } else if (this.props.createTaskSuccessful) {\r\n      this.props.history.push(`/project/${projectId}`);\r\n    }\r\n\r\n    return (\r\n      <Overlay>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n            <Link\r\n              to={`/project/${projectId}`}\r\n              style={{ textDecoration: \"none\", color: \"#205284\" }}\r\n            >\r\n              Cancel\r\n            </Link>\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{ fontWeight: \"600\" }}>\r\n            New Task\r\n          </OneThirdDiv>\r\n          <OneThirdDiv\r\n            align=\"flex-end\"\r\n            color=\"#205284\"\r\n            onClick={this.createTask}\r\n          >\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n        <LowerNavDiv>\r\n          <OneHalfDiv\r\n            data-key=\"Info\"\r\n            onClick={this.handleOnClick}\r\n            active={active === \"Info\"}\r\n          >\r\n            INFO\r\n          </OneHalfDiv>\r\n          <OneHalfDiv\r\n            data-key=\"Steps\"\r\n            onClick={this.handleOnClick}\r\n            active={active === \"Steps\"}\r\n          >\r\n            STEPS\r\n          </OneHalfDiv>\r\n        </LowerNavDiv>\r\n\r\n        {this.state.active === \"Info\" ? (\r\n          <form\r\n            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            onChange={(e) => this.handleOnChange(e)}\r\n          >\r\n            <div>\r\n              <LongInput\r\n                type=\"text\"\r\n                value={this.state.taskDetails.taskName}\r\n                name=\"taskName\"\r\n                id=\"taskName\"\r\n                placeholder=\"Task Title\"\r\n                onChange={(e) => this.handleOnChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <Container>\r\n              <InfoDiv>\r\n                <InfoTitle>Start Date</InfoTitle>\r\n                <InfoInput\r\n                  type=\"date\"\r\n                  value={this.state.taskDetails.taskStartDate}\r\n                  name=\"taskStartDate\"\r\n                  id=\"taskStartDate\"\r\n                  onChange={(e) => this.handleOnChange(e)}\r\n                  required\r\n                />\r\n              </InfoDiv>\r\n\r\n              <InfoDiv>\r\n                <InfoTitle>End Date</InfoTitle>\r\n                <InfoInput\r\n                  type=\"date\"\r\n                  value={this.state.taskDetails.taskEndDate}\r\n                  name=\"taskEndDate\"\r\n                  id=\"taskEndDate\"\r\n                  onChange={(e) => this.handleOnChange(e)}\r\n                  required\r\n                />\r\n              </InfoDiv>\r\n            </Container>\r\n          </form>\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <LongInput\r\n                type=\"text\"\r\n                value={this.state.taskDetails.taskName}\r\n                name=\"taskName\"\r\n                id=\"taskName\"\r\n                placeholder=\"Task Title\"\r\n                onChange={(e) => this.handleOnChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", padding: \"1em 0em 0em 1em\" }}>\r\n              <InfoTitle style={{ fontSize: \"1em\" }}>Add Step</InfoTitle>\r\n            </div>\r\n\r\n            <div>\r\n              <LongInput\r\n                type=\"text\"\r\n                value={this.state.stepDetails.stepName}\r\n                name=\"stepName\"\r\n                id=\"stepName\"\r\n                placeholder=\"Step Title\"\r\n                onChange={(e) => this.handleOnStepChange(e)}\r\n                required\r\n              />\r\n              <LongInput\r\n                type=\"text\"\r\n                value={this.state.stepDetails.questionStatement}\r\n                name=\"questionStatement\"\r\n                id=\"questionStatement\"\r\n                placeholder=\"Step Description\"\r\n                onChange={(e) => this.handleOnStepChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <GreenButton onClick={this.handleOnStepSubmit}>\r\n                Add Step\r\n              </GreenButton>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", padding: \"1em 0em 0em 1em\" }}>\r\n              <InfoTitle style={{ fontSize: \"1em\" }}>Steps</InfoTitle>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              {this.state.steps.map((step) => {\r\n                console.log(step, \"hi\");\r\n                return (\r\n                  <>\r\n                    <StepDiv>\r\n                      <div>\r\n                        <InfoTitle style={{ fontSize: \"1em\" }}>\r\n                          {step.stepName}\r\n                        </InfoTitle>\r\n                        <InfoTitle\r\n                          style={{ fontSize: \"1em\", fontWeight: \"300\" }}\r\n                        >\r\n                          {step.questionStatement}\r\n                        </InfoTitle>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <img src={dustbin} />\r\n                      </div>\r\n                    </StepDiv>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  createTaskStart: selectCreateTaskStart,\r\n  createTaskSuccessful: selectCreateTaskSuccessful,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createTask: (taskDetails) => dispatch(createTaskStart(taskDetails)),\r\n  fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId)),\r\n  clearTaskData: () => dispatch(clearTaskData()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CreateTaskForm));\r\n"]},"metadata":{},"sourceType":"module"}