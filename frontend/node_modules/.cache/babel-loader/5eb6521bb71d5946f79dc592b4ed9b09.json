{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\purchase-orders-list-admin\\\\purchase-orders-list-admin.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport SearchBar from \"../search-bar/search-bar.component\";\nimport { PODetailsDiv, PODiv, PONameDiv, TinyText, POGreyHeading, BigText } from \"./purchase-orders-list-admin.styles\";\nimport tick from \"../../assets/tick.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PurchaseOrderListAdmin extends React.Component {\n  render() {\n    let purchaseOrders = this.props.purchaseOrders;\n    console.log(purchaseOrders);\n    let purchasedItemsAmounts = [];\n    let purchasedItemPaid = [];\n    let openAmount = 0;\n    purchaseOrders.map(({\n      purchasedItems,\n      paid\n    }) => {\n      let Amount = 0;\n      purchasedItems.map(({\n        itemNumber,\n        itemValue\n      }) => {\n        Amount += itemNumber * itemValue;\n      });\n      purchasedItemsAmounts.push(Amount);\n\n      if (paid) {\n        purchasedItemPaid.push(Amount);\n      } else {\n        purchasedItemPaid.push(0);\n      }\n    });\n    console.log(purchasedItemsAmounts, purchasedItemPaid);\n\n    const sum = (accumulator, currentValue) => accumulator + currentValue;\n\n    openAmount = purchasedItemsAmounts.reduce(sum);\n\n    if (!purchaseOrders) {\n      purchaseOrders = [];\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"5em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(POGreyHeading, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"OPEN: $\", openAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"STATUS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), purchaseOrders.map(({\n        orderFrom,\n        totalOrderAmount,\n        totalPaidAmount,\n        _id,\n        PoTitle\n      }, index) => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/purchaseOrder/${_id}`,\n          style: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(PODiv, {\n            children: [/*#__PURE__*/_jsxDEV(PONameDiv, {\n              children: [/*#__PURE__*/_jsxDEV(BigText, {\n                children: PoTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(BigText, {\n                children: PoTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TinyText, {\n                children: purchasedItemsAmounts[index] === purchasedItemPaid[index] ? \"Paid\" : \"Open\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PODetailsDiv, {\n              children: [/*#__PURE__*/_jsxDEV(BigText, {\n                children: purchasedItemPaid[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TinyText, {\n                children: 1000 + index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TinyText, {\n                children: 1000 + index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, _id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchaseOrderListAdmin);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/purchase-orders-list-admin/purchase-orders-list-admin.component.jsx"],"names":["React","connect","Link","createStructuredSelector","SearchBar","PODetailsDiv","PODiv","PONameDiv","TinyText","POGreyHeading","BigText","tick","PurchaseOrderListAdmin","Component","render","purchaseOrders","props","console","log","purchasedItemsAmounts","purchasedItemPaid","openAmount","map","purchasedItems","paid","Amount","itemNumber","itemValue","push","sum","accumulator","currentValue","reduce","marginBottom","orderFrom","totalOrderAmount","totalPaidAmount","_id","PoTitle","index","textDecoration","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport SearchBar from \"../search-bar/search-bar.component\";\r\nimport {\r\n  PODetailsDiv,\r\n  PODiv,\r\n  PONameDiv,\r\n  TinyText,\r\n  POGreyHeading,\r\n  BigText,\r\n} from \"./purchase-orders-list-admin.styles\";\r\nimport tick from \"../../assets/tick.jpg\";\r\n\r\nclass PurchaseOrderListAdmin extends React.Component {\r\n  render() {\r\n    let purchaseOrders = this.props.purchaseOrders;\r\n    console.log(purchaseOrders);\r\n    let purchasedItemsAmounts = [];\r\n    let purchasedItemPaid = [];\r\n    let openAmount = 0;\r\n\r\n    purchaseOrders.map(({ purchasedItems, paid }) => {\r\n      let Amount = 0;\r\n      purchasedItems.map(({ itemNumber, itemValue }) => {\r\n        Amount += itemNumber * itemValue;\r\n      });\r\n      purchasedItemsAmounts.push(Amount);\r\n      if (paid) {\r\n        purchasedItemPaid.push(Amount);\r\n      } else {\r\n        purchasedItemPaid.push(0);\r\n      }\r\n    });\r\n\r\n    console.log(purchasedItemsAmounts, purchasedItemPaid);\r\n    const sum = (accumulator, currentValue) => accumulator + currentValue;\r\n    openAmount = purchasedItemsAmounts.reduce(sum);\r\n\r\n    if (!purchaseOrders) {\r\n      purchaseOrders = [];\r\n    }\r\n    return (\r\n      <div style={{ marginBottom: \"5em\" }}>\r\n        <POGreyHeading>\r\n          <div>OPEN: ${openAmount}</div>\r\n          <div>STATUS</div>\r\n        </POGreyHeading>\r\n        {purchaseOrders.map(\r\n          (\r\n            { orderFrom, totalOrderAmount, totalPaidAmount, _id, PoTitle },\r\n            index\r\n          ) => {\r\n            return (\r\n              <Link\r\n                to={`/purchaseOrder/${_id}`}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <PODiv key={_id}>\r\n                  <PONameDiv>\r\n                    <BigText>{PoTitle}</BigText>\r\n                    <BigText>{PoTitle}</BigText>\r\n                    <TinyText>\r\n                      {purchasedItemsAmounts[index] === purchasedItemPaid[index]\r\n                        ? \"Paid\"\r\n                        : \"Open\"}\r\n                    </TinyText>\r\n                  </PONameDiv>\r\n                  <PODetailsDiv>\r\n                    <BigText>{purchasedItemPaid[index]}</BigText>\r\n                    <TinyText>{1000 + index}</TinyText>\r\n                    <TinyText>{1000 + index}</TinyText>\r\n                  </PODetailsDiv>\r\n                </PODiv>\r\n              </Link>\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PurchaseOrderListAdmin);\r\n"]},"metadata":{},"sourceType":"module"}