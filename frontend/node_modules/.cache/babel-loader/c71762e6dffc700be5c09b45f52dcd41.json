{"ast":null,"code":"import { OrganisationActionTypes } from \"./organisation.types\";\nexport const createOrganisationStart = taskDetails => ({\n  type: OrganisationActionTypes.CREATE_ORGANISATION_START,\n  payload: taskDetails\n});\nexport const createOrganisationSucessful = message => ({\n  type: OrganisationActionTypes.CREATE_ORGANISATION_SUCCESS,\n  payload: message\n});\nexport const createOrganisationFail = errorMessage => ({\n  type: OrganisationActionTypes.CREATE_ORGANISATION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchAllOrganisationsStart = userId => ({\n  type: OrganisationActionTypes.FETCH_ALL_ORGANISATIONS_START,\n  payload: userId\n});\nexport const fetchAllOrganisationSuccess = organisation => ({\n  type: OrganisationActionTypes.FETCH_ALL_ORGANISATIONS_SUCCESS,\n  payload: organisation\n});\nexport const fetchAllOrganisationFailure = error => ({\n  type: OrganisationActionTypes.FETCH_ALL_ORGANISATIONS_FAILURE,\n  payload: error\n});\nexport const fetchOrganisationStart = orgId => ({\n  type: OrganisationActionTypes.FETCH_ORGANISATION_START,\n  payload: orgId\n});\nexport const fetchOrganisationSuccess = organisation => ({\n  type: OrganisationActionTypes.FETCH_ORGANISATION_SUCCESS,\n  payload: organisation\n});\nexport const fetchOrganisationFailure = error => ({\n  type: OrganisationActionTypes.FETCH_ORGANISATION_FAILURE,\n  payload: error\n});\nexport const clearAllData = () => ({\n  type: OrganisationActionTypes.CLEAR_ALL_ORGANISATION_DATA\n});","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/organisation/organisation.actions.js"],"names":["OrganisationActionTypes","createOrganisationStart","taskDetails","type","CREATE_ORGANISATION_START","payload","createOrganisationSucessful","message","CREATE_ORGANISATION_SUCCESS","createOrganisationFail","errorMessage","CREATE_ORGANISATION_FAILURE","fetchAllOrganisationsStart","userId","FETCH_ALL_ORGANISATIONS_START","fetchAllOrganisationSuccess","organisation","FETCH_ALL_ORGANISATIONS_SUCCESS","fetchAllOrganisationFailure","error","FETCH_ALL_ORGANISATIONS_FAILURE","fetchOrganisationStart","orgId","FETCH_ORGANISATION_START","fetchOrganisationSuccess","FETCH_ORGANISATION_SUCCESS","fetchOrganisationFailure","FETCH_ORGANISATION_FAILURE","clearAllData","CLEAR_ALL_ORGANISATION_DATA"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,sBAAxC;AAEA,OAAO,MAAMC,uBAAuB,GAAIC,WAAD,KAAkB;AACvDC,EAAAA,IAAI,EAAEH,uBAAuB,CAACI,yBADyB;AAEvDC,EAAAA,OAAO,EAAEH;AAF8C,CAAlB,CAAhC;AAKP,OAAO,MAAMI,2BAA2B,GAAIC,OAAD,KAAc;AACvDJ,EAAAA,IAAI,EAAEH,uBAAuB,CAACQ,2BADyB;AAEvDH,EAAAA,OAAO,EAAEE;AAF8C,CAAd,CAApC;AAKP,OAAO,MAAME,sBAAsB,GAAIC,YAAD,KAAmB;AACvDP,EAAAA,IAAI,EAAEH,uBAAuB,CAACW,2BADyB;AAEvDN,EAAAA,OAAO,EAAEK;AAF8C,CAAnB,CAA/B;AAKP,OAAO,MAAME,0BAA0B,GAAIC,MAAD,KAAa;AACrDV,EAAAA,IAAI,EAAEH,uBAAuB,CAACc,6BADuB;AAErDT,EAAAA,OAAO,EAAEQ;AAF4C,CAAb,CAAnC;AAKP,OAAO,MAAME,2BAA2B,GAAIC,YAAD,KAAmB;AAC5Db,EAAAA,IAAI,EAAEH,uBAAuB,CAACiB,+BAD8B;AAE5DZ,EAAAA,OAAO,EAAEW;AAFmD,CAAnB,CAApC;AAKP,OAAO,MAAME,2BAA2B,GAAIC,KAAD,KAAY;AACrDhB,EAAAA,IAAI,EAAEH,uBAAuB,CAACoB,+BADuB;AAErDf,EAAAA,OAAO,EAAEc;AAF4C,CAAZ,CAApC;AAKP,OAAO,MAAME,sBAAsB,GAAIC,KAAD,KAAY;AAChDnB,EAAAA,IAAI,EAAEH,uBAAuB,CAACuB,wBADkB;AAEhDlB,EAAAA,OAAO,EAAEiB;AAFuC,CAAZ,CAA/B;AAKP,OAAO,MAAME,wBAAwB,GAAIR,YAAD,KAAmB;AACzDb,EAAAA,IAAI,EAAEH,uBAAuB,CAACyB,0BAD2B;AAEzDpB,EAAAA,OAAO,EAAEW;AAFgD,CAAnB,CAAjC;AAKP,OAAO,MAAMU,wBAAwB,GAAIP,KAAD,KAAY;AAClDhB,EAAAA,IAAI,EAAEH,uBAAuB,CAAC2B,0BADoB;AAElDtB,EAAAA,OAAO,EAAEc;AAFyC,CAAZ,CAAjC;AAKP,OAAO,MAAMS,YAAY,GAAG,OAAO;AACjCzB,EAAAA,IAAI,EAAEH,uBAAuB,CAAC6B;AADG,CAAP,CAArB","sourcesContent":["import { OrganisationActionTypes } from \"./organisation.types\";\r\n\r\nexport const createOrganisationStart = (taskDetails) => ({\r\n  type: OrganisationActionTypes.CREATE_ORGANISATION_START,\r\n  payload: taskDetails,\r\n});\r\n\r\nexport const createOrganisationSucessful = (message) => ({\r\n  type: OrganisationActionTypes.CREATE_ORGANISATION_SUCCESS,\r\n  payload: message,\r\n});\r\n\r\nexport const createOrganisationFail = (errorMessage) => ({\r\n  type: OrganisationActionTypes.CREATE_ORGANISATION_FAILURE,\r\n  payload: errorMessage,\r\n});\r\n\r\nexport const fetchAllOrganisationsStart = (userId) => ({\r\n  type: OrganisationActionTypes.FETCH_ALL_ORGANISATIONS_START,\r\n  payload: userId,\r\n});\r\n\r\nexport const fetchAllOrganisationSuccess = (organisation) => ({\r\n  type: OrganisationActionTypes.FETCH_ALL_ORGANISATIONS_SUCCESS,\r\n  payload: organisation,\r\n});\r\n\r\nexport const fetchAllOrganisationFailure = (error) => ({\r\n  type: OrganisationActionTypes.FETCH_ALL_ORGANISATIONS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchOrganisationStart = (orgId) => ({\r\n  type: OrganisationActionTypes.FETCH_ORGANISATION_START,\r\n  payload: orgId,\r\n});\r\n\r\nexport const fetchOrganisationSuccess = (organisation) => ({\r\n  type: OrganisationActionTypes.FETCH_ORGANISATION_SUCCESS,\r\n  payload: organisation,\r\n});\r\n\r\nexport const fetchOrganisationFailure = (error) => ({\r\n  type: OrganisationActionTypes.FETCH_ORGANISATION_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const clearAllData = () => ({\r\n  type: OrganisationActionTypes.CLEAR_ALL_ORGANISATION_DATA,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}