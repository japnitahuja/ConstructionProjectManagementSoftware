{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\create-step-form\\\\create-step-form.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStepStart } from \"../../redux/all-steps/all-steps.actions\";\nimport { createTaskStart } from \"../../redux/all-tasks/all-tasks.actions\";\nimport { signOut } from \"../../redux/user/user.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateStepForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      let step = this.state.stepDetails;\n      step[name] = value;\n      this.setState({\n        stepDetails: step\n      });\n    };\n\n    this.createStep = e => {\n      e.preventDefault();\n      let stepDetails = this.state.stepDetails;\n      const {\n        createStep\n      } = this.props;\n      createStep(stepDetails);\n      console.log(stepDetails); // window.location.reload()\n    };\n\n    this.state = {\n      stepDetails: {\n        stepName: '',\n        questionStatement: '',\n        questionType: '',\n        taskId: this.props.taskId.toString()\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        onChange: e => this.handleOnChange(e),\n        onSubmit: this.createStep,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"stepName\",\n            children: \" Step Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.stepDetails.stepName,\n            name: \"stepName\",\n            id: \"stepName\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"questionStatement\",\n            children: \" Question Statement: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.stepDetails.questionStatement,\n            name: \"questionStatement\",\n            id: \"questionStatement\",\n            onChange: e => this.handleOnChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"questionType\",\n            children: \" Question Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.stepDetails.questionType,\n            name: \"questionType\",\n            id: \"questionType\",\n            onChange: e => this.handleOnChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Create Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => dispatch(signOut()),\n  createStep: stepDetails => dispatch(createStepStart(stepDetails))\n});\n\nexport default connect(null, mapDispatchToProps)(CreateStepForm);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/create-step-form/create-step-form.component.jsx"],"names":["React","Component","connect","createStepStart","createTaskStart","signOut","CreateStepForm","constructor","props","handleOnChange","e","name","value","target","step","state","stepDetails","setState","createStep","preventDefault","console","log","stepName","questionStatement","questionType","taskId","toString","render","display","flexDirection","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStepStart } from \"../../redux/all-steps/all-steps.actions\";\r\nimport { createTaskStart} from \"../../redux/all-tasks/all-tasks.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\n\r\n\r\nclass CreateStepForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stepDetails: {\r\n        stepName: '',\r\n        questionStatement: '',\r\n        questionType: '',\r\n        taskId: this.props.taskId.toString()\r\n      },\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let step = this.state.stepDetails;\r\n    step[name] = value;\r\n    this.setState({ stepDetails: step });\r\n  };\r\n\r\n  createStep = (e) => {\r\n    e.preventDefault();\r\n    let stepDetails = this.state.stepDetails;\r\n    const {createStep} = this.props;\r\n    createStep(stepDetails)\r\n    console.log(stepDetails)\r\n    // window.location.reload()\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n          onSubmit={this.createStep}\r\n        >\r\n          <div>\r\n            <label htmlFor=\"stepName\"> Step Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.stepDetails.stepName}\r\n              name=\"stepName\"\r\n              id=\"stepName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required/>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"questionStatement\"> Question Statement: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.stepDetails.questionStatement}\r\n              name=\"questionStatement\"\r\n              id=\"questionStatement\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"questionType\"> Question Type </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.stepDetails.questionType}\r\n              name=\"questionType\"\r\n              id=\"questionType\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              />\r\n          </div>\r\n          \r\n          <div>\r\n            <input type=\"submit\" value=\"Create Step\" />\r\n   \r\n          </div>\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createStep: (stepDetails) => dispatch(createStepStart(stepDetails))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateStepForm);\r\n"]},"metadata":{},"sourceType":"module"}