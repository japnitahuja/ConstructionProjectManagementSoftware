{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\desktop\\\\github\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\all-projects\\\\all-projects.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { createProjectStart, fetchProjectsStart } from \"../../redux/all-projects/all-projects.actions\";\nimport { selectUserProjects } from \"../../redux/all-projects/all-projects.selectors\";\nimport { signOut } from \"../../redux/user/user.actions\";\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllProjects extends Component {\n  componentDidMount() {\n    const {\n      fetchProjects\n    } = this.props;\n    fetchProjects();\n  }\n\n  render() {\n    const {\n      projects\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: projects ? console.log(projects) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  name: selectCurrentUserFirstName,\n  projects: selectUserProjects\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => dispatch(signOut()),\n  createProject: projectDetails => dispatch(createProjectStart(projectDetails)),\n  fetchProjects: () => dispatch(fetchProjectsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllProjects);","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/pages/all-projects/all-projects.js"],"names":["React","Component","connect","createStructuredSelector","createProjectStart","fetchProjectsStart","selectUserProjects","signOut","selectCurrentUserFirstName","AllProjects","componentDidMount","fetchProjects","props","render","projects","console","log","mapStateToProps","name","mapDispatchToProps","dispatch","createProject","projectDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,+CAAvD;AACA,SAASC,kBAAT,QAAmC,iDAAnC;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,0BAAT,QAA2C,iCAA3C;;;AAEC,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAChCS,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA;AAAD,QAAkB,KAAKC,KAA7B;AACDD,IAAAA,aAAa;AACf;;AACFE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKF,KAAxB;AACA,wBACI;AAAA,gBAEQE,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAAH,GAA2B;AAF3C;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAdgC;;AAiBrC,MAAMG,eAAe,GAAGd,wBAAwB,CAAC;AAC7Ce,EAAAA,IAAI,EAAEV,0BADuC;AAE7CM,EAAAA,QAAQ,EAAER;AAFmC,CAAD,CAAhD;;AAKE,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,OAAO,EAAE,MAAMa,QAAQ,CAACb,OAAO,EAAR,CADiB;AAExCc,EAAAA,aAAa,EAAGC,cAAD,IAAoBF,QAAQ,CAAChB,kBAAkB,CAACkB,cAAD,CAAnB,CAFH;AAGxCX,EAAAA,aAAa,EAAG,MAAMS,QAAQ,CAACf,kBAAkB,EAAnB;AAHU,CAAf,CAA3B;;AAMA,eAAeH,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { createProjectStart, fetchProjectsStart } from \"../../redux/all-projects/all-projects.actions\";\r\nimport { selectUserProjects } from \"../../redux/all-projects/all-projects.selectors\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\r\n\r\n class AllProjects extends Component {\r\n     componentDidMount(){\r\n         const {fetchProjects} = this.props;\r\n        fetchProjects()\r\n     }\r\n    render() {\r\n        const {projects} = this.props\r\n        return (\r\n            <div>\r\n                {\r\n                    projects ? console.log(projects) : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    name: selectCurrentUserFirstName,\r\n    projects: selectUserProjects\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    signOut: () => dispatch(signOut()),\r\n    createProject: (projectDetails) => dispatch(createProjectStart(projectDetails)),\r\n    fetchProjects : () => dispatch(fetchProjectsStart())\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(AllProjects);\r\n\r\n"]},"metadata":{},"sourceType":"module"}