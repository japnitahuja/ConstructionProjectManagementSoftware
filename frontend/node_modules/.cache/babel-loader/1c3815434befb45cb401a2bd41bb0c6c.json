{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { signUpFail, signUpSuccesful } from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\nexport function* signUp({\n  payload\n}) {\n  console.log(\"Sign Up has started.\");\n  console.log(payload);\n\n  try {\n    let data = payload;\n    console.log(JSON.stringify(data));\n    let resp = yield fetch(\"http://127.0.0.1:5000/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(resp);\n    resp = yield resp.json();\n    console.log(resp);\n    const user = yield resp.user;\n    const token = yield resp.token;\n    console.log(\"user is\", user);\n    console.log(\"token is\", token);\n\n    if (resp.done) {\n      //sign in function\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      yield put(signUpSuccesful(user));\n    } else {\n      yield put(signUpFail(\"Failed to sign up.\"));\n    }\n  } catch (error) {\n    yield put(signUpFail(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/redux/user/user.sagas.js"],"names":["all","call","put","takeLatest","signUpFail","signUpSuccesful","UserActionTypes","signUp","payload","console","log","data","JSON","stringify","resp","fetch","method","headers","body","json","user","token","done","localStorage","setItem","error","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,gBAA5C;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEE,MAAG;AACC,QAAIG,IAAI,GAAGH,OAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAZ;AAEA,QAAIG,IAAI,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACrDC,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF4C;AAKrDC,MAAAA,IAAI,EAAEN,IAAI,CAACC,SAAL,CAAeF,IAAf;AAL+C,KAAjC,CAAtB;AAQAF,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAA,IAAAA,IAAI,GAAG,MAAMA,IAAI,CAACK,IAAL,EAAb;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,UAAMM,IAAI,GAAG,MAAMN,IAAI,CAACM,IAAxB;AACA,UAAMC,KAAK,GAAG,MAAMP,IAAI,CAACO,KAAzB;AAEAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBU,IAAvB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBW,KAAxB;;AAEA,QAAIP,IAAI,CAACQ,IAAT,EAAe;AACb;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACC,SAAL,CAAeO,IAAf,CAA7B;AACA,YAAMlB,GAAG,CAACG,eAAe,CAACe,IAAD,CAAhB,CAAT;AACD,KALD,MAKO;AACL,YAAMlB,GAAG,CAACE,UAAU,CAAC,oBAAD,CAAX,CAAT;AACD;AACJ,GA7BD,CA8BI,OAAOqB,KAAP,EAAc;AACV,UAAMvB,GAAG,CAACE,UAAU,CAACqB,KAAD,CAAX,CAAT;AACD;AAEV;AAGD,OAAO,UAAUC,aAAV,GAA0B;AAC/B,QAAMvB,UAAU,CAACG,eAAe,CAACqB,aAAjB,EAAgCpB,MAAhC,CAAhB;AACD;AAED,OAAO,UAAUqB,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACyB,aAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { signUpFail, signUpSuccesful } from \"./user.actions\";\r\nimport { UserActionTypes } from \"./user.types\";\r\n\r\nexport function* signUp({ payload }) {\r\n  console.log(\"Sign Up has started.\");\r\n  console.log(payload);\r\n\r\n    try{\r\n        let data = payload;\r\n        console.log(JSON.stringify(data));\r\n      \r\n        let resp = yield fetch(\"http://127.0.0.1:5000/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(data),\r\n        });\r\n      \r\n        console.log(resp);\r\n        resp = yield resp.json();\r\n        console.log(resp);\r\n        const user = yield resp.user;\r\n        const token = yield resp.token;\r\n      \r\n        console.log(\"user is\", user);\r\n        console.log(\"token is\", token);\r\n      \r\n        if (resp.done) {\r\n          //sign in function\r\n          localStorage.setItem(\"token\", token);\r\n          localStorage.setItem(\"user\", JSON.stringify(user));\r\n          yield put(signUpSuccesful(user));\r\n        } else {\r\n          yield put(signUpFail(\"Failed to sign up.\"));\r\n        }\r\n    }\r\n        catch (error) {\r\n            yield put(signUpFail(error));\r\n          }\r\n\r\n}\r\n\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onSignUpStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}