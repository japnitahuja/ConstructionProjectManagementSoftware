{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { signUpFail, signUpSuccesful } from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\nexport function* signUp({\n  payload\n}) {\n  console.log(\"Sign Up has started.\");\n  console.log(payload);\n\n  try {\n    let resp = yield fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n    const user = yield resp.user.json();\n    const token = yield resp.token;\n    console.log(\"user is\", user);\n    console.log(\"token is\", token);\n\n    if (resp.done) {\n      //sign in function\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      yield put(signUpSuccesful(user));\n    } else {\n      yield put(signUpFail(\"Failed to sign up.\"));\n    }\n  } catch (error) {\n    yield put(signUpFail(error));\n  }\n}\nexport function* onSignUpStart() {\n  console.log('running sign up start saga');\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/redux/user/user.sagas.js"],"names":["all","call","put","takeLatest","signUpFail","signUpSuccesful","UserActionTypes","signUp","payload","console","log","resp","fetch","method","headers","body","JSON","stringify","user","json","token","done","localStorage","setItem","error","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,gBAA5C;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEA,MAAI;AACF,QAAIG,IAAI,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AAChCC,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFuB;AAKhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,OAAf;AAL0B,KAAZ,CAAtB;AAQA,UAAMU,IAAI,GAAG,MAAMP,IAAI,CAACO,IAAL,CAAUC,IAAV,EAAnB;AACA,UAAMC,KAAK,GAAG,MAAMT,IAAI,CAACS,KAAzB;AAEAX,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBQ,IAAvB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBU,KAAxB;;AAEA,QAAIT,IAAI,CAACU,IAAT,EAAe;AACb;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B;AACA,YAAMhB,GAAG,CAACG,eAAe,CAACa,IAAD,CAAhB,CAAT;AACD,KALD,MAKO;AACL,YAAMhB,GAAG,CAACE,UAAU,CAAC,oBAAD,CAAX,CAAT;AACD;AACF,GAvBD,CAuBE,OAAOoB,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACE,UAAU,CAACoB,KAAD,CAAX,CAAT;AACD;AACF;AAED,OAAO,UAAUC,aAAV,GAA0B;AAC7BhB,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACF,QAAMP,UAAU,CAACG,eAAe,CAACoB,aAAjB,EAAgCnB,MAAhC,CAAhB;AACD;AAED,OAAO,UAAUoB,SAAV,GAAsB;AAC3B,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACwB,aAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { signUpFail, signUpSuccesful } from \"./user.actions\";\r\nimport { UserActionTypes } from \"./user.types\";\r\n\r\nexport function* signUp({ payload }) {\r\n  console.log(\"Sign Up has started.\");\r\n  console.log(payload);\r\n\r\n  try {\r\n    let resp = yield fetch(\"/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    const user = yield resp.user.json();\r\n    const token = yield resp.token;\r\n\r\n    console.log(\"user is\", user);\r\n    console.log(\"token is\", token);\r\n\r\n    if (resp.done) {\r\n      //sign in function\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      yield put(signUpSuccesful(user));\r\n    } else {\r\n      yield put(signUpFail(\"Failed to sign up.\"));\r\n    }\r\n  } catch (error) {\r\n    yield put(signUpFail(error));\r\n  }\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    console.log('running sign up start saga')\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onSignUpStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}