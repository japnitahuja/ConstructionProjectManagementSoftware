{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\step-item\\\\step-item.component.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, Circle, ProgressBar, Progress, ProgressDiv } from \"./step-item.styles\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { deleteCurrentTaskStart } from \"../../redux/current-task/current-task.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass StepItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskDetails: this.props.taskDetails\n    };\n  } // deleteTask(e){\n  //     console.log(\"delete button\", this.state.taskDetails._id);\n  //     this.props.deleteTask(this.state.taskDetails._id);\n  // }\n\n\n  render() {\n    const {\n      _id,\n      index,\n      taskName,\n      completionPercentage,\n      completedSteps,\n      totalSteps\n    } = this.state.taskDetails;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"10px\",\n        border: \"1px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/step/${_id}`,\n        style: {\n          textDecoration: 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(SmallText, {\n          children: [\"STEP - \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(BigText, {\n          children: [/*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 28\n          }, this), stepName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: _id,\n        onClick: e => this.deleteStep(e),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), questionStatement ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isQuestionAnswered ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Question has been answered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }, this) : null\n      }, void 0, false) : null, isStepDone ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Step Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 31\n      }, this) : null]\n    }, _id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTask: taskId => dispatch(deleteCurrentTaskStart(taskId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepItem);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/step-item/step-item.component.jsx"],"names":["React","Component","Link","ProjectDiv","LeftDiv","RightDiv","BigText","SmallText","Circle","ProgressBar","Progress","ProgressDiv","connect","createStructuredSelector","deleteCurrentTaskStart","StepItem","constructor","props","state","taskDetails","render","_id","index","taskName","completionPercentage","completedSteps","totalSteps","padding","border","textDecoration","stepName","e","deleteStep","questionStatement","isQuestionAnswered","isStepDone","mapStateToProps","mapDispatchToProps","dispatch","deleteTask","taskId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwCC,OAAxC,EAAiDC,SAAjD,EAA4DC,MAA5D,EAAoEC,WAApE,EAAiFC,QAAjF,EAA2FC,WAA3F,QAA6G,oBAA7G;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,sBAAT,QAAuC,+CAAvC;;;;AAEA,MAAMC,QAAN,SAAuBd,SAAvB,CAAgC;AAC5Be,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AADf,KAAb;AAGH,GAP2B,CAS5B;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,GAAD;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA,oBAAvB;AAA6CC,MAAAA,cAA7C;AAA6DC,MAAAA;AAA7D,QAA2E,KAAKR,KAAL,CAAWC,WAA5F;AACA,wBACI;AAEI,MAAA,KAAK,EAAE;AAAEQ,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,MAAM,EAAE;AAA3B,OAFX;AAAA,8BAII,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,SAAQP,GAAI,EAAvB;AAA0B,QAAA,KAAK,EAAE;AAACQ,UAAAA,cAAc,EAAC;AAAhB,SAAjC;AAAA,gCACE,QAAC,SAAD;AAAA,gCAAmBP,KAAK,GAAC,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAA,kCAAS,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAAT,EAAoBQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAQ,QAAA,EAAE,EAAET,GAAZ;AAAiB,QAAA,OAAO,EAAGU,CAAD,IAAK,KAAKC,UAAL,CAAgBD,CAAhB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EASKE,iBAAiB,gBAChB;AAAA,kBACGC,kBAAkB,gBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADiB,GAEf;AAHN,uBADgB,GAMd,IAfR,EAgBKC,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAAgC,IAhB/C;AAAA,OACSd,GADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBF;;AApC0B;;AAuChC,MAAMe,eAAe,GAAGvB,wBAAwB,CAAC,EAAD,CAAhD;;AAIE,MAAMwB,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,UAAU,EAAIC,MAAD,IAAYF,QAAQ,CAACxB,sBAAsB,CAAC0B,MAAD,CAAvB;AADO,CAAf,CAA3B;;AAIA,eAAe5B,OAAO,CACpBwB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbtB,QAHa,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, Circle, ProgressBar, Progress, ProgressDiv} from \"./step-item.styles\";\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { deleteCurrentTaskStart } from \"../../redux/current-task/current-task.actions\";\r\n\r\nclass StepItem extends Component{\r\n    constructor(props){\r\n        super(props);\r\n      \r\n        this.state = {\r\n            taskDetails: this.props.taskDetails\r\n        };\r\n    }\r\n\r\n    // deleteTask(e){\r\n    //     console.log(\"delete button\", this.state.taskDetails._id);\r\n    //     this.props.deleteTask(this.state.taskDetails._id);\r\n    // }\r\n    \r\n    render (){\r\n        const {_id, index, taskName, completionPercentage, completedSteps, totalSteps} = this.state.taskDetails;\r\n        return (\r\n            <div\r\n                key={_id}\r\n                style={{ padding: \"10px\", border: \"1px solid black\" }}\r\n              >\r\n                <Link to={`/step/${_id}`} style={{textDecoration:'none'}}>\r\n                  <SmallText>STEP - {index+1}</SmallText>\r\n                  <BigText><Circle />{stepName}</BigText>\r\n                </Link>\r\n                <button id={_id} onClick={(e)=>this.deleteStep(e)}>Delete</button>\r\n                {questionStatement ? (\r\n                  <>\r\n                    {isQuestionAnswered ? (\r\n                      <div>Question has been answered</div>\r\n                    ) : null}\r\n                  </>\r\n                ) : null}\r\n                {isStepDone ? <div>Step Completed!</div> : null}\r\n              </div>\r\n        \r\n    )}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    \r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    deleteTask : (taskId) => dispatch(deleteCurrentTaskStart(taskId))\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(StepItem);\r\n"]},"metadata":{},"sourceType":"module"}