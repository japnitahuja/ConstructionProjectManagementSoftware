{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\addrole-form\\\\addrole-form.component.js\";\nimport React, { Component } from \"react\";\nimport { LongButton } from \"../long-button/long-button.styles\";\nimport { AddRoleDiv } from \"./addrole-form.styles\";\nimport { SmallText } from \"../project-item/project-item.styles\";\nimport { connect } from \"react-redux\";\nimport { inviteUserStart } from \"../../redux/current-project/current-project.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentProjectRoles } from \"../../redux/current-project/current-project.selectors\";\nimport { FormHeading, FormLabel, FormInput, FormDiv } from \"../create-project-form/create-project-form.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddRoleForm extends Component {\n  constructor() {\n    super();\n\n    this.handleOnChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      console.log(name, value);\n    };\n\n    this.state = {\n      newRole: '',\n      usersAssigned: []\n    };\n  }\n\n  render() {\n    const {\n      projectRoles\n    } = this.props;\n    console.log('project roles', projectRoles);\n    return /*#__PURE__*/_jsxDEV(AddRoleDiv, {\n      children: [/*#__PURE__*/_jsxDEV(FormHeading, {\n        children: [\"Create a New Role\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.exit,\n          style: {\n            textDecoration: 'none',\n            background: 'none',\n            border: 'none',\n            fontSize: '1.4em',\n            color: 'rgba(102,102,102,0.6)'\n          },\n          children: \" \\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormDiv, {\n        onChange: e => this.handleOnChange(e),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"role\",\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"A role helps assign a specific set of Subjects to a user. Which type of position would you like to create?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"text\",\n            value: this.state.newRole,\n            name: \"role\",\n            id: \"role\",\n            onChange: e => this.handleOnChange(e),\n            placeholder: \"ex) Site Manager, Intern \",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  // name: selectCurrentUserFirstName,\n  // projects: selectUserProjects\n  projectRoles: selectCurrentProjectRoles\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // signOut: () => dispatch(signOut())\n  inviteUser: userDetails => dispatch(inviteUserStart(userDetails))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRoleForm);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/addrole-form/addrole-form.component.js"],"names":["React","Component","LongButton","AddRoleDiv","SmallText","connect","inviteUserStart","createStructuredSelector","selectCurrentProjectRoles","FormHeading","FormLabel","FormInput","FormDiv","AddRoleForm","constructor","handleOnChange","e","name","value","target","console","log","state","newRole","usersAssigned","render","projectRoles","props","exit","textDecoration","background","border","fontSize","color","textAlign","mapStateToProps","mapDispatchToProps","dispatch","inviteUser","userDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,qDAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,yBAAT,QAA0C,uDAA1C;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2CC,OAA3C,QAAyD,mDAAzD;;;AAEA,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAClCa,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,cATc,GASIC,CAAD,IAAO;AACtB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB;AACD,KAZa;;AAEZ,SAAKI,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAC,EADG;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAKD;;AAODC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAiB,KAAKC,KAA5B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,YAA7B;AACA,wBACE,QAAC,UAAD;AAAA,8BACE,QAAC,WAAD;AAAA,qDAEI;AAAS,UAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,IAA7B;AAAmC,UAAA,KAAK,EAAE;AAACC,YAAAA,cAAc,EAAC,MAAhB;AAC1BC,YAAAA,UAAU,EAAE,MADc;AAE1BC,YAAAA,MAAM,EAAE,MAFkB;AAG1BC,YAAAA,QAAQ,EAAC,OAHiB;AAI1BC,YAAAA,KAAK,EAAC;AAJoB,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAGjB,CAAD,IAAO,KAAKD,cAAL,CAAoBC,CAApB,CAA1B;AAAA,+BACE;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,OAAO,EAAC,MAAnB;AAA0B,YAAA,KAAK,EAAE;AAACkB,cAAAA,SAAS,EAAC;AAAX,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,OAFpB;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,EAAE,EAAC,MAJL;AAKE,YAAA,QAAQ,EAAGP,CAAD,IAAO,KAAKD,cAAL,CAAoBC,CAApB,CALnB;AAME,YAAA,WAAW,EAAG,2BANhB;AAOE,YAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AAjDiC;;AAoDpC,MAAMmB,eAAe,GAAG5B,wBAAwB,CAAC;AAC/C;AACA;AACAmB,EAAAA,YAAY,EAAElB;AAHiC,CAAD,CAAhD;;AAOA,MAAM4B,kBAAkB,GAAIC,QAAD,KAAe;AACxC;AACAC,EAAAA,UAAU,EAAGC,WAAD,IAAiBF,QAAQ,CAAC/B,eAAe,CAACiC,WAAD,CAAhB;AAFG,CAAf,CAA3B;;AAKA,eAAelC,OAAO,CAAC8B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { LongButton } from \"../long-button/long-button.styles\";\r\nimport { AddRoleDiv } from \"./addrole-form.styles\";\r\nimport { SmallText } from \"../project-item/project-item.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { inviteUserStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentProjectRoles } from \"../../redux/current-project/current-project.selectors\";\r\nimport {FormHeading, FormLabel, FormInput, FormDiv} from \"../create-project-form/create-project-form.styles\"\r\n\r\nclass AddRoleForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      newRole:'',\r\n      usersAssigned: []\r\n\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(name, value)\r\n  }\r\n  \r\n  render() {\r\n    const {projectRoles} = this.props\r\n    console.log('project roles', projectRoles)\r\n    return (\r\n      <AddRoleDiv>\r\n        <FormHeading>\r\n            Create a New Role\r\n            <button  onClick={this.props.exit} style={{textDecoration:'none', \r\n                            background: 'none', \r\n                            border: 'none', \r\n                            fontSize:'1.4em', \r\n                            color:'rgba(102,102,102,0.6)'}}> &times;</button>\r\n        </FormHeading>\r\n\r\n        <FormDiv onChange={(e) => this.handleOnChange(e)} >\r\n          <div>\r\n            <FormLabel htmlFor=\"role\" style={{textAlign:\"left\"}}> \r\n              A role helps assign a specific set of Subjects to a user. \r\n              Which type of position would you like to create?\r\n            </FormLabel>\r\n            <br/>\r\n            <br/>\r\n            <FormInput\r\n              type=\"text\"\r\n              value={this.state.newRole}\r\n              name=\"role\"\r\n              id=\"role\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              placeholder = \"ex) Site Manager, Intern \"\r\n              required />\r\n          </div>\r\n        </FormDiv>\r\n      </AddRoleDiv>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  // name: selectCurrentUserFirstName,\r\n  // projects: selectUserProjects\r\n  projectRoles: selectCurrentProjectRoles,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // signOut: () => dispatch(signOut())\r\n  inviteUser: (userDetails) => dispatch(inviteUserStart(userDetails)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRoleForm);\r\n"]},"metadata":{},"sourceType":"module"}