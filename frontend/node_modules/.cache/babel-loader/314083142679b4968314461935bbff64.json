{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\project\\\\project.page.js\";\nimport React, { Component } from 'react';\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport CreateTaskForm from '../../components/create-task-form/create-task-form.component';\nimport { fetchCurrentProjectStart } from '../../redux/current-project/current-project.actions';\nimport { selectCurrentProjectName, selectCurrentProjectStatus, selectCurrentProjectTasks } from '../../redux/current-project/current-project.selectors';\nimport { TaskNav } from \"../../components/task-nav/task-nav.component\";\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\nimport TaskListContainer from '../../components/tasks-list/tasks-list.container';\nimport SearchBar from '../../components/search-bar/search-bar.component';\nimport AdminPanelTaskPage from '../../components/admin-panel-task-page/admin-panel-task-page.component';\nimport ToggleButton from '../../components/toggle-button/toggle-button.component';\nimport CreateButton from '../../components/create-button/create-button.component';\nimport NoResult from '../../components/no-result/no-result.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Project extends Component {\n  constructor() {\n    super();\n\n    this.adminToggle = () => {\n      this.setState(prevState => ({\n        adminSwitch: !prevState.adminSwitch\n      }));\n    };\n\n    this.search = searchedText => {\n      let temp = this.props.tasks;\n\n      if (searchedText) {\n        temp = temp.filter(({\n          taskName\n        }) => {\n          return taskName.toLowerCase().includes(searchedText.toLowerCase());\n        });\n      }\n\n      this.setState({\n        tasksList: temp\n      });\n    };\n\n    this.toggleSearchBar = () => {\n      this.setState(prevState => ({\n        showSearch: !prevState.showSearch\n      }));\n    };\n\n    this.toggleFilter = () => {\n      this.setState(prevState => ({\n        showFilter: !prevState.showFilter\n      }));\n    };\n\n    this.state = {\n      adminSwitch: false,\n      tasksList: [],\n      showSearch: false,\n      showFilter: false\n    };\n  }\n\n  componentDidMount() {\n    const projectId = this.props.match.params.projectId;\n    console.log(\"mount\");\n    this.props.fetchProjects(projectId);\n    this.setState({\n      tasksList: this.props.tasks\n    });\n  }\n\n  render() {\n    const {\n      projectName\n    } = this.props;\n    const {\n      tasksList\n    } = this.state;\n    console.log('project page');\n    console.log(tasksList);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"5em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TaskNav, {\n        title: projectName,\n        toggleSearch: this.toggleSearchBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), this.state.showSearch ? /*#__PURE__*/_jsxDEV(SearchBar, {\n        placeholder: \"Search Tasks...\",\n        search: this.search,\n        toggleFilter: this.toggleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 41\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '1em',\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n          borderBottom: '1px solid #BCC5D3'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          onToggleFunction: this.adminToggle,\n          checked: this.state.adminSwitch,\n          color: \"#6C5FCF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '1em',\n            color: '#666666',\n            margin: '0',\n            paddingLeft: '0.5em'\n          },\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), this.state.adminSwitch ? /*#__PURE__*/_jsxDEV(AdminPanelTaskPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 42\n      }, this) : null, tasksList.length === 0 ? /*#__PURE__*/_jsxDEV(NoResult, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(TaskListContainer, {\n        tasks: tasksList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        projectId: this.props.match.params.projectId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LowerNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), this.state.showFilter ? /*#__PURE__*/_jsxDEV(Overlay, {\n        backgroundcolor: \"rgba(0,0,0,0.3)\",\n        style: {\n          bottom: \"0\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  projectName: selectCurrentProjectName,\n  projectStatus: selectCurrentProjectStatus,\n  tasks: selectCurrentProjectTasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProjects: projectId => dispatch(fetchCurrentProjectStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/project/project.page.js"],"names":["React","Component","createStructuredSelector","connect","CreateTaskForm","fetchCurrentProjectStart","selectCurrentProjectName","selectCurrentProjectStatus","selectCurrentProjectTasks","TaskNav","LowerNavBar","TaskListContainer","SearchBar","AdminPanelTaskPage","ToggleButton","CreateButton","NoResult","Project","constructor","adminToggle","setState","prevState","adminSwitch","search","searchedText","temp","props","tasks","filter","taskName","toLowerCase","includes","tasksList","toggleSearchBar","showSearch","toggleFilter","showFilter","state","componentDidMount","projectId","match","params","console","log","fetchProjects","render","projectName","marginBottom","padding","display","flexDirection","justifyContent","alignItems","borderBottom","fontSize","color","margin","paddingLeft","length","bottom","height","mapStateToProps","projectStatus","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport CreateTaskForm from '../../components/create-task-form/create-task-form.component';\r\nimport { fetchCurrentProjectStart } from '../../redux/current-project/current-project.actions';\r\nimport { selectCurrentProjectName, selectCurrentProjectStatus, selectCurrentProjectTasks } from '../../redux/current-project/current-project.selectors';\r\nimport {TaskNav} from \"../../components/task-nav/task-nav.component\"\r\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\r\nimport TaskListContainer from '../../components/tasks-list/tasks-list.container';\r\nimport SearchBar from '../../components/search-bar/search-bar.component';\r\nimport AdminPanelTaskPage from '../../components/admin-panel-task-page/admin-panel-task-page.component';\r\nimport ToggleButton from '../../components/toggle-button/toggle-button.component'\r\nimport CreateButton from '../../components/create-button/create-button.component'\r\nimport NoResult from '../../components/no-result/no-result.component';\r\n\r\nclass Project extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          adminSwitch: false,\r\n          tasksList: [], \r\n          showSearch: false,\r\n          showFilter: false\r\n        };\r\n      }\r\n\r\n    componentDidMount(){\r\n        const projectId = this.props.match.params.projectId;\r\n        console.log(\"mount\")\r\n        this.props.fetchProjects(projectId);\r\n        this.setState({tasksList:this.props.tasks})\r\n    }\r\n\r\n    adminToggle = () => {\r\n        this.setState((prevState) => ({\r\n            adminSwitch: !prevState.adminSwitch\r\n        }));\r\n    }\r\n\r\n    search = (searchedText) => {\r\n        let temp = this.props.tasks\r\n\r\n        if(searchedText){\r\n          temp = temp.filter(({taskName})=>{\r\n            return taskName.toLowerCase().includes(searchedText.toLowerCase())\r\n          })\r\n        }\r\n        \r\n     \r\n        this.setState({tasksList: temp})\r\n        \r\n     }\r\n\r\n     toggleSearchBar = () => {\r\n        this.setState((prevState) => ({\r\n          showSearch: !prevState.showSearch\r\n        }));\r\n      \r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState((prevState) => ({\r\n            showFilter: !prevState.showFilter\r\n          }));\r\n    }\r\n    \r\n    render() {\r\n        const {projectName} = this.props;\r\n        const {tasksList} = this.state;\r\n        console.log('project page')\r\n        console.log(tasksList)\r\n        \r\n        return (\r\n             <div style={{marginBottom:\"5em\"}}>\r\n                <TaskNav title = {projectName} toggleSearch={this.toggleSearchBar}/>\r\n                {this.state.showSearch? <SearchBar placeholder='Search Tasks...' search={this.search} toggleFilter={this.toggleFilter}/> : null}\r\n                <div style={{\r\n                    padding: '1em',\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'flex-end',\r\n                    alignItems: 'center',\r\n                    borderBottom: '1px solid #BCC5D3'}}>\r\n                    <ToggleButton \r\n                        onToggleFunction = {this.adminToggle} \r\n                        checked = {this.state.adminSwitch} \r\n                        color=\"#6C5FCF\"/>\r\n                    <p style={{\r\n                            fontSize: '1em',\r\n                            color:'#666666', \r\n                            margin:'0', \r\n                            paddingLeft:'0.5em'}}>\r\n                    Admin\r\n                    </p>\r\n                </div>\r\n                \r\n                {this.state.adminSwitch? <AdminPanelTaskPage/> : null}\r\n                {tasksList.length === 0?<NoResult/>:<TaskListContainer tasks = {tasksList}/>}\r\n                <CreateTaskForm projectId = {this.props.match.params.projectId}/>\r\n                <LowerNavBar/>\r\n\r\n                {this.state.showFilter? \r\n                <Overlay \r\n                    backgroundcolor = \"rgba(0,0,0,0.3)\" \r\n                    style={{bottom:\"0\",height:\"100%\", display:\"flex\", flexDirection:\"row\", justifyContent:\"center\", alignItems:\"center\"}}>\r\n                \r\n                </Overlay> : null\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    projectName: selectCurrentProjectName,\r\n    projectStatus: selectCurrentProjectStatus,\r\n    tasks: selectCurrentProjectTasks\r\n});\r\n  \r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchProjects : (projectId) => dispatch(fetchCurrentProjectStart(projectId))\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);"]},"metadata":{},"sourceType":"module"}