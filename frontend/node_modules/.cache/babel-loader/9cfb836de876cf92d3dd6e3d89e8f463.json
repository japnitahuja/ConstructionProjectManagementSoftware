{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\project-purchase-orders\\\\project-purchase-orders.jsx\";\nimport React, { Component } from \"react\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport PurchaseOrderList from \"../../components/purchase-orders-list/purchase-orders-list.component\";\nimport { selectCurrentProjectName, selectCurrentProjectPurchaseOrders } from \"../../redux/current-project/current-project.selectors\";\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\nimport LowerNavBar from \"../../components/lower-nav-bar/lower-nav-bar.component\";\nimport PurchaseOrderListContainer from \"../../components/purchase-orders-list/purchase-order-lists.container\";\nimport { TaskNav } from \"../../components/task-nav/task-nav.component\";\nimport SearchBar from \"../../components/search-bar/search-bar.component\";\nimport NoResult from \"../../components/no-result/no-result.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectPurchaseOrders extends Component {\n  constructor() {\n    super();\n\n    this.toggleSearch = () => {};\n\n    this.search = searchedText => {\n      let temp = this.props.purchaseOrders;\n\n      if (searchedText) {\n        temp = temp.filter(({\n          purchasedItem\n        }) => {\n          return purchasedItem.toLowerCase().includes(searchedText.toLowerCase());\n        });\n      }\n\n      this.setState({\n        POsList: temp\n      });\n    };\n\n    this.state = {\n      POsList: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const projectId = this.props.match.params.projectId;\n    this.props.fetchProject(projectId);\n    this.setState({\n      POsList: this.props.purchaseOrders\n    });\n  }\n\n  render() {\n    const {\n      projectName,\n      purchaseOrders\n    } = this.props;\n    const {\n      POsList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TaskNav, {\n        title: projectName,\n        toggleSearch: this.toggleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        placeholder: \"Search POs...\",\n        search: this.search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), POsList.length === 0 ? /*#__PURE__*/_jsxDEV(NoResult, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(PurchaseOrderListContainer, {\n        purchaseOrders: POsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LowerNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  purchaseOrders: selectCurrentProjectPurchaseOrders,\n  projectName: selectCurrentProjectName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProject: projectId => dispatch(fetchCurrentProjectStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectPurchaseOrders);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/project-purchase-orders/project-purchase-orders.jsx"],"names":["React","Component","createStructuredSelector","connect","PurchaseOrderList","selectCurrentProjectName","selectCurrentProjectPurchaseOrders","fetchCurrentProjectStart","LowerNavBar","PurchaseOrderListContainer","TaskNav","SearchBar","NoResult","ProjectPurchaseOrders","constructor","toggleSearch","search","searchedText","temp","props","purchaseOrders","filter","purchasedItem","toLowerCase","includes","setState","POsList","state","componentDidMount","projectId","match","params","fetchProject","render","projectName","length","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,sEAA9B;AACA,SACEC,wBADF,EAEEC,kCAFF,QAGO,uDAHP;AAIA,SAASC,wBAAT,QAAyC,qDAAzC;AACA,OAAOC,WAAP,MAAwB,wDAAxB;AACA,OAAOC,0BAAP,MAAuC,sEAAvC;AACA,SAASC,OAAT,QAAwB,8CAAxB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AAEA,OAAOC,QAAP,MAAqB,gDAArB;;;AAEA,MAAMC,qBAAN,SAAoCZ,SAApC,CAA8C;AAC5Ca,EAAAA,WAAW,GAAG;AACZ;;AADY,SAYdC,YAZc,GAYC,MAAM,CAAE,CAZT;;AAAA,SAcdC,MAdc,GAcJC,YAAD,IAAkB;AACzB,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWC,cAAtB;;AAEA,UAAIH,YAAJ,EAAkB;AAChBC,QAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAY,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAuB;AACxC,iBAAOA,aAAa,CAACC,WAAd,GAA4BC,QAA5B,CAAqCP,YAAY,CAACM,WAAb,EAArC,CAAP;AACD,SAFM,CAAP;AAGD;;AAED,WAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAER;AAAX,OAAd;AACD,KAxBa;;AAEZ,SAAKS,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AACDE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,SAAS,GAAG,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBF,SAA1C;AACA,SAAKV,KAAL,CAAWa,YAAX,CAAwBH,SAAxB;AACA,SAAKJ,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC;AAAtB,KAAd;AACD;;AAgBDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,WAAF;AAAed,MAAAA;AAAf,QAAkC,KAAKD,KAA7C;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AAEA,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEO,WAAhB;AAA6B,QAAA,YAAY,EAAE,KAAKnB;AAAhD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,eAAvB;AAAuC,QAAA,MAAM,EAAE,KAAKC;AAApD;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGU,OAAO,CAACS,MAAR,KAAmB,CAAnB,gBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,0BAAD;AAA4B,QAAA,cAAc,EAAET;AAA5C;AAAA;AAAA;AAAA;AAAA,cANJ,eAQE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA3C2C;;AA8C9C,MAAMU,eAAe,GAAGlC,wBAAwB,CAAC;AAC/CkB,EAAAA,cAAc,EAAEd,kCAD+B;AAE/C4B,EAAAA,WAAW,EAAE7B;AAFkC,CAAD,CAAhD;;AAKA,MAAMgC,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,YAAY,EAAGH,SAAD,IAAeS,QAAQ,CAAC/B,wBAAwB,CAACsB,SAAD,CAAzB;AADG,CAAf,CAA3B;;AAIA,eAAe1B,OAAO,CACpBiC,eADoB,EAEpBC,kBAFoB,CAAP,CAGbxB,qBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport PurchaseOrderList from \"../../components/purchase-orders-list/purchase-orders-list.component\";\r\nimport {\r\n  selectCurrentProjectName,\r\n  selectCurrentProjectPurchaseOrders,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport LowerNavBar from \"../../components/lower-nav-bar/lower-nav-bar.component\";\r\nimport PurchaseOrderListContainer from \"../../components/purchase-orders-list/purchase-order-lists.container\";\r\nimport { TaskNav } from \"../../components/task-nav/task-nav.component\";\r\nimport SearchBar from \"../../components/search-bar/search-bar.component\";\r\n\r\nimport NoResult from \"../../components/no-result/no-result.component\";\r\n\r\nclass ProjectPurchaseOrders extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      POsList: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const projectId = this.props.match.params.projectId;\r\n    this.props.fetchProject(projectId);\r\n    this.setState({ POsList: this.props.purchaseOrders });\r\n  }\r\n\r\n  toggleSearch = () => {};\r\n\r\n  search = (searchedText) => {\r\n    let temp = this.props.purchaseOrders;\r\n\r\n    if (searchedText) {\r\n      temp = temp.filter(({ purchasedItem }) => {\r\n        return purchasedItem.toLowerCase().includes(searchedText.toLowerCase());\r\n      });\r\n    }\r\n\r\n    this.setState({ POsList: temp });\r\n  };\r\n\r\n  render() {\r\n    const { projectName, purchaseOrders } = this.props;\r\n    const { POsList } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <TaskNav title={projectName} toggleSearch={this.toggleSearch} />\r\n        <SearchBar placeholder=\"Search POs...\" search={this.search} />\r\n        {POsList.length === 0 ? (\r\n          <NoResult />\r\n        ) : (\r\n          <PurchaseOrderListContainer purchaseOrders={POsList} />\r\n        )}\r\n        <LowerNavBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  purchaseOrders: selectCurrentProjectPurchaseOrders,\r\n  projectName: selectCurrentProjectName,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectPurchaseOrders);\r\n"]},"metadata":{},"sourceType":"module"}