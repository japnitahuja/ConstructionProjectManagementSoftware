{"ast":null,"code":"import { all, call, put, takeLatest, select } from \"redux-saga/effects\";\nimport { fetchCurrentProjectFailure, fetchCurrentProjectSuccess } from \"./current-project.actions\";\nimport { CurrentProjectActionTypes } from \"./current-project.types\";\nimport { selectUserId } from \"../user/user.selectors\";\nexport function* fetchCurrentProject({\n  payload\n}) {\n  try {\n    const projectId = payload;\n    console.log(projectId);\n    let currentProject = yield fetch(`http://127.0.0.1:5000/project/${projectId}`);\n    currentProject = yield currentProject.json();\n    console.log(currentProject);\n    currentProject.done ? yield put(fetchCurrentProjectSuccess(currentProject.project)) : yield put(fetchCurrentProjectFailure('CURRENT PROJECCT FETTCHING FAILED'));\n  } catch (error) {\n    fetchCurrentProjectFailure(error);\n  }\n}\nexport function* onCurrentProjectFetchStart() {\n  yield takeLatest(CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START, fetchCurrentProject);\n}\nexport function* currentProjectSagas() {\n  yield all([call(onCurrentProjectFetchStart)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/current-project/current-project.sagas.js"],"names":["all","call","put","takeLatest","select","fetchCurrentProjectFailure","fetchCurrentProjectSuccess","CurrentProjectActionTypes","selectUserId","fetchCurrentProject","payload","projectId","console","log","currentProject","fetch","json","done","project","error","onCurrentProjectFetchStart","FETCH_CURRENT_PROJECT_START","currentProjectSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,MAArC,QAAkD,oBAAlD;AACA,SAAQC,0BAAR,EAAoCC,0BAApC,QAAsE,2BAAtE;AACA,SAASC,yBAAT,QAA0C,yBAA1C;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,OAAO,UAAUC,mBAAV,CAA8B;AAACC,EAAAA;AAAD,CAA9B,EAAwC;AAC7C,MAAI;AACA,UAAMC,SAAS,GAAGD,OAAlB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACF,QAAIG,cAAc,GAAG,MAAMC,KAAK,CAAE,iCAAgCJ,SAAU,EAA5C,CAAhC;AACAG,IAAAA,cAAc,GAAG,MAAMA,cAAc,CAACE,IAAf,EAAvB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AACAA,IAAAA,cAAc,CAACG,IAAf,GACE,MAAMf,GAAG,CAACI,0BAA0B,CAACQ,cAAc,CAACI,OAAhB,CAA3B,CADX,GAEE,MAAMhB,GAAG,CAACG,0BAA0B,CAAC,mCAAD,CAA3B,CAFX;AAGD,GATD,CASE,OAAOc,KAAP,EAAc;AACdd,IAAAA,0BAA0B,CAACc,KAAD,CAA1B;AACD;AACF;AAED,OAAO,UAAUC,0BAAV,GAAsC;AAC3C,QAAMjB,UAAU,CAACI,yBAAyB,CAACc,2BAA3B,EAAyDZ,mBAAzD,CAAhB;AACD;AAED,OAAO,UAAUa,mBAAV,GAAgC;AACrC,QAAMtB,GAAG,CAAC,CACRC,IAAI,CAACmB,0BAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import { all, call, put, takeLatest, select} from \"redux-saga/effects\";\r\nimport {fetchCurrentProjectFailure, fetchCurrentProjectSuccess } from \"./current-project.actions\";\r\nimport { CurrentProjectActionTypes } from \"./current-project.types\";\r\nimport { selectUserId } from \"../user/user.selectors\"\r\n\r\nexport function* fetchCurrentProject({payload}){\r\n  try {\r\n      const projectId = payload\r\n      console.log(projectId)\r\n    let currentProject = yield fetch(`http://127.0.0.1:5000/project/${projectId}`)\r\n    currentProject = yield currentProject.json()\r\n    console.log(currentProject)\r\n    currentProject.done\r\n    ? yield put(fetchCurrentProjectSuccess(currentProject.project))\r\n    : yield put(fetchCurrentProjectFailure('CURRENT PROJECCT FETTCHING FAILED'))\r\n  } catch (error) {\r\n    fetchCurrentProjectFailure(error)\r\n  }\r\n}\r\n\r\nexport function* onCurrentProjectFetchStart(){\r\n  yield takeLatest(CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START , fetchCurrentProject)\r\n}\r\n\r\nexport function* currentProjectSagas() {\r\n  yield all([\r\n    call(onCurrentProjectFetchStart)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}