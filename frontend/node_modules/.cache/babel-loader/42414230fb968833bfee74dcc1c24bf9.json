{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\team\\\\team.component.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentProjectId, selectCurrentProjectUsers } from \"../../redux/current-project/current-project.selectors\";\nimport AddUserForm from \"../adduser-form/adduser-form.component\";\nimport { DropDownContent, DropDownOption, LowerDiv, Overlay, FormButton, FormInverseButton, Text, SmallCircle, BigCircle, Image, TeamDiv, TeamDivItem } from \"./team.styles\";\nimport removeImage from \"../../assets/remove.png\";\nimport TeamItem from \"./teamitem.component\";\nimport { AddRoleDiv } from \"../addrole-form/addrole-form.styles\";\nimport AddRoleForm from \"../addrole-form/addrole-form.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Team extends Component {\n  constructor() {\n    super();\n\n    this.handleClickOutside = event => {\n      // console.log(this.dropdownContainer.current)\n      // console.log(event.target)\n      event.preventDefault();\n\n      if (this.dropdownContainer.current && !this.dropdownContainer.current.contains(event.target)) {\n        this.setState({\n          removeToggle: null\n        });\n      }\n    };\n\n    this.toggleRemoveDropdown = e => {\n      e.preventDefault();\n\n      if (this.state.removeToggle) {\n        this.setState({\n          removeToggle: null\n        });\n      } else {\n        this.setState({\n          removeToggle: e.target.dataset.id\n        });\n      }\n    };\n\n    this.deleteUser = e => {\n      e.preventDefault();\n      console.log(\"delete user\");\n    };\n\n    this.invite = () => {\n      if (this.state.invite == false) {\n        this.setState({\n          invite: true\n        });\n      } else {\n        this.setState({\n          invite: false\n        });\n      } //console.log(this.state.invite)\n\n    };\n\n    this.dropdownContainer = /*#__PURE__*/React.createRef();\n    this.state = {\n      userDetails: [],\n      invite: false,\n      removeToggle: null\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  render() {\n    const {\n      users\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TeamDiv, {\n        children: users.map((user, index) => {\n          console.log(user);\n          let unnamed = user.user.email.slice(0, user.user.email.indexOf(\"@\"));\n          return /*#__PURE__*/_jsxDEV(TeamItem, {\n            projectId: this.props.projectId,\n            user: user,\n            unnamed: unnamed,\n            id: user.user._id\n          }, user.user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LowerDiv, {\n        style: {\n          marginBottom: \"5em\"\n        },\n        children: [this.state.invite ? /*#__PURE__*/_jsxDEV(Overlay, {\n          backgroundcolor: \"rgba(0,0,0,0.3)\",\n          style: {\n            bottom: \"0\",\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AddRoleForm, {\n            exit: this.addRoleToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Text, {\n          style: {\n            fontSize: \"0.9em\",\n            color: \"#666666\",\n            margin: \"1.5em 0em\"\n          },\n          children: \"Need to add additional users not in Dig?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: {\n            fontSize: \"0.9em\",\n            color: \"#6C7B8A\"\n          },\n          onClick: this.invite,\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Invite now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  // projectName: selectCurrentProjectName,\n  // projectStatus: selectCurrentProjectStatus,\n  // tasks: selectCurrentProjectTasks\n  users: selectCurrentProjectUsers,\n  projectId: selectCurrentProjectId\n});\n\nconst mapDispatchToProps = dispatch => ({// fetchProjects : (projectId) => dispatch(fetchCurrentProjectStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Team);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/team/team.component.js"],"names":["React","Component","connect","createStructuredSelector","selectCurrentProjectId","selectCurrentProjectUsers","AddUserForm","DropDownContent","DropDownOption","LowerDiv","Overlay","FormButton","FormInverseButton","Text","SmallCircle","BigCircle","Image","TeamDiv","TeamDivItem","removeImage","TeamItem","AddRoleDiv","AddRoleForm","Team","constructor","handleClickOutside","event","preventDefault","dropdownContainer","current","contains","target","setState","removeToggle","toggleRemoveDropdown","e","state","dataset","id","deleteUser","console","log","invite","createRef","userDetails","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","users","props","map","user","index","unnamed","email","slice","indexOf","projectId","_id","marginBottom","bottom","height","display","flexDirection","justifyContent","addRoleToggle","fontSize","color","margin","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  selectCurrentProjectId,\r\n  selectCurrentProjectUsers,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport AddUserForm from \"../adduser-form/adduser-form.component\";\r\nimport {\r\n  DropDownContent,\r\n  DropDownOption,\r\n  LowerDiv,\r\n  Overlay,\r\n  FormButton,\r\n  FormInverseButton,\r\n  Text,\r\n  SmallCircle,\r\n  BigCircle,\r\n  Image,\r\n  TeamDiv,\r\n  TeamDivItem,\r\n} from \"./team.styles\";\r\nimport removeImage from \"../../assets/remove.png\";\r\nimport TeamItem from \"./teamitem.component\";\r\nimport { AddRoleDiv } from \"../addrole-form/addrole-form.styles\";\r\nimport AddRoleForm from \"../addrole-form/addrole-form.component\";\r\n\r\nclass Team extends Component {\r\n  constructor() {\r\n    super();\r\n    this.dropdownContainer = React.createRef();\r\n    this.state = {\r\n      userDetails: [],\r\n      invite: false,\r\n      removeToggle: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  handleClickOutside = (event) => {\r\n    // console.log(this.dropdownContainer.current)\r\n    // console.log(event.target)\r\n    event.preventDefault();\r\n    if (\r\n      this.dropdownContainer.current &&\r\n      !this.dropdownContainer.current.contains(event.target)\r\n    ) {\r\n      this.setState({ removeToggle: null });\r\n    }\r\n  };\r\n\r\n  toggleRemoveDropdown = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.removeToggle) {\r\n      this.setState({ removeToggle: null });\r\n    } else {\r\n      this.setState({ removeToggle: e.target.dataset.id });\r\n    }\r\n  };\r\n\r\n  deleteUser = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"delete user\");\r\n  };\r\n\r\n  invite = () => {\r\n    if (this.state.invite == false) {\r\n      this.setState({ invite: true });\r\n    } else {\r\n      this.setState({ invite: false });\r\n    }\r\n    //console.log(this.state.invite)\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TeamDiv>\r\n          {users.map((user, index) => {\r\n            console.log(user);\r\n            let unnamed = user.user.email.slice(\r\n              0,\r\n              user.user.email.indexOf(\"@\")\r\n            );\r\n\r\n            return (\r\n              <TeamItem\r\n                key={user.user._id}\r\n                projectId={this.props.projectId}\r\n                user={user}\r\n                unnamed={unnamed}\r\n                id={user.user._id}\r\n              ></TeamItem>\r\n            );\r\n          })}\r\n        </TeamDiv>\r\n        <LowerDiv style={{ marginBottom: \"5em\" }}>\r\n          {this.state.invite ? (\r\n            <Overlay\r\n              backgroundcolor=\"rgba(0,0,0,0.3)\"\r\n              style={{\r\n                bottom: \"0\",\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {/* <AddUserForm exit={this.invite} /> */}\r\n              <AddRoleForm exit={this.addRoleToggle}></AddRoleForm>\r\n            </Overlay>\r\n          ) : null}\r\n          <Text\r\n            style={{ fontSize: \"0.9em\", color: \"#666666\", margin: \"1.5em 0em\" }}\r\n          >\r\n            Need to add additional users not in Dig?\r\n          </Text>\r\n          <Text\r\n            style={{ fontSize: \"0.9em\", color: \"#6C7B8A\" }}\r\n            onClick={this.invite}\r\n          >\r\n            <u>Invite now</u>\r\n          </Text>\r\n        </LowerDiv>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  // projectName: selectCurrentProjectName,\r\n  // projectStatus: selectCurrentProjectStatus,\r\n  // tasks: selectCurrentProjectTasks\r\n  users: selectCurrentProjectUsers,\r\n  projectId: selectCurrentProjectId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // fetchProjects : (projectId) => dispatch(fetchCurrentProjectStart(projectId))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Team);\r\n"]},"metadata":{},"sourceType":"module"}