{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\projects-filter\\\\projects-filter.component.js\";\nimport React, { Component } from \"react\";\nimport { FormLabel, Container, FormDiv, Heading, FormButton, FormButtonsDiv } from \"./projects-filter.styles\";\nimport { connect } from \"react-redux\";\nimport { inviteUserStart, UpdateRolesInProjectStart } from \"../../redux/current-project/current-project.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport DropDown from \"../projects-filter-dropdown/projects-filter-dropdown.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProjectsFilter extends Component {\n  constructor() {\n    super();\n\n    this.changeStatus = (key, type) => {\n      console.log(key, type);\n      this.setState(this.state.type = key);\n    };\n\n    this.handleOnSubmit = e => {\n      e.preventDefault();\n      let temp = {};\n      let temp2 = '';\n\n      for (let i in this.state.projectStatus) {\n        if (i != \" \") {\n          temp2 += this.state.projectStatus[i].toUpperCase();\n        }\n      }\n\n      temp.projectStatus = temp2;\n      temp2 = '';\n\n      for (let i in this.state.projectType) {\n        if (i != \" \") {\n          temp2 += i.toUpperCase();\n        }\n      }\n\n      temp.projectType = temp2;\n      temp2 = '';\n\n      for (let i in this.state.propertyType) {\n        if (i != \" \") {\n          temp2 += i.toUpperCase();\n        }\n      }\n\n      temp.propertyType = temp2;\n      this.props.onSubmit(temp);\n      this.props.exit();\n    };\n\n    this.exit = e => {\n      this.props.onSubmit({\n        projectStatus: '',\n        projectType: '',\n        propertyType: ''\n      });\n      this.props.exit();\n    };\n\n    this.state = {\n      projectStatus: '',\n      projectType: '',\n      propertyType: '',\n      allStatus: ['All Status', 'Active', 'Planned', 'Upcoming'],\n      allPropertyTypes: ['All Property Types', 'Office', 'Retail', 'Industrial', 'Hospitality', 'Residential', 'Land', 'Agricultural', 'Senior Housing', 'Special Purpose', 'Sport Entertainment', 'Multi-family'],\n      allProjectTypes: ['All Project Types', 'Remodel', 'New Build', 'Addition']\n    };\n  }\n\n  render() {\n    let {\n      projectUsers,\n      projectRoles\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: [\"Filters\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.exit,\n            style: {\n              textDecoration: 'none',\n              background: 'none',\n              border: 'none',\n              fontSize: '1.4em',\n              color: 'rgba(102,102,102,0.6)'\n            },\n            children: \" \\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormDiv, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n            options: this.state.allStatus,\n            selected: \"All Status\",\n            onChange: this.changeStatus,\n            field: \"projectStatus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Property Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n            options: this.state.allPropertyTypes,\n            selected: \"All Property Types\",\n            onChange: this.changeStatus,\n            field: \"propertyType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Project Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n            options: this.state.allProjectTypes,\n            selected: \"All Project Types\",\n            onChange: this.changeStatus,\n            field: \"projectType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormButtonsDiv, {\n          children: [/*#__PURE__*/_jsxDEV(FormButton, {\n            border: \"1px solid #000000\",\n            color: \"#3F8CFF\",\n            bgcolor: \"#FFFFFF\",\n            width: \"40%\",\n            onClick: this.exit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            border: \"1px solid #3F8CFF\",\n            color: \"#FFFFFF\",\n            bgcolor: \"#3F8CFF\",\n            width: \"40%\",\n            onClick: this.handleOnSubmit,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsFilter);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/projects-filter/projects-filter.component.js"],"names":["React","Component","FormLabel","Container","FormDiv","Heading","FormButton","FormButtonsDiv","connect","inviteUserStart","UpdateRolesInProjectStart","createStructuredSelector","DropDown","ProjectsFilter","constructor","changeStatus","key","type","console","log","setState","state","handleOnSubmit","e","preventDefault","temp","temp2","i","projectStatus","toUpperCase","projectType","propertyType","props","onSubmit","exit","allStatus","allPropertyTypes","allProjectTypes","render","projectUsers","projectRoles","textDecoration","background","border","fontSize","color","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FormLabel,Container, FormDiv, Heading,FormButton, FormButtonsDiv } from \"./projects-filter.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { inviteUserStart, UpdateRolesInProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport DropDown from \"../projects-filter-dropdown/projects-filter-dropdown.component\"\r\nclass ProjectsFilter extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectStatus:'',\r\n      projectType:'',\r\n      propertyType:'',\r\n\r\n      allStatus: ['All Status','Active', 'Planned', 'Upcoming'],\r\n      allPropertyTypes: ['All Property Types','Office', 'Retail', 'Industrial', 'Hospitality', 'Residential', 'Land', 'Agricultural', 'Senior Housing', 'Special Purpose', 'Sport Entertainment', 'Multi-family'],\r\n      allProjectTypes: ['All Project Types','Remodel', 'New Build', 'Addition']\r\n\r\n    };\r\n  }\r\n\r\n  changeStatus = (key, type) => {\r\n    console.log(key, type)\r\n    this.setState(this.state.type = key)\r\n   \r\n  }\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault()\r\n    let temp = {}\r\n   \r\n    let temp2 = ''\r\n    for (let i in this.state.projectStatus){\r\n      if(i!=\" \"){\r\n        temp2 += this.state.projectStatus[i].toUpperCase()\r\n      }\r\n    }\r\n    temp.projectStatus = temp2\r\n    \r\n   \r\n    temp2 = ''\r\n    for (let i in this.state.projectType){\r\n      if(i!=\" \"){\r\n        temp2 += i.toUpperCase()\r\n      }\r\n    }\r\n    temp.projectType = temp2\r\n    \r\n    \r\n    temp2 = ''\r\n    for (let i in this.state.propertyType){\r\n      if(i!=\" \"){\r\n        temp2 += i.toUpperCase()\r\n      }\r\n    }\r\n    temp.propertyType = temp2\r\n   \r\n    this.props.onSubmit(temp)\r\n    this.props.exit()\r\n    \r\n  }\r\n\r\n  exit = (e) => {\r\n    this.props.onSubmit({\r\n      projectStatus:'',\r\n      projectType:'',\r\n      propertyType:''\r\n    })\r\n\r\n    this.props.exit()\r\n  }\r\n  \r\n  render() {\r\n    let {projectUsers, projectRoles} = this.props;\r\n    \r\n    return (\r\n        <>\r\n        <Container>\r\n        <Heading>\r\n          Filters\r\n\r\n          <button  onClick={this.props.exit} style={{textDecoration:'none', \r\n                                    background: 'none', \r\n                                    border: 'none', \r\n                                    fontSize:'1.4em', \r\n                                    color:'rgba(102,102,102,0.6)'}}> &times;</button>\r\n        </Heading>\r\n        \r\n        <FormDiv>\r\n          <FormLabel>\r\n            Status\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allStatus}\r\n          selected=\"All Status\"\r\n          onChange = {this.changeStatus}\r\n          field=\"projectStatus\"/>\r\n\r\n          <FormLabel>\r\n            Property Type\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allPropertyTypes}\r\n          selected=\"All Property Types\"\r\n          onChange = {this.changeStatus}\r\n          field=\"propertyType\"\r\n          />\r\n\r\n          <FormLabel>\r\n            Project Type\r\n          </FormLabel>\r\n          <DropDown \r\n          options={this.state.allProjectTypes}\r\n          selected=\"All Project Types\"\r\n          onChange = {this.changeStatus}\r\n          field=\"projectType\"/>\r\n        </FormDiv>\r\n\r\n        <FormButtonsDiv>\r\n        <FormButton \r\n            border=\"1px solid #000000\"\r\n            color=\"#3F8CFF\"\r\n            bgcolor = \"#FFFFFF\"\r\n            width=\"40%\"\r\n            onClick={this.exit}\r\n          > \r\n          Cancel\r\n          </FormButton>\r\n          <FormButton \r\n            border=\"1px solid #3F8CFF\"\r\n            color=\"#FFFFFF\"\r\n            bgcolor = \"#3F8CFF\"\r\n            width=\"40%\"\r\n            onClick={this.handleOnSubmit}\r\n          > \r\n          Create\r\n          </FormButton>\r\n        </FormButtonsDiv>\r\n       \r\n        </Container>\r\n         \r\n      </>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsFilter);\r\n"]},"metadata":{},"sourceType":"module"}