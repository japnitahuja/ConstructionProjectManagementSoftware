{"ast":null,"code":"import { CurrentProjectActionTypes } from \"./current-project.types\";\nconst INITIAL_STATE = {\n  isCurrentProjectFetching: false,\n  currentProjectId: null,\n  currentProjectName: null,\n  currentProjectStatus: null,\n  currentProjectPurchaseOrders: null,\n  currentProjectChangeOrders: null,\n  currentProjectTasks: null,\n  currentProjectMessage: null,\n  currentProjectRoles: null,\n  currentProjectUsers: null,\n  currentProjectType: null,\n  currentPropertyType: null,\n  currentProjectOwner: null,\n  currentProjectBudget: null,\n  currentProjectPunchLists: null,\n  currentProjectPublished: null,\n  errorMessage: null,\n  isCurrentProjectDeleting: false,\n  deletionMessage: null,\n  deletionError: null,\n  inviteUserStart: false,\n  inviteUserMessage: null,\n  updateUserInProjectStart: null,\n  updateUserInProjectMessage: null,\n  updatePublishedInProjectStart: null,\n  updatePublishedInProjectMessage: null,\n  updateRolesInProjectStart: null,\n  updateRolesInProjectMessage: null\n};\n\nconst currentProjectReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START:\n      return { ...state,\n        isCurrentProjectFetching: true\n      };\n\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_SUCCESS:\n      const {\n        tasks,\n        purchaseOrders,\n        _id,\n        projectName,\n        projectStatus,\n        changeOrders,\n        projectOwner,\n        projectType,\n        propertyType,\n        projectRoles,\n        projectBudget,\n        published,\n        Users,\n        punchList\n      } = action.payload;\n      return { ...state,\n        isCurrentProjectFetching: false,\n        currentProjectStatus: projectStatus,\n        currentProjectName: projectName,\n        currentProjectTasks: tasks,\n        currentProjectPurchaseOrders: purchaseOrders,\n        currentProjectChangeOrders: changeOrders,\n        currentProjectId: _id,\n        currentProjectType: projectType,\n        currentProjectOwner: projectOwner,\n        currentPropertyType: propertyType,\n        currentProjectRoles: projectRoles,\n        currentProjectUsers: Users,\n        currentProjectBudget: projectBudget,\n        currentProjectPublished: published,\n        currentProjectPunchLists: punchList,\n        currentProjectMessage: \"PROJECT FETCHED!\"\n      };\n\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_FAILURE:\n      return { ...state,\n        isCurrentProjectFetching: false,\n        errorMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_TASK_IN_REDUCER:\n      console.log(state);\n      let updatedTasks = state.currentProjectTasks.filter(task => task._id != action.payload);\n      console.log(\"current project reducer\", updatedTasks);\n      console.log(action.payload);\n      return { ...state,\n        currentProjectTasks: updatedTasks\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_START:\n      return {\n        isCurrentProjectDeleting: true\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_SUCCESS:\n      return {\n        isCurrentProjectDeleting: false,\n        deletionMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_FAILURE:\n      return {\n        isCurrentProjectDeleting: false,\n        deletionError: action.payload\n      };\n\n    case CurrentProjectActionTypes.INVITE_USER_START:\n      return { ...state,\n        inviteUserStart: true,\n        inviteUserMessage: null\n      };\n\n    case CurrentProjectActionTypes.INVITE_USER_SUCCESS:\n      return { ...state,\n        inviteUserStart: false,\n        inviteUserMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.INVITE_USER_FAILURE:\n      return { ...state,\n        inviteUserStart: false,\n        inviteUserMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_START:\n      return { ...state,\n        updateUserInProjectStart: true,\n        updateUserInProjectMessage: null\n      };\n\n    case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_SUCCESS:\n      return { ...state,\n        updateUserInProjectStart: false,\n        updateUserInProjectMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_FAILURE:\n      return { ...state,\n        updateUserInProjectStart: false,\n        updateUserInProjectMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_START:\n      return { ...state,\n        updatePublishedInProjectStart: true,\n        updatePublishedInProjectMessage: null\n      };\n\n    case CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_SUCCESS:\n      return { ...state,\n        updatePublishedInProjectStart: false,\n        updatePublishedInProjectMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_FAILURE:\n      return { ...state,\n        updatePublishedInProjectStart: false,\n        updatePublishedInProjectMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_START:\n      return { ...state,\n        updateRolesInProjectStart: true\n      };\n\n    case CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_SUCCESS:\n      return { ...state,\n        updateRolesInProjectStart: false,\n        updateRolesInProjectMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_FAILURE:\n      return { ...state,\n        updateRolesInProjectStart: false,\n        updateRolesInProjectMessage: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default currentProjectReducer;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/current-project/current-project.reducer.js"],"names":["CurrentProjectActionTypes","INITIAL_STATE","isCurrentProjectFetching","currentProjectId","currentProjectName","currentProjectStatus","currentProjectPurchaseOrders","currentProjectChangeOrders","currentProjectTasks","currentProjectMessage","currentProjectRoles","currentProjectUsers","currentProjectType","currentPropertyType","currentProjectOwner","currentProjectBudget","currentProjectPunchLists","currentProjectPublished","errorMessage","isCurrentProjectDeleting","deletionMessage","deletionError","inviteUserStart","inviteUserMessage","updateUserInProjectStart","updateUserInProjectMessage","updatePublishedInProjectStart","updatePublishedInProjectMessage","updateRolesInProjectStart","updateRolesInProjectMessage","currentProjectReducer","state","action","type","FETCH_CURRENT_PROJECT_START","FETCH_CURRENT_PROJECT_SUCCESS","tasks","purchaseOrders","_id","projectName","projectStatus","changeOrders","projectOwner","projectType","propertyType","projectRoles","projectBudget","published","Users","punchList","payload","FETCH_CURRENT_PROJECT_FAILURE","DELETE_CURRENT_TASK_IN_REDUCER","console","log","updatedTasks","filter","task","DELETE_CURRENT_PROJECT_START","DELETE_CURRENT_PROJECT_SUCCESS","DELETE_CURRENT_PROJECT_FAILURE","INVITE_USER_START","INVITE_USER_SUCCESS","INVITE_USER_FAILURE","UPDATE_USER_IN_PROJECT_START","UPDATE_USER_IN_PROJECT_SUCCESS","UPDATE_USER_IN_PROJECT_FAILURE","UPDATE_PUBLISHED_IN_PROJECT_START","UPDATE_PUBLISHED_IN_PROJECT_SUCCESS","UPDATE_PUBLISHED_IN_PROJECT_FAILURE","UPDATE_ROLES_IN_PROJECT_START","UPDATE_ROLES_IN_PROJECT_SUCCESS","UPDATE_ROLES_IN_PROJECT_FAILURE"],"mappings":"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","sourcesContent":["import { CurrentProjectActionTypes } from \"./current-project.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  isCurrentProjectFetching: false,\r\n  currentProjectId: null,\r\n  currentProjectName: null,\r\n  currentProjectStatus: null,\r\n  currentProjectPurchaseOrders: null,\r\n  currentProjectChangeOrders: null,\r\n  currentProjectTasks: null,\r\n  currentProjectMessage: null,\r\n  currentProjectRoles: null,\r\n  currentProjectUsers: null,\r\n  currentProjectType: null,\r\n  currentPropertyType: null,\r\n  currentProjectOwner: null,\r\n  currentProjectBudget:null, \r\n  currentProjectPunchLists:null, \r\n  currentProjectPublished:null,\r\n  errorMessage: null,\r\n  isCurrentProjectDeleting: false,\r\n  deletionMessage: null,\r\n  deletionError: null,\r\n  inviteUserStart: false,\r\n  inviteUserMessage: null,\r\n  updateUserInProjectStart: null,\r\n  updateUserInProjectMessage: null,\r\n  updatePublishedInProjectStart: null,\r\n  updatePublishedInProjectMessage: null,\r\n  updateRolesInProjectStart: null,\r\n  updateRolesInProjectMessage: null\r\n};\r\n\r\nconst currentProjectReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        isCurrentProjectFetching: true,\r\n      };\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_SUCCESS:\r\n      const {\r\n        tasks,\r\n        purchaseOrders,\r\n        _id,\r\n        projectName,\r\n        projectStatus,\r\n        changeOrders,\r\n        projectOwner,\r\n        projectType,\r\n        propertyType,\r\n        projectRoles,\r\n        projectBudget,\r\n        published,\r\n        Users, \r\n        punchList\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        isCurrentProjectFetching: false,\r\n        currentProjectStatus: projectStatus,\r\n        currentProjectName: projectName,\r\n        currentProjectTasks: tasks,\r\n        currentProjectPurchaseOrders: purchaseOrders,\r\n        currentProjectChangeOrders: changeOrders,\r\n        currentProjectId: _id,\r\n        currentProjectType: projectType,\r\n        currentProjectOwner: projectOwner,\r\n        currentPropertyType: propertyType,\r\n        currentProjectRoles: projectRoles,\r\n        currentProjectUsers: Users,\r\n        currentProjectBudget: projectBudget,\r\n        currentProjectPublished: published,\r\n        currentProjectPunchLists: punchList,\r\n        currentProjectMessage: \"PROJECT FETCHED!\",\r\n      };\r\n\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isCurrentProjectFetching: false,\r\n        errorMessage: action.payload,\r\n      };\r\n\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_TASK_IN_REDUCER:\r\n      console.log(state);\r\n      let updatedTasks = state.currentProjectTasks.filter(\r\n        (task) => task._id != action.payload\r\n      );\r\n      console.log(\"current project reducer\", updatedTasks);\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        currentProjectTasks: updatedTasks,\r\n      };\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_START:\r\n      return {\r\n        isCurrentProjectDeleting: true,\r\n      };\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_SUCCESS:\r\n      return {\r\n        isCurrentProjectDeleting: false,\r\n        deletionMessage: action.payload,\r\n      };\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_FAILURE:\r\n      return {\r\n        isCurrentProjectDeleting: false,\r\n        deletionError: action.payload,\r\n      };\r\n      case CurrentProjectActionTypes.INVITE_USER_START:\r\n        return{\r\n          ...state,\r\n          inviteUserStart: true,\r\n          inviteUserMessage: null\r\n        }\r\n      case CurrentProjectActionTypes.INVITE_USER_SUCCESS:\r\n        return{\r\n          ...state,\r\n          inviteUserStart: false,\r\n          inviteUserMessage: action.payload\r\n        }\r\n      case CurrentProjectActionTypes.INVITE_USER_FAILURE:\r\n        return{\r\n          ...state,\r\n          inviteUserStart: false,\r\n          inviteUserMessage: action.payload\r\n        }\r\n        case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_START:\r\n          return{\r\n            ...state,\r\n            updateUserInProjectStart: true,\r\n            updateUserInProjectMessage: null\r\n          }\r\n        case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_SUCCESS:\r\n          return{\r\n            ...state,\r\n            updateUserInProjectStart: false,\r\n            updateUserInProjectMessage: action.payload\r\n          }\r\n        case CurrentProjectActionTypes.UPDATE_USER_IN_PROJECT_FAILURE:\r\n          return{\r\n            ...state,\r\n            updateUserInProjectStart: false,\r\n            updateUserInProjectMessage: action.payload\r\n          }\r\n          case CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_START:\r\n          return{\r\n            ...state,\r\n            updatePublishedInProjectStart: true,\r\n            updatePublishedInProjectMessage: null\r\n          }\r\n        case CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_SUCCESS:\r\n          return{\r\n            ...state,\r\n            updatePublishedInProjectStart: false,\r\n            updatePublishedInProjectMessage: action.payload\r\n          }\r\n        case CurrentProjectActionTypes.UPDATE_PUBLISHED_IN_PROJECT_FAILURE:\r\n          return{\r\n            ...state,\r\n            updatePublishedInProjectStart: false,\r\n            updatePublishedInProjectMessage: action.payload\r\n          }\r\n        case CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_START:\r\n          return{\r\n            ...state,\r\n            updateRolesInProjectStart: true\r\n          }\r\n        case CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_SUCCESS:\r\n          return{\r\n            ...state,\r\n            updateRolesInProjectStart: false,\r\n            updateRolesInProjectMessage: action.payload\r\n          }\r\n        case CurrentProjectActionTypes.UPDATE_ROLES_IN_PROJECT_FAILURE:\r\n          return{\r\n            ...state,\r\n            updateRolesInProjectStart: false,\r\n            updateRolesInProjectMessage: action.payload\r\n          }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentProjectReducer;\r\n"]},"metadata":{},"sourceType":"module"}