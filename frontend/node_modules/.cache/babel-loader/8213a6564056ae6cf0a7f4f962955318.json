{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\project-item\\\\project-item.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { createStructuredSelector } from 'reselect';\nimport { deleteCurrentProjectStart } from '../../redux/current-project/current-project.actions';\nimport { DeleteButton } from '../delete-button/delete-button.styles';\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText } from \"./project-item.styles\";\nimport tick from '../../assets/tick.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProjectItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      projectName: this.props.projectName,\n      totalTasks: this.props.totalTasks,\n      completedTasks: this.props.completedTasks\n    };\n  }\n\n  deleteProject(e) {\n    console.log(\"delete button\", this.state.id);\n    let projectId = this.state.id;\n    this.props.deleteProject(projectId);\n    window.location.reload();\n  }\n\n  render() {\n    const {\n      id,\n      projectName,\n      totalTasks,\n      completedTasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ProjectDiv, {\n        children: [/*#__PURE__*/_jsxDEV(LeftDiv, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/project/${id}`,\n            style: {\n              textDecoration: 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(BigText, {\n              children: projectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(SmallText, {\n              children: \"Total: $1800000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RightDiv, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/project/${id}`,\n            style: {\n              textDecoration: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n            onClick: e => this.deleteProject(e),\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), completedTasks, \"/\", totalTasks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteProject: projectId => dispatch(deleteCurrentProjectStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectItem);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/project-item/project-item.component.jsx"],"names":["React","Component","connect","Link","createStructuredSelector","deleteCurrentProjectStart","DeleteButton","ProjectDiv","LeftDiv","RightDiv","BigText","SmallText","tick","ProjectItem","constructor","props","state","id","projectName","totalTasks","completedTasks","deleteProject","e","console","log","projectId","window","location","reload","render","textDecoration","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,yBAAT,QAA0C,qDAA1C;AACA,SAASC,YAAT,QAA6B,uCAA7B;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwCC,OAAxC,EAAiDC,SAAjD,QAAiE,uBAAjE;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;;AAEA,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAChCa,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWE,EADN;AAETC,MAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWG,WAFf;AAGTC,MAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI,UAHd;AAITC,MAAAA,cAAc,EAAE,KAAKL,KAAL,CAAWK;AAJlB,KAAb;AAMH;;AACDC,EAAAA,aAAa,CAACC,CAAD,EAAG;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKR,KAAL,CAAWC,EAAxC;AACA,QAAIQ,SAAS,GAAG,KAAKT,KAAL,CAAWC,EAA3B;AACA,SAAKF,KAAL,CAAWM,aAAX,CAAyBI,SAAzB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACZ,MAAAA,EAAD;AAAKC,MAAAA,WAAL;AAAkBC,MAAAA,UAAlB;AAA8BC,MAAAA;AAA9B,QAAgD,KAAKJ,KAA3D;AACA,wBACI;AAAA,6BACA,QAAC,UAAD;AAAA,gCAEI,QAAC,OAAD;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,YAAWC,EAAG,EAAzB;AAA4B,YAAA,KAAK,EAAE;AAACa,cAAAA,cAAc,EAAC;AAAhB,aAAnC;AAAA,oCACI,QAAC,OAAD;AAAA,wBAAUZ;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI,QAAC,QAAD;AAAA,kCACA,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,YAAWD,EAAG,EAAzB;AAA4B,YAAA,KAAK,EAAE;AAACa,cAAAA,cAAc,EAAC;AAAhB;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA,QAAC,YAAD;AAAc,YAAA,OAAO,EAAGR,CAAD,IAAK,KAAKD,aAAL,CAAmBC,CAAnB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,EAKCF,cALD,OAKkBD,UALlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA,SAAiBF,EAAjB;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAyBH;;AA3C+B;;AA8CpC,MAAMc,eAAe,GAAG3B,wBAAwB,CAAC,EAAD,CAAhD;;AAIA,MAAM4B,kBAAkB,GAAIC,QAAD,KAAe;AACtCZ,EAAAA,aAAa,EAAGI,SAAD,IAAeQ,QAAQ,CAAC5B,yBAAyB,CAACoB,SAAD,CAA1B;AADA,CAAf,CAA3B;;AAIA,eAAevB,OAAO,CAAC6B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { deleteCurrentProjectStart } from '../../redux/current-project/current-project.actions';\r\nimport { DeleteButton } from '../delete-button/delete-button.styles';\r\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText} from \"./project-item.styles\";\r\nimport tick from '../../assets/tick.jpg'\r\n\r\nclass ProjectItem extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.id,\r\n            projectName: this.props.projectName,\r\n            totalTasks: this.props.totalTasks,\r\n            completedTasks: this.props.completedTasks\r\n        }\r\n    }\r\n    deleteProject(e){\r\n        console.log(\"delete button\", this.state.id);\r\n        let projectId = this.state.id\r\n        this.props.deleteProject(projectId);\r\n        window.location.reload()\r\n    }\r\n    render() {\r\n        const {id, projectName, totalTasks, completedTasks} = this.state\r\n        return (\r\n            <>\r\n            <ProjectDiv key={id}>\r\n             \r\n                <LeftDiv>\r\n                <Link to={`/project/${id}`} style={{textDecoration:'none'}}>\r\n                    <BigText>{projectName}</BigText>\r\n                    <SmallText>Total: $1800000</SmallText>\r\n                </Link>\r\n                </LeftDiv>\r\n                <RightDiv>\r\n                <Link to={`/project/${id}`} style={{textDecoration:'none'}}>\r\n                    \r\n                </Link>\r\n                <DeleteButton onClick={(e)=>this.deleteProject(e)}>DELETE</DeleteButton>\r\n                {completedTasks}/{totalTasks}\r\n                </RightDiv>\r\n                \r\n                \r\n            </ProjectDiv>\r\n        \r\n            \r\n        \r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteProject: (projectId) => dispatch(deleteCurrentProjectStart(projectId))\r\n  });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectItem)\r\n\r\n"]},"metadata":{},"sourceType":"module"}