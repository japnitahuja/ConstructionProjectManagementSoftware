{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\desktop\\\\github\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\project\\\\project.page.js\";\nimport React, { Component } from 'react';\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { fetchTasksStart } from '../../redux/all-tasks/all-tasks.actions';\nimport { selectUserTasks } from '../../redux/all-tasks/all-tasks.selectors';\nimport TaskList from '../../components/tasks-list/tasks-list.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Project extends Component {\n  componentDidMount() {\n    this.props.fetchTasks(this.props.match.params.projectId);\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.props;\n    console.log('project page');\n    console.log(tasks);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  tasks: selectUserTasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchTasks: projectId => dispatch(fetchTasksStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/pages/project/project.page.js"],"names":["React","Component","createStructuredSelector","connect","fetchTasksStart","selectUserTasks","TaskList","Project","componentDidMount","props","fetchTasks","match","params","projectId","render","tasks","console","log","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,yCAAhC;AACA,SAASC,eAAT,QAAgC,2CAAhC;AACA,OAAOC,QAAP,MAAqB,kDAArB;;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC5BO,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,SAA9C;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKN,KAArB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,wBACI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAIA;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAd2B;;AAiBhC,MAAMG,eAAe,GAAGhB,wBAAwB,CAAC;AAC7Ca,EAAAA,KAAK,EAAEV;AADsC,CAAD,CAAhD;;AAIE,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,UAAU,EAAIG,SAAD,IAAeO,QAAQ,CAAChB,eAAe,CAACS,SAAD,CAAhB;AADI,CAAf,CAA3B;;AAIA,eAAeV,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CZ,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTasksStart } from '../../redux/all-tasks/all-tasks.actions';\r\nimport { selectUserTasks } from '../../redux/all-tasks/all-tasks.selectors';\r\nimport TaskList from '../../components/tasks-list/tasks-list.component';\r\n\r\nclass Project extends Component {\r\n    componentDidMount(){\r\n        this.props.fetchTasks(this.props.match.params.projectId);\r\n    }\r\n    \r\n    render() {\r\n        const {tasks} = this.props;\r\n        console.log('project page')\r\n        console.log(tasks)\r\n        return (\r\n            <div>\r\n                <TaskList tasks = {tasks}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    tasks: selectUserTasks\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    fetchTasks : (projectId) => dispatch(fetchTasksStart(projectId))\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Project);"]},"metadata":{},"sourceType":"module"}