{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\desktop\\\\github\\\\myles-website\\\\frontend\\\\src\\\\components\\\\sign-up-form\\\\sign-up-form.component.jsx\";\nimport React from \"react\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { selectSignUpFail, selectSignUpStart, selectSignUpSuccessful } from \"../../redux/user/user.selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUpForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleOnChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n\n      if (name === \"confirmPassword\") {\n        this.setState({\n          confirmPassword: value\n        });\n      } else {\n        let response = this.state.resp;\n        response[name] = value;\n        this.setState({\n          resp: response\n        }, () => console.log(this.state));\n      }\n    };\n\n    this.handleOnSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.resp.password !== this.state.confirmPassword) {\n        alert('Password and Confirm Password don\\'t match!');\n      } else {\n        this.props.signUpStart(this.state.resp);\n        this.setState({\n          resp: {\n            firstName: '',\n            lastName: '',\n            phoneNumber: '',\n            username: '',\n            email: '',\n            password: '',\n            role: 'STUDENT',\n            cafe: ''\n          },\n          confirmPassword: ''\n        });\n      }\n    };\n\n    this.state = {\n      resp: {\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\",\n        email: \"\",\n        password: \"\",\n        role: \"\",\n        username: \"\"\n      },\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        onChange: e => this.handleOnChange(e),\n        onSubmit: this.handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \" First Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.resp.firstName,\n            name: \"firstName\",\n            id: \"firstName\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \" Last Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.resp.lastName,\n            name: \"lastName\",\n            id: \"lastName\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \" Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: this.state.resp.email,\n            name: \"email\",\n            id: \"email\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phoneNumber\",\n            children: \" Phone Number: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: this.state.resp.phoneNumber,\n            name: \"phoneNumber\",\n            id: \"phoneNumber\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            children: \" Role: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: this.state.resp.role,\n            name: \"role\",\n            id: \"role\",\n            onChange: e => this.handleOnChange(e),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please choose an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PROJECT_OWNER\",\n              children: \"Project Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"TRADE_PARTNER\",\n              children: \"Trade Partner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"TASK_OWNER\",\n              children: \"Task Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \" Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.resp.username,\n            name: \"username\",\n            id: \"username\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \" Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: this.state.resp.password,\n            name: \"password\",\n            id: \"password\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \" Confirm Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: this.state.confirmPassword,\n            name: \"confirmPassword\",\n            id: \"confirmPassword\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  signUpStart: selectSignUpStart,\n  signUpSuccessful: selectSignUpSuccessful,\n  signUpFail: selectSignUpFail\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: data => dispatch(signUpStart(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpFotm);","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/components/sign-up-form/sign-up-form.component.jsx"],"names":["React","signUpStart","selectSignUpFail","selectSignUpStart","selectSignUpSuccessful","SignUpForm","Component","constructor","handleOnChange","e","name","value","target","setState","confirmPassword","response","state","resp","console","log","handleOnSubmit","preventDefault","password","alert","props","firstName","lastName","phoneNumber","username","email","role","cafe","render","margin","display","flexDirection","mapStateToProps","createStructuredSelector","signUpSuccessful","signUpFail","mapDispatchToProps","dispatch","data","connect","SignUpFotm"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {signUpStart} from \"../../redux/user/user.actions\";\r\nimport {selectSignUpFail, selectSignUpStart, selectSignUpSuccessful} from \"../../redux/user/user.selectors\";\r\n\r\nclass SignUpForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      resp: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        role: \"\",\r\n        username: \"\",\r\n      },\r\n      confirmPassword: \"\",\r\n    };\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"confirmPassword\") {\r\n      this.setState({ confirmPassword: value });\r\n    } \r\n    else {\r\n      let response = this.state.resp;\r\n      response[name] = value;\r\n\r\n      this.setState({resp: response},()=>console.log(this.state));\r\n    }\r\n  };\r\n\r\n  handleOnSubmit = (e) => {\r\n      e.preventDefault()\r\n\r\n      if (this.state.resp.password !== this.state.confirmPassword){\r\n        alert('Password and Confirm Password don\\'t match!')\r\n      }\r\n      else{\r\n        this.props.signUpStart(this.state.resp)\r\n        this.setState({\r\n          resp: {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            role: 'STUDENT',\r\n            cafe: '',\r\n          },\r\n          confirmPassword: '',\r\n        });\r\n      }\r\n\r\n      \r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ margin: \"10px\" }}>\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n          onSubmit={this.handleOnSubmit}>\r\n          <div>\r\n            <label htmlFor=\"firstName\"> First Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.resp.firstName}\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"lastName\"> Last Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.resp.lastName}\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"email\"> Email: </label>\r\n            <input\r\n              type=\"email\"\r\n              value={this.state.resp.email}\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"phoneNumber\"> Phone Number: </label>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.resp.phoneNumber}\r\n              name=\"phoneNumber\"\r\n              id=\"phoneNumber\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"role\"> Role: </label>\r\n            <select \r\n                value={this.state.resp.role} \r\n                name=\"role\" \r\n                id=\"role\"\r\n                onChange={(e) => this.handleOnChange(e)}\r\n                required>\r\n              <option value=\"\">Please choose an option</option>\r\n              <option value=\"PROJECT_OWNER\">Project Owner</option>\r\n              <option value=\"TRADE_PARTNER\">Trade Partner</option>\r\n              <option value=\"TASK_OWNER\">Task Owner</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"username\"> Username: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.resp.username}\r\n              name=\"username\"\r\n              id=\"username\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"password\"> Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.resp.password}\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"confirmPassword\"> Confirm Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              value={this.state.confirmPassword}\r\n              name=\"confirmPassword\"\r\n              id=\"confirmPassword\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <input type=\"submit\" value=\"Submit\"/>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  signUpStart: selectSignUpStart,\r\n  signUpSuccessful: selectSignUpSuccessful,\r\n  signUpFail: selectSignUpFail\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (data) => dispatch(signUpStart(data)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUpFotm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}