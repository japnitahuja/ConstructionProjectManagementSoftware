{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\team\\\\teamitem.component.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentProjectUsers } from \"../../redux/current-project/current-project.selectors\";\nimport AddUserForm from \"../adduser-form/adduser-form.component\";\nimport { DropDownContent, DropDownOption, LowerDiv, Overlay, FormButton, FormInverseButton, Text, SmallCircle, BigCircle, Image, TeamDiv, TeamDivItem } from \"./team.styles\";\nimport removeImage from \"../../assets/remove.png\";\nimport { deleteUserStart } from \"../../redux/current-project/current-project.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TeamItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOutside = event => {\n      event.preventDefault();\n\n      if (this.dropdownContainer.current && !this.dropdownContainer.current.contains(event.target)) {\n        this.setState({\n          removeToggle: false\n        });\n      }\n    };\n\n    this.toggleRemoveDropdown = e => {\n      e.preventDefault();\n\n      if (this.state.removeToggle) {\n        this.setState({\n          removeToggle: false\n        });\n      } else {\n        this.setState({\n          removeToggle: true\n        });\n      }\n    };\n\n    this.deleteUser = e => {\n      e.preventDefault();\n      let {\n        id\n      } = e.target.dataset;\n      let payload = {\n        userId: id,\n        projectId: this.props.projectId\n      };\n      console.log(payload);\n      this.props.deleteUser(payload);\n    };\n\n    this.dropdownContainer = /*#__PURE__*/React.createRef();\n    this.state = {\n      removeToggle: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  render() {\n    const {\n      id,\n      unnamed\n    } = this.props;\n    const {\n      firstName\n    } = this.props.user;\n    return /*#__PURE__*/_jsxDEV(TeamDivItem, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(BigCircle, {\n          children: firstName ? firstName.charAt(0) : unnamed.charAt(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: {\n            marginLeft: \"1em\"\n          },\n          children: firstName ? firstName : unnamed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"1.5em\"\n        },\n        \"data-id\": id,\n        onClick: this.toggleRemoveDropdown,\n        children: [/*#__PURE__*/_jsxDEV(SmallCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SmallCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SmallCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DropDownContent, {\n          \"data-id\": id,\n          ref: this.dropdownContainer,\n          display: this.state.removeToggle ? \"block\" : \"none\",\n          onClick: this.deleteUser,\n          children: /*#__PURE__*/_jsxDEV(DropDownOption, {\n            \"data-id\": id,\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: removeImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), \"Remove\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser: userDetails => dispatch(deleteUserStart(userDetails))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamItem);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/team/teamitem.component.js"],"names":["React","Component","connect","createStructuredSelector","selectCurrentProjectUsers","AddUserForm","DropDownContent","DropDownOption","LowerDiv","Overlay","FormButton","FormInverseButton","Text","SmallCircle","BigCircle","Image","TeamDiv","TeamDivItem","removeImage","deleteUserStart","TeamItem","constructor","props","handleClickOutside","event","preventDefault","dropdownContainer","current","contains","target","setState","removeToggle","toggleRemoveDropdown","e","state","deleteUser","id","dataset","payload","userId","projectId","console","log","createRef","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","unnamed","firstName","user","display","flexDirection","alignItems","charAt","marginLeft","mapStateToProps","mapDispatchToProps","dispatch","userDetails"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentProjectUsers } from \"../../redux/current-project/current-project.selectors\";\r\nimport AddUserForm from \"../adduser-form/adduser-form.component\";\r\nimport { DropDownContent, DropDownOption, LowerDiv, Overlay, FormButton, FormInverseButton, Text, SmallCircle, BigCircle, Image, TeamDiv, TeamDivItem } from \"./team.styles\";\r\nimport removeImage from \"../../assets/remove.png\"\r\nimport { deleteUserStart } from \"../../redux/current-project/current-project.actions\";\r\n\r\nclass TeamItem extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.dropdownContainer = React.createRef();\r\n        this.state = {\r\n            removeToggle: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside = (event) => {\r\n        event.preventDefault()\r\n        if (\r\n          this.dropdownContainer.current &&\r\n          !this.dropdownContainer.current.contains(event.target)\r\n        ) {\r\n          this.setState({removeToggle:false})\r\n        }\r\n      };\r\n\r\n    toggleRemoveDropdown = (e) => {\r\n      e.preventDefault()\r\n      if(this.state.removeToggle){\r\n        this.setState({removeToggle:false})\r\n      }\r\n      else{\r\n        this.setState({removeToggle:true})\r\n      }\r\n      \r\n    }\r\n\r\n    deleteUser = (e) => {\r\n      e.preventDefault()\r\n      let {id} = e.target.dataset;\r\n      let payload = {\r\n        userId: id,\r\n        projectId: this.props.projectId\r\n      }\r\n      console.log(payload);\r\n      this.props.deleteUser(payload);\r\n    }\r\n\r\n  render() {\r\n   \r\n    const { id,  unnamed } = this.props;\r\n    const {firstName} = this.props.user;\r\n    \r\n    return (\r\n          <TeamDivItem key={id}>\r\n                <div style={{display:\"flex\", flexDirection:\"row\", alignItems: \"center\"}}>\r\n                  <BigCircle>{firstName?firstName.charAt(0):unnamed.charAt(0)}</BigCircle>\r\n                  <Text style={{marginLeft:\"1em\"}}>{firstName?firstName:unnamed}</Text>\r\n                </div>\r\n                <div style={{marginLeft:\"1.5em\"}} \r\n                      data-id={id} \r\n                      onClick={this.toggleRemoveDropdown}>\r\n                        <SmallCircle ></SmallCircle>\r\n                        <SmallCircle ></SmallCircle>\r\n                        <SmallCircle ></SmallCircle>\r\n                        <DropDownContent \r\n                            data-id={id}\r\n                            ref={this.dropdownContainer} \r\n                            display={this.state.removeToggle?\"block\":\"none\"}\r\n                            onClick={this.deleteUser}>\r\n                            <DropDownOption\r\n                              data-id={id}>\r\n                                <Image src={removeImage}/>\r\n                                Remove\r\n                            </DropDownOption>\r\n                        </DropDownContent>\r\n                    </div>\r\n              </TeamDivItem>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteUser: (userDetails) => dispatch(deleteUserStart(userDetails))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamItem);\r\n"]},"metadata":{},"sourceType":"module"}