{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\form-fullscreen-selection\\\\form-fullscreen-selection.component.js\";\nimport React, { Component } from \"react\";\nimport { LongButton } from \"../long-button/long-button.styles\";\nimport { AddUserDiv } from \"./form-fullscreen-selection.styles\";\nimport { SmallText } from \"../project-item/project-item.styles\";\nimport { connect } from \"react-redux\";\nimport { inviteUserStart } from \"../../redux/current-project/current-project.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentProjectRoles } from \"../../redux/current-project/current-project.selectors\";\nimport { FormHeading, FormLabel, FormInput, FormDiv } from \"../create-project-form/create-project-form.styles\";\nimport DropDown from \"../form-dropdown/form-dropdown.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormFullScreenSelection extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    const {\n      projectRoles\n    } = this.props;\n    console.log(\"project roles\", projectRoles);\n    return /*#__PURE__*/_jsxDEV(AddUserDiv, {\n      children: [/*#__PURE__*/_jsxDEV(FormHeading, {\n        children: [\"Add a User\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.exit,\n          style: {\n            textDecoration: \"none\",\n            background: \"none\",\n            border: \"none\",\n            fontSize: \"1.4em\",\n            color: \"rgba(102,102,102,0.6)\"\n          },\n          children: [\" \", \"\\xD7\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormDiv, {\n        onChange: e => this.handleOnChange(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"email\",\n            style: {\n              textAlign: \"left\"\n            },\n            children: [\" \", \"Email\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"text\",\n            value: this.state.userDetails.email,\n            name: \"email\",\n            id: \"email\",\n            onChange: e => this.handleOnChange(e),\n            placeholder: \"Email address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"permission\",\n            style: {\n              textAlign: \"left\"\n            },\n            children: [\" \", \"Permission Level:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"role\",\n            children: \" Role(optional): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: this.state.userDetails.role,\n            name: \"role\",\n            id: \"role\",\n            onChange: e => this.handleOnChange(e),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please choose an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), projectRoles.map((role, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role.toUpperCase(),\n                children: role\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              textDecoration: \"none\",\n              background: \"none\",\n              border: \"none\",\n              left: \"0\"\n            },\n            onClick: this.addUser,\n            children: /*#__PURE__*/_jsxDEV(SmallText, {\n              children: \"Add User, send invite later\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LongButton, {\n            onClick: this.inviteUser,\n            children: \"Invite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  // name: selectCurrentUserFirstName,\n  // projects: selectUserProjects\n  projectRoles: selectCurrentProjectRoles\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // signOut: () => dispatch(signOut())\n  inviteUser: userDetails => dispatch(inviteUserStart(userDetails))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormFullScreenSelection);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/form-fullscreen-selection/form-fullscreen-selection.component.js"],"names":["React","Component","LongButton","AddUserDiv","SmallText","connect","inviteUserStart","createStructuredSelector","selectCurrentProjectRoles","FormHeading","FormLabel","FormInput","FormDiv","DropDown","FormFullScreenSelection","constructor","state","render","projectRoles","props","console","log","exit","textDecoration","background","border","fontSize","color","e","handleOnChange","textAlign","userDetails","email","width","role","map","index","toUpperCase","left","addUser","inviteUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { LongButton } from \"../long-button/long-button.styles\";\r\nimport { AddUserDiv } from \"./form-fullscreen-selection.styles\";\r\nimport { SmallText } from \"../project-item/project-item.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { inviteUserStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentProjectRoles } from \"../../redux/current-project/current-project.selectors\";\r\nimport {\r\n  FormHeading,\r\n  FormLabel,\r\n  FormInput,\r\n  FormDiv,\r\n} from \"../create-project-form/create-project-form.styles\";\r\nimport DropDown from \"../form-dropdown/form-dropdown.component\";\r\n\r\nclass FormFullScreenSelection extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { projectRoles } = this.props;\r\n    console.log(\"project roles\", projectRoles);\r\n    return (\r\n      <AddUserDiv>\r\n        <FormHeading>\r\n          Add a User\r\n          <button\r\n            onClick={this.props.exit}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              background: \"none\",\r\n              border: \"none\",\r\n              fontSize: \"1.4em\",\r\n              color: \"rgba(102,102,102,0.6)\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            &times;\r\n          </button>\r\n        </FormHeading>\r\n\r\n        <FormDiv onChange={(e) => this.handleOnChange(e)}>\r\n          <div>\r\n            <FormLabel htmlFor=\"email\" style={{ textAlign: \"left\" }}>\r\n              {\" \"}\r\n              Email{\" \"}\r\n            </FormLabel>\r\n            <br />\r\n            <FormInput\r\n              type=\"text\"\r\n              value={this.state.userDetails.email}\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              placeholder=\"Email address\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <FormLabel htmlFor=\"permission\" style={{ textAlign: \"left\" }}>\r\n              {\" \"}\r\n              Permission Level:{\" \"}\r\n            </FormLabel>\r\n            <br />\r\n            <div style={{ width: \"100%\" }}>\r\n              {/* <DropDown options = {this.state.permissions}/> */}\r\n            </div>\r\n\r\n            {/* <select\r\n              value={this.state.userDetails.permission}\r\n              name=\"permission\"\r\n              id=\"permission\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            >\r\n              <option value=\"\">Please choose an option</option>\r\n              <option value=\"BILLINGADMIN\">Billing Admin</option>\r\n              <option value=\"ADMIN\">Admin</option>\r\n              <option value=\"MANAGER\">Manager</option>\r\n              <option value=\"AUTHOR\">Author</option>\r\n              <option value=\"CONTRIBUTOR\">Contributor</option>\r\n            </select> */}\r\n          </div>\r\n\r\n          <div>\r\n            <FormLabel htmlFor=\"role\"> Role(optional): </FormLabel>\r\n            <br />\r\n            <select\r\n              value={this.state.userDetails.role}\r\n              name=\"role\"\r\n              id=\"role\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            >\r\n              <option value=\"\">Please choose an option</option>\r\n              {projectRoles.map((role, index) => {\r\n                return (\r\n                  <option key={index} value={role.toUpperCase()}>\r\n                    {role}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <button\r\n              style={{\r\n                textDecoration: \"none\",\r\n                background: \"none\",\r\n                border: \"none\",\r\n                left: \"0\",\r\n              }}\r\n              onClick={this.addUser}\r\n            >\r\n              <SmallText>Add User, send invite later</SmallText>\r\n            </button>\r\n            <LongButton onClick={this.inviteUser}>Invite</LongButton>\r\n          </div>\r\n        </FormDiv>\r\n      </AddUserDiv>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  // name: selectCurrentUserFirstName,\r\n  // projects: selectUserProjects\r\n  projectRoles: selectCurrentProjectRoles,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // signOut: () => dispatch(signOut())\r\n  inviteUser: (userDetails) => dispatch(inviteUserStart(userDetails)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FormFullScreenSelection);\r\n"]},"metadata":{},"sourceType":"module"}