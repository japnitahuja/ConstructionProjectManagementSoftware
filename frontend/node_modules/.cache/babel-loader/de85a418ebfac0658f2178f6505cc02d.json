{"ast":null,"code":"import { CurrentProjectActionTypes } from \"./current-project.types\";\nconst INITIAL_STATE = {\n  isCurrentProjectFetching: false,\n  currentProjectId: null,\n  currentProjectName: null,\n  currentProjectStatus: null,\n  currentProjectPurchaseOrders: null,\n  currentProjectTasks: null,\n  currentProjectMessage: null,\n  errorMessage: null\n};\n\nconst currentProjectReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START:\n      return { ...state,\n        isCurrentProjectFetching: true\n      };\n\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_SUCCESS:\n      const {\n        tasks,\n        purchaseOrders,\n        _id,\n        projectName,\n        projectStatus\n      } = action.payload;\n      return { ...state,\n        isCurrentProjectFetching: false,\n        currentProjectStatus: projectStatus,\n        currentProjectName: projectName,\n        currentProjectTasks: tasks,\n        currentProjectPurchaseOrders: purchaseOrders,\n        currentProjectId: _id,\n        currentProjectMessage: 'PROJECT FETCHED!'\n      };\n\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_FAILURE:\n      return { ...state,\n        isCurrentProjectFetching: false,\n        errorMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_TASK_IN_REDUCER:\n      let task = currentProjectTasks.filter(task => task._id != action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default currentProjectReducer;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/current-project/current-project.reducer.js"],"names":["CurrentProjectActionTypes","INITIAL_STATE","isCurrentProjectFetching","currentProjectId","currentProjectName","currentProjectStatus","currentProjectPurchaseOrders","currentProjectTasks","currentProjectMessage","errorMessage","currentProjectReducer","state","action","type","FETCH_CURRENT_PROJECT_START","FETCH_CURRENT_PROJECT_SUCCESS","tasks","purchaseOrders","_id","projectName","projectStatus","payload","FETCH_CURRENT_PROJECT_FAILURE","DELETE_CURRENT_TASK_IN_REDUCER","task","filter"],"mappings":"AAAA,SAASA,yBAAT,QAA0C,yBAA1C;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,wBAAwB,EAAE,KADN;AAEpBC,EAAAA,gBAAgB,EAAE,IAFE;AAGpBC,EAAAA,kBAAkB,EAAE,IAHA;AAIpBC,EAAAA,oBAAoB,EAAE,IAJF;AAKpBC,EAAAA,4BAA4B,EAAE,IALV;AAMpBC,EAAAA,mBAAmB,EAAE,IAND;AAOpBC,EAAAA,qBAAqB,EAAE,IAPH;AAQpBC,EAAAA,YAAY,EAAE;AARM,CAAtB;;AAWA,MAAMC,qBAAqB,GAAG,CAACC,KAAK,GAAGV,aAAT,EAAwBW,MAAxB,KAAmC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,yBAAyB,CAACc,2BAA/B;AACE,aAAO,EACL,GAAGH,KADE;AAELT,QAAAA,wBAAwB,EAAE;AAFrB,OAAP;;AAIF,SAAKF,yBAAyB,CAACe,6BAA/B;AACE,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA,cAAR;AAAwBC,QAAAA,GAAxB;AAA6BC,QAAAA,WAA7B;AAA0CC,QAAAA;AAA1C,UAA2DR,MAAM,CAACS,OAAxE;AACA,aAAO,EACL,GAAGV,KADE;AAELT,QAAAA,wBAAwB,EAAE,KAFrB;AAGLG,QAAAA,oBAAoB,EAAEe,aAHjB;AAILhB,QAAAA,kBAAkB,EAAEe,WAJf;AAKLZ,QAAAA,mBAAmB,EAAES,KALhB;AAMLV,QAAAA,4BAA4B,EAAEW,cANzB;AAOLd,QAAAA,gBAAgB,EAAEe,GAPb;AAQLV,QAAAA,qBAAqB,EAAE;AARlB,OAAP;;AAWF,SAAKR,yBAAyB,CAACsB,6BAA/B;AACE,aAAO,EACL,GAAGX,KADE;AAENT,QAAAA,wBAAwB,EAAE,KAFpB;AAGNO,QAAAA,YAAY,EAAEG,MAAM,CAACS;AAHf,OAAP;;AAMF,SAAKrB,yBAAyB,CAACuB,8BAA/B;AACE,UAAIC,IAAI,GAAGjB,mBAAmB,CAACkB,MAApB,CAA2BD,IAAI,IAAIA,IAAI,CAACN,GAAL,IAAYN,MAAM,CAACS,OAAtD,CAAX;;AACF;AACA,aAAOV,KAAP;AA7BF;AA+BD,CAhCD;;AAkCA,eAAeD,qBAAf","sourcesContent":["import { CurrentProjectActionTypes } from \"./current-project.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  isCurrentProjectFetching: false,\r\n  currentProjectId: null,\r\n  currentProjectName: null,\r\n  currentProjectStatus: null,\r\n  currentProjectPurchaseOrders: null,\r\n  currentProjectTasks: null,\r\n  currentProjectMessage: null,\r\n  errorMessage: null\r\n};\r\n\r\nconst currentProjectReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        isCurrentProjectFetching: true\r\n      };\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_SUCCESS:\r\n      const {tasks, purchaseOrders, _id, projectName, projectStatus} = action.payload\r\n      return {\r\n        ...state,\r\n        isCurrentProjectFetching: false,\r\n        currentProjectStatus: projectStatus,\r\n        currentProjectName: projectName,\r\n        currentProjectTasks: tasks,\r\n        currentProjectPurchaseOrders: purchaseOrders,\r\n        currentProjectId: _id,\r\n        currentProjectMessage: 'PROJECT FETCHED!'\r\n      };\r\n   \r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n       isCurrentProjectFetching: false,\r\n       errorMessage: action.payload\r\n      };\r\n    \r\n    case CurrentProjectActionTypes.DELETE_CURRENT_TASK_IN_REDUCER:\r\n      let task = currentProjectTasks.filter(task => task._id != action.payload)\r\n    default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default currentProjectReducer;\r\n"]},"metadata":{},"sourceType":"module"}