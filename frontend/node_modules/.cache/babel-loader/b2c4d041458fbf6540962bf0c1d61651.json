{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { signUpFail, signUpSuccesful } from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\nexport function* signUp({\n  payload\n}) {\n  console.log(\"Sign Up has started.\");\n  console.log(payload);\n  let data = payload;\n  let resp = yield fetch(\"http://127.0.0.1:5000/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  console.log(resp);\n  resp = resp.json();\n  console.log(resp);\n  const user = yield resp.user.json();\n  const token = yield resp.token;\n  console.log(\"user is\", user);\n  console.log(\"token is\", token);\n\n  if (resp.done) {\n    //sign in function\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    yield put(signUpSuccesful(user));\n  } else {\n    yield put(signUpFail(\"Failed to sign up.\"));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/redux/user/user.sagas.js"],"names":["all","call","put","takeLatest","signUpFail","signUpSuccesful","UserActionTypes","signUp","payload","console","log","data","resp","fetch","method","headers","body","JSON","stringify","json","user","token","done","localStorage","setItem","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,gBAA5C;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,MAAIG,IAAI,GAAGH,OAAX;AACE,MAAII,IAAI,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACrDC,IAAAA,MAAM,EAAE,MAD6C;AAErDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF4C;AAKrDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAL+C,GAAjC,CAAtB;AAQAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACO,IAAL,EAAP;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACA,QAAMQ,IAAI,GAAG,MAAMR,IAAI,CAACQ,IAAL,CAAUD,IAAV,EAAnB;AACA,QAAME,KAAK,GAAG,MAAMT,IAAI,CAACS,KAAzB;AAEAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBU,IAAvB;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBW,KAAxB;;AAEA,MAAIT,IAAI,CAACU,IAAT,EAAe;AACb;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACC,SAAL,CAAeE,IAAf,CAA7B;AACA,UAAMlB,GAAG,CAACG,eAAe,CAACe,IAAD,CAAhB,CAAT;AACD,GALD,MAKO;AACL,UAAMlB,GAAG,CAACE,UAAU,CAAC,oBAAD,CAAX,CAAT;AACD;AAEJ;AAED,OAAO,UAAUqB,aAAV,GAA0B;AAC/B,QAAMtB,UAAU,CAACG,eAAe,CAACoB,aAAjB,EAAgCnB,MAAhC,CAAhB;AACD;AAED,OAAO,UAAUoB,SAAV,GAAsB;AAC3B,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACwB,aAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { signUpFail, signUpSuccesful } from \"./user.actions\";\r\nimport { UserActionTypes } from \"./user.types\";\r\n\r\nexport function* signUp({ payload }) {\r\n  console.log(\"Sign Up has started.\");\r\n  console.log(payload);\r\n\r\n  let data = payload;\r\n    let resp = yield fetch(\"http://127.0.0.1:5000/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    console.log(resp);\r\n    resp = resp.json();\r\n    console.log(resp);\r\n    const user = yield resp.user.json();\r\n    const token = yield resp.token;\r\n\r\n    console.log(\"user is\", user);\r\n    console.log(\"token is\", token);\r\n\r\n    if (resp.done) {\r\n      //sign in function\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      yield put(signUpSuccesful(user));\r\n    } else {\r\n      yield put(signUpFail(\"Failed to sign up.\"));\r\n    }\r\n\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onSignUpStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}