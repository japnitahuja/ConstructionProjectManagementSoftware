{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\access\\\\access.component.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { UpdateUserInProjectStart } from \"../../redux/current-project/current-project.actions\";\nimport { selectCurrentProjectUsers } from \"../../redux/current-project/current-project.selectors\";\nimport { AccessForm, FormSelect } from \"./access.styles\";\nimport { TeamDivItem, BigCircle, LowerDiv, Overlay, Text, FormButton, FormInverseButton } from \"../team/team.styles\";\nimport DropDown from \"../access-dropdown/access-dropdown.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Access extends Component {\n  constructor() {\n    super();\n\n    this.dropDownToggle = e => {\n      e.preventDefault();\n      console.log(\"IN HEREEEE\");\n      console.log(e);\n    };\n\n    this.dropDownToggleTwo = e => {\n      e.preventDefault();\n      console.log(\"IN HEREEEE\");\n      console.log(e);\n    };\n\n    this.handleOnChange = e => {\n      e.preventDefault();\n      let userDetails = this.state.userDetails;\n      const {\n        id,\n        value\n      } = e.target; //userDetails[id] = value;\n      //this.setState({ userDetails: userDetails }, () => console.log(userDetails));\n\n      const user = {\n        id: id,\n        updatedPermission: value\n      };\n      userDetails.push(user);\n      console.log(this.state);\n    };\n\n    this.submit = () => {\n      const userDetails = this.state.userDetails;\n      const {\n        updateUser\n      } = this.props;\n      console.log(userDetails);\n      updateUser(userDetails);\n    };\n\n    this.state = {\n      userDetails: [],\n      dropDownSwitch: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.users.map((user, index) => {\n      let temp = this.state.dropDownSwitch;\n      temp[index] = false;\n      this.setState({\n        dropDownSwitch: temp\n      });\n    });\n  }\n\n  render() {\n    const {\n      users\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AccessForm, {\n        children: users.map((user, index) => {\n          console.log(user);\n          let unnamed = user.user.email.slice(0, user.user.email.indexOf('@'));\n          return /*#__PURE__*/_jsxDEV(TeamDivItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: user.user._id,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(BigCircle, {\n                  children: user.user.firstName ? user.user.firstName.charAt(0) : unnamed.charAt(0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  style: {\n                    marginLeft: \"1em\"\n                  },\n                  children: user.user.firstName ? user.user.firstName : unnamed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"30%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(DropDown, {\n                onClickHandler: this.dropDownToggle,\n                dropDownSwitch: this.state.dropDownSwitch[index]\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.dropDownToggle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(LowerDiv, {\n        style: {\n          marginBottom: \"5em\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormButton, {\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInverseButton, {\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  users: selectCurrentProjectUsers\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateUser: userDetails => dispatch(UpdateUserInProjectStart(userDetails))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Access);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/access/access.component.js"],"names":["React","Component","connect","createStructuredSelector","UpdateUserInProjectStart","selectCurrentProjectUsers","AccessForm","FormSelect","TeamDivItem","BigCircle","LowerDiv","Overlay","Text","FormButton","FormInverseButton","DropDown","Access","constructor","dropDownToggle","e","preventDefault","console","log","dropDownToggleTwo","handleOnChange","userDetails","state","id","value","target","user","updatedPermission","push","submit","updateUser","props","dropDownSwitch","componentDidMount","users","map","index","temp","setState","render","unnamed","email","slice","indexOf","_id","display","flexDirection","alignItems","firstName","charAt","marginLeft","width","marginBottom","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { UpdateUserInProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { selectCurrentProjectUsers } from \"../../redux/current-project/current-project.selectors\";\r\nimport {AccessForm, FormSelect} from \"./access.styles\";\r\nimport {TeamDivItem, BigCircle, LowerDiv, Overlay, Text, FormButton, FormInverseButton} from \"../team/team.styles\";\r\nimport DropDown from \"../access-dropdown/access-dropdown.component\";\r\n\r\nclass Access extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            userDetails: [],\r\n            dropDownSwitch: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.users.map((user, index) => {\r\n        let temp = this.state.dropDownSwitch\r\n        temp[index] = false\r\n        this.setState({\r\n          dropDownSwitch: temp,\r\n        })\r\n\r\n      })}\r\n\r\n    dropDownToggle = (e) => {\r\n      e.preventDefault()\r\n      console.log(\"IN HEREEEE\")\r\n      console.log(e);\r\n    }\r\n\r\n    dropDownToggleTwo = (e) => {\r\n      e.preventDefault()\r\n      console.log(\"IN HEREEEE\")\r\n      console.log(e);\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        e.preventDefault()\r\n        let userDetails = this.state.userDetails;\r\n        const { id, value } = e.target;\r\n        //userDetails[id] = value;\r\n        //this.setState({ userDetails: userDetails }, () => console.log(userDetails));\r\n        const user = {\r\n            id: id,\r\n            updatedPermission: value\r\n        }\r\n        userDetails.push(user)\r\n        console.log(this.state)\r\n    }\r\n \r\n    submit = () => {\r\n      const userDetails = this.state.userDetails\r\n      const {updateUser} = this.props\r\n      console.log(userDetails)\r\n      updateUser(userDetails)\r\n    }\r\n  render() {\r\n    const { users } = this.props;\r\n    return (\r\n    <>\r\n      <AccessForm>\r\n        {users.map((user, index) => {\r\n          console.log(user)\r\n          let unnamed = user.user.email.slice(0,user.user.email.indexOf('@'));\r\n          return (\r\n            <TeamDivItem key={index}>\r\n              <label htmlFor={user.user._id}>\r\n                <div style={{display:\"flex\", flexDirection:\"row\", alignItems: \"center\"}}>\r\n                  <BigCircle>{user.user.firstName?user.user.firstName.charAt(0):unnamed.charAt(0)}</BigCircle>\r\n                  <Text style={{marginLeft:\"1em\"}}>{user.user.firstName?user.user.firstName:unnamed}</Text>\r\n                </div>\r\n              </label>\r\n              <div style={{width:\"30%\"}}>\r\n                <DropDown key={index} \r\n                          onClickHandler = {this.dropDownToggle} \r\n                          dropDownSwitch={this.state.dropDownSwitch[index]}/> \r\n                <button onClick={this.dropDownToggle}/>\r\n                {/* <FormSelect\r\n                  style={{backgroundImage: `url(${downArrow})` }}\r\n                  value={user.permission}\r\n                  placeholder = {user.permission}\r\n                  name={index}\r\n                  id={user.user._id}\r\n                  required\r\n                  onChange={(e) => this.handleOnChange(e)}\r\n                >\r\n                  <option value=\"none\">No Access</option>\r\n                  <option value=\"BILLINGADMIN\" \r\n                          selected={user.permission===\"BILLINGADMIN\"?\"selected\":\"\"}>\r\n                            Billing Admin\r\n                  </option>\r\n                  <option value=\"ADMIN\" \r\n                          selected={user.permission===\"ADMIN\"?\"selected\":\"\"}>\r\n                            Admin\r\n                  </option>\r\n                  <option value=\"MANAGER\"\r\n                          selected={user.permission===\"MANAGER\"?\"selected\":\"\"}>\r\n                            Manager\r\n                  </option>\r\n                  <option value=\"AUTHOR\"\r\n                          selected={user.permission===\"AUTHOR\"?\"selected\":\"\"}>\r\n                            Author\r\n                  </option>\r\n                  <option value=\"CONTRIBUTOR\"\r\n                          selected={user.permission===\"CONTRIBUTOR\"?\"selected\":\"\"}>\r\n                            Contributor\r\n                  </option>\r\n                </FormSelect> */}\r\n              </div>\r\n            \r\n            \r\n            </TeamDivItem>\r\n          );\r\n        })}\r\n      </AccessForm>\r\n      \r\n      <LowerDiv style={{marginBottom:\"5em\"}}>\r\n          <FormButton>Save</FormButton>\r\n          <FormInverseButton>Exit</FormInverseButton>\r\n        </LowerDiv>\r\n      \r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  users: selectCurrentProjectUsers,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateUser: (userDetails) => dispatch(UpdateUserInProjectStart(userDetails))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Access);\r\n"]},"metadata":{},"sourceType":"module"}