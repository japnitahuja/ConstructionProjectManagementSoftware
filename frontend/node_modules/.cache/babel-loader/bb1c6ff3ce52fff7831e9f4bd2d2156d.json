{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\organisation\\\\organisation.page.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { createOrganisationStart, fetchAllOrganisationsStart } from \"../../redux/organisation/organisation.actions\";\nimport { selectAllOrganisations, selectFetchAllOrganisationsSuccess } from \"../../redux/organisation/organisation.selectors\";\nimport ProjectsNav from \"../../components/projects-nav/projects-nav.component\";\nimport { CostbookCostCode } from \"../../components/costbook-costcode/costbook-costcode.component\";\nimport Spinner from \"../../components/spinner/spinner.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Organisation extends Component {\n  constructor() {\n    super();\n\n    this.organisationOnChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      let org = this.state.organisationDetails;\n      org[name] = value;\n      this.setState({\n        organisationDetails: org\n      }, () => console.log(this.state));\n    };\n\n    this.createOrg = e => {\n      e.preventDefault();\n      let orgDetails = this.state.organisationDetails;\n      this.props.createOrganisation(orgDetails);\n    };\n\n    this.state = {\n      organisationDetails: {\n        organisationName: null,\n        organisationEmail: null,\n        organisationNumber: null,\n        organisationAddress: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchOrganisations();\n  }\n\n  render() {\n    console.log(this.props.organisations);\n    let {\n      organisationsFetched\n    } = this.props;\n\n    if (!organisationsFetched) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectsNav, {\n        title: \"Organisations\",\n        toggleSearchBar: this.toggleSearchBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), this.props.organisations.map(org => {\n        console.log(org.organisation._id);\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/all-projects/${org.organisation._id}`,\n          style: {\n            textDecoration: \"none\",\n            color: \"rgba(0,0,0,0.8)\"\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(CostbookCostCode, {\n            title: org.organisation.organisationName\n          }, org.organisation._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onChange: this.organisationOnChange,\n        onSubmit: this.createOrg,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"organisationName\",\n          id: \"organisationName\",\n          name: \"organisationName\",\n          children: \"Organisation Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"organisationName\",\n          name: \"organisationName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"organisationAddress\",\n          id: \"organisationAddress\",\n          name: \"organisationAddress\",\n          children: \"Organisation Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"organisationAddress\",\n          name: \"organisationAddress\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"organisationNumber\",\n          id: \"organisationNumber\",\n          name: \"organisationNumber\",\n          children: \"Organisation Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"organisationNumber\",\n          name: \"organisationNumber\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"organisationEmail\",\n          id: \"organisationEmail\",\n          name: \"organisationEmail\",\n          children: \"Organisation Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"organisationEmail\",\n          name: \"organisationEmail\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"CREATE ORG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  organisationsFetched: selectFetchAllOrganisationsSuccess,\n  organisations: selectAllOrganisations\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // signOut: () => dispatch(signOut()),\n  // createProject: (projectDetails) =>\n  //   dispatch(createProjectStart(projectDetails)),\n  // fetchProjects: () => dispatch(fetchProjectsStart()),\n  createOrganisation: orgDetails => dispatch(createOrganisationStart(orgDetails)),\n  fetchOrganisations: userId => dispatch(fetchAllOrganisationsStart(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Organisation);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/organisation/organisation.page.js"],"names":["React","Component","connect","Link","createStructuredSelector","createOrganisationStart","fetchAllOrganisationsStart","selectAllOrganisations","selectFetchAllOrganisationsSuccess","ProjectsNav","CostbookCostCode","Spinner","Organisation","constructor","organisationOnChange","e","name","value","target","org","state","organisationDetails","setState","console","log","createOrg","preventDefault","orgDetails","props","createOrganisation","organisationName","organisationEmail","organisationNumber","organisationAddress","componentDidMount","fetchOrganisations","render","organisations","organisationsFetched","toggleSearchBar","map","organisation","_id","textDecoration","color","mapStateToProps","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createOrganisationStart,\r\n  fetchAllOrganisationsStart,\r\n} from \"../../redux/organisation/organisation.actions\";\r\nimport {\r\n  selectAllOrganisations,\r\n  selectFetchAllOrganisationsSuccess,\r\n} from \"../../redux/organisation/organisation.selectors\";\r\nimport ProjectsNav from \"../../components/projects-nav/projects-nav.component\";\r\nimport { CostbookCostCode } from \"../../components/costbook-costcode/costbook-costcode.component\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\n\r\nclass Organisation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      organisationDetails: {\r\n        organisationName: null,\r\n        organisationEmail: null,\r\n        organisationNumber: null,\r\n        organisationAddress: null,\r\n      },\r\n    };\r\n  }\r\n\r\n  organisationOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let org = this.state.organisationDetails;\r\n    org[name] = value;\r\n    this.setState({ organisationDetails: org }, () => console.log(this.state));\r\n  };\r\n\r\n  createOrg = (e) => {\r\n    e.preventDefault();\r\n    let orgDetails = this.state.organisationDetails;\r\n    this.props.createOrganisation(orgDetails);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchOrganisations();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.organisations);\r\n    let { organisationsFetched } = this.props;\r\n\r\n    if (!organisationsFetched) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ProjectsNav\r\n          title=\"Organisations\"\r\n          toggleSearchBar={this.toggleSearchBar}\r\n        />\r\n        {this.props.organisations.map((org) => {\r\n          console.log(org.organisation._id);\r\n          return (\r\n            <Link\r\n              to={`/all-projects/${org.organisation._id}`}\r\n              style={{ textDecoration: \"none\", color: \"rgba(0,0,0,0.8)\" }}\r\n            >\r\n              {\" \"}\r\n              <CostbookCostCode\r\n                key={org.organisation._id}\r\n                title={org.organisation.organisationName}\r\n              />\r\n            </Link>\r\n          );\r\n        })}\r\n        <br></br>\r\n        <form onChange={this.organisationOnChange} onSubmit={this.createOrg}>\r\n          <label\r\n            htmlFor=\"organisationName\"\r\n            id=\"organisationName\"\r\n            name=\"organisationName\"\r\n          >\r\n            Organisation Name\r\n          </label>\r\n          <input id=\"organisationName\" name=\"organisationName\" type=\"text\" />\r\n          <label\r\n            htmlFor=\"organisationAddress\"\r\n            id=\"organisationAddress\"\r\n            name=\"organisationAddress\"\r\n          >\r\n            Organisation Address\r\n          </label>\r\n          <input\r\n            id=\"organisationAddress\"\r\n            name=\"organisationAddress\"\r\n            type=\"text\"\r\n          />\r\n          <label\r\n            htmlFor=\"organisationNumber\"\r\n            id=\"organisationNumber\"\r\n            name=\"organisationNumber\"\r\n          >\r\n            Organisation Number\r\n          </label>\r\n          <input\r\n            id=\"organisationNumber\"\r\n            name=\"organisationNumber\"\r\n            type=\"text\"\r\n          />\r\n          <label\r\n            htmlFor=\"organisationEmail\"\r\n            id=\"organisationEmail\"\r\n            name=\"organisationEmail\"\r\n          >\r\n            Organisation Email\r\n          </label>\r\n          <input id=\"organisationEmail\" name=\"organisationEmail\" type=\"text\" />\r\n          <button type=\"submit\">CREATE ORG</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  organisationsFetched: selectFetchAllOrganisationsSuccess,\r\n  organisations: selectAllOrganisations,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // signOut: () => dispatch(signOut()),\r\n  // createProject: (projectDetails) =>\r\n  //   dispatch(createProjectStart(projectDetails)),\r\n  // fetchProjects: () => dispatch(fetchProjectsStart()),\r\n  createOrganisation: (orgDetails) =>\r\n    dispatch(createOrganisationStart(orgDetails)),\r\n  fetchOrganisations: (userId) => dispatch(fetchAllOrganisationsStart(userId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Organisation);\r\n"]},"metadata":{},"sourceType":"module"}