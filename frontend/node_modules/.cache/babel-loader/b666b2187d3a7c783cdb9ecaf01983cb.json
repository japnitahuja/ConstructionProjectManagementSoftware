{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\step-item\\\\step-item.component.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { StepDiv, LeftDiv, RightDiv, BigText, SmallText, Circle, RowContainer, ArrowDiv, PartitionDiv } from \"./step-item.styles\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { deleteCurrentTaskStart } from \"../../redux/current-task/current-task.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass StepItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stepDetails: this.props.stepDetails,\n      isOpen: false\n    };\n  } // deleteTask(e){\n  //     console.log(\"delete button\", this.state.taskDetails._id);\n  //     this.props.deleteTask(this.state.taskDetails._id);\n  // }\n\n\n  render() {\n    const {\n      stepName,\n      questionStatement,\n      _id,\n      isStepDone,\n      isQuestionAnswered,\n      index\n    } = this.state.stepDetails;\n    return /*#__PURE__*/_jsxDEV(StepDiv, {\n      children: [/*#__PURE__*/_jsxDEV(PartitionDiv, {\n        children: [/*#__PURE__*/_jsxDEV(LeftDiv, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/step/${_id}`,\n            style: {\n              textDecoration: 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(RowContainer, {\n              children: [/*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(SmallText, {\n                children: [\"STEP - \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(BigText, {\n              children: stepName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RightDiv, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: _id,\n            onClick: e => this.deleteStep(e),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), questionStatement ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: isQuestionAnswered ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Question has been answered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this) : null\n          }, void 0, false) : null, isStepDone ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Step Completed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 39\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ArrowDiv, {\n        onClick: () => {\n          this.setState((prevState, props) => ({\n            counter: prevState.counter + props.increment\n          }));\n        },\n        children: \"\\u2228\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTask: taskId => dispatch(deleteCurrentTaskStart(taskId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepItem);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/step-item/step-item.component.jsx"],"names":["React","Component","Link","StepDiv","LeftDiv","RightDiv","BigText","SmallText","Circle","RowContainer","ArrowDiv","PartitionDiv","connect","createStructuredSelector","deleteCurrentTaskStart","StepItem","constructor","props","state","stepDetails","isOpen","render","stepName","questionStatement","_id","isStepDone","isQuestionAnswered","index","textDecoration","e","deleteStep","setState","prevState","counter","increment","mapStateToProps","mapDispatchToProps","dispatch","deleteTask","taskId"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { StepDiv, LeftDiv, RightDiv, BigText, SmallText, Circle, RowContainer, ArrowDiv, PartitionDiv} from \"./step-item.styles\";\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { deleteCurrentTaskStart } from \"../../redux/current-task/current-task.actions\";\r\n\r\nclass StepItem extends Component{\r\n    constructor(props){\r\n        super(props);\r\n      \r\n        this.state = {\r\n            stepDetails: this.props.stepDetails,\r\n            isOpen:false\r\n        };\r\n    }\r\n\r\n    // deleteTask(e){\r\n    //     console.log(\"delete button\", this.state.taskDetails._id);\r\n    //     this.props.deleteTask(this.state.taskDetails._id);\r\n    // }\r\n    \r\n    render (){\r\n        const {stepName,questionStatement,_id,isStepDone,isQuestionAnswered, index} = this.state.stepDetails;\r\n        return (\r\n            <StepDiv>\r\n                <PartitionDiv key={_id}>\r\n                    <LeftDiv>\r\n                        <Link to={`/step/${_id}`} style={{textDecoration:'none'}}>\r\n                            <RowContainer>\r\n                            <Circle /> \r\n                            <SmallText>STEP - {index+1}</SmallText>\r\n                            </RowContainer>\r\n                            \r\n                            <BigText>{stepName}</BigText>\r\n                        </Link>\r\n                    </LeftDiv>\r\n                    <RightDiv>\r\n                        <button id={_id} onClick={(e)=>this.deleteStep(e)}>Delete</button>\r\n                        {questionStatement ? (\r\n                        <>\r\n                            {isQuestionAnswered ? (\r\n                            <div>Question has been answered</div>\r\n                            ) : null}\r\n                        </>\r\n                        ) : null}\r\n                        {isStepDone ? <div>Step Completed!</div> : null}\r\n                    </RightDiv>\r\n                </PartitionDiv>\r\n                <ArrowDiv onClick={()=>{this.setState((prevState, props) => ({\r\n  counter: prevState.counter + props.increment\r\n}));}}>&or;</ArrowDiv>\r\n            \r\n            </StepDiv>\r\n            \r\n                \r\n            \r\n        \r\n    )}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    \r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    deleteTask : (taskId) => dispatch(deleteCurrentTaskStart(taskId))\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(StepItem);\r\n"]},"metadata":{},"sourceType":"module"}