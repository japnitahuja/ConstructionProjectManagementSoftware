{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { createProjectSucessful, createProjectFail } from \"./project.actions\";\nimport { ProjectActionTypes } from \"./project.types\";\nexport function* createProject({\n  payload\n}) {\n  try {\n    let data = payload;\n    let resp = yield fetch(\"/http://127.0.0.1:5000/create-project\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(createProjectSucessful());\n    } else {\n      yield put(createProjectFail(resp.error));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* onProjectCreateStart() {\n  yield takeLatest(ProjectActionTypes.CREATE_PROJECT_START, createProject);\n}\nexport function* projectSagas() {\n  yield all([call(onProjectCreateStart)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/redux/project/project.sagas.js"],"names":["all","call","put","takeLatest","createProjectSucessful","createProjectFail","ProjectActionTypes","createProject","payload","data","resp","fetch","method","headers","body","JSON","stringify","json","done","error","console","log","onProjectCreateStart","CREATE_PROJECT_START","projectSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,sBAAT,EAAiCC,iBAAjC,QAA0D,mBAA1D;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AAEA,OAAO,UAAUC,aAAV,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAkC;AACvC,MAAI;AACF,QAAIC,IAAI,GAAGD,OAAX;AACA,QAAIE,IAAI,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAC9DC,MAAAA,MAAM,EAAE,MADsD;AAE9DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFqD;AAK9DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AALwD,KAA1C,CAAtB;AAQAC,IAAAA,IAAI,GAAG,MAAMA,IAAI,CAACO,IAAL,EAAb;;AACA,QAAGP,IAAI,CAACQ,IAAR,EAAa;AACT,YAAMhB,GAAG,CAACE,sBAAsB,EAAvB,CAAT;AACH,KAFD,MAEK;AACH,YAAMF,GAAG,CAACG,iBAAiB,CAACK,IAAI,CAACS,KAAN,CAAlB,CAAT;AACD;AACF,GAhBD,CAgBE,OAAOA,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;AAGD,OAAO,UAAUG,oBAAV,GAAgC;AACrC,QAAMnB,UAAU,CAACG,kBAAkB,CAACiB,oBAApB,EAA0ChB,aAA1C,CAAhB;AACD;AAED,OAAO,UAAUiB,YAAV,GAAyB;AAC9B,QAAMxB,GAAG,CAAC,CACRC,IAAI,CAACqB,oBAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { createProjectSucessful, createProjectFail } from \"./project.actions\";\r\nimport { ProjectActionTypes } from \"./project.types\";\r\n\r\nexport function* createProject({payload}){\r\n  try {\r\n    let data = payload;\r\n    let resp = yield fetch(\"/http://127.0.0.1:5000/create-project\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    resp = yield resp.json()\r\n    if(resp.done){\r\n        yield put(createProjectSucessful());\r\n    }else{\r\n      yield put(createProjectFail(resp.error))\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\n\r\nexport function* onProjectCreateStart(){\r\n  yield takeLatest(ProjectActionTypes.CREATE_PROJECT_START, createProject)\r\n}\r\n\r\nexport function* projectSagas() {\r\n  yield all([\r\n    call(onProjectCreateStart)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}