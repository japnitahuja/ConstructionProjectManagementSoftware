{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\project-change-orders\\\\project-change-orders.page.js\";\nimport React, { Component } from \"react\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport PurchaseOrderList from \"../../components/purchase-orders-list/purchase-orders-list.component\";\nimport { selectCurrentProjectChangeOrders, selectCurrentProjectName, selectCurrentProjectPurchaseOrders } from \"../../redux/current-project/current-project.selectors\";\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\nimport LowerNavBar from \"../../components/lower-nav-bar/lower-nav-bar.component\";\nimport PurchaseOrderListContainer from \"../../components/purchase-orders-list/purchase-order-lists.container\";\nimport { TaskNav } from \"../../components/task-nav/task-nav.component\";\nimport ChangeOrderList from \"../../components/change-orders-list/change-orders-list.component\";\nimport SearchBar from \"../../components/search-bar/search-bar.component\";\nimport NoResult from \"../../components/no-result/no-result.component\";\nimport ToggleButton from \"../../components/toggle-button/toggle-button.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectChangeOrders extends Component {\n  constructor() {\n    super();\n\n    this.search = searchedText => {\n      let temp = this.props.changeOrders;\n\n      if (searchedText) {\n        temp = temp.filter(({\n          purchasedItem\n        }) => {\n          return purchasedItem.toLowerCase().includes(searchedText.toLowerCase());\n        });\n      }\n\n      this.setState({\n        VPOsList: temp\n      });\n    };\n\n    this.toggleSearch = () => {\n      this.setState(prevState => ({\n        showSearch: !prevState.showSearch\n      }));\n    };\n\n    this.adminToggle = () => {\n      this.setState(prevState => ({\n        adminSwitch: !prevState.adminSwitch\n      }));\n    };\n\n    this.state = {\n      VPOsList: \"\",\n      showSearch: false,\n      adminSwitch: false\n    };\n  }\n\n  componentDidMount() {\n    const projectId = this.props.match.params.projectId;\n    this.props.fetchProject(projectId);\n    this.setState({\n      VPOsList: this.props.changeOrders\n    });\n  }\n\n  render() {\n    const {\n      changeOrders,\n      projectName\n    } = this.props;\n    const {\n      VPOsList\n    } = this.state;\n    console.log(changeOrders);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TaskNav, {\n        title: projectName,\n        toggleSearch: this.toggleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), this.state.showSearch ? /*#__PURE__*/_jsxDEV(SearchBar, {\n        placeholder: \"Search variance POs...\",\n        search: this.search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"1em\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n          borderBottom: \"1px solid #BCC5D3\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          onToggleFunction: this.adminToggle,\n          checked: this.state.adminSwitch,\n          color: \"#6C5FCF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"1em\",\n            color: \"#666666\",\n            margin: \"0\",\n            paddingLeft: \"0.5em\"\n          },\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), POsList.length === 0 ? /*#__PURE__*/_jsxDEV(NoResult, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : this.state.adminSwitch ? /*#__PURE__*/_jsxDEV(PurchaseOrdersListAdmin, {\n        purchaseOrders: POsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChangeOrderList, {\n        changeOrders: VPOsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LowerNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  changeOrders: selectCurrentProjectChangeOrders,\n  projectName: selectCurrentProjectName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProject: projectId => dispatch(fetchCurrentProjectStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectChangeOrders);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/project-change-orders/project-change-orders.page.js"],"names":["React","Component","createStructuredSelector","connect","PurchaseOrderList","selectCurrentProjectChangeOrders","selectCurrentProjectName","selectCurrentProjectPurchaseOrders","fetchCurrentProjectStart","LowerNavBar","PurchaseOrderListContainer","TaskNav","ChangeOrderList","SearchBar","NoResult","ToggleButton","ProjectChangeOrders","constructor","search","searchedText","temp","props","changeOrders","filter","purchasedItem","toLowerCase","includes","setState","VPOsList","toggleSearch","prevState","showSearch","adminToggle","adminSwitch","state","componentDidMount","projectId","match","params","fetchProject","render","projectName","console","log","padding","display","flexDirection","justifyContent","alignItems","borderBottom","fontSize","color","margin","paddingLeft","POsList","length","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport PurchaseOrderList from \"../../components/purchase-orders-list/purchase-orders-list.component\";\r\nimport {\r\n  selectCurrentProjectChangeOrders,\r\n  selectCurrentProjectName,\r\n  selectCurrentProjectPurchaseOrders,\r\n} from \"../../redux/current-project/current-project.selectors\";\r\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport LowerNavBar from \"../../components/lower-nav-bar/lower-nav-bar.component\";\r\nimport PurchaseOrderListContainer from \"../../components/purchase-orders-list/purchase-order-lists.container\";\r\nimport { TaskNav } from \"../../components/task-nav/task-nav.component\";\r\nimport ChangeOrderList from \"../../components/change-orders-list/change-orders-list.component\";\r\nimport SearchBar from \"../../components/search-bar/search-bar.component\";\r\nimport NoResult from \"../../components/no-result/no-result.component\";\r\nimport ToggleButton from \"../../components/toggle-button/toggle-button.component\";\r\n\r\nclass ProjectChangeOrders extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      VPOsList: \"\",\r\n      showSearch: false,\r\n      adminSwitch: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const projectId = this.props.match.params.projectId;\r\n    this.props.fetchProject(projectId);\r\n    this.setState({ VPOsList: this.props.changeOrders });\r\n  }\r\n\r\n  search = (searchedText) => {\r\n    let temp = this.props.changeOrders;\r\n\r\n    if (searchedText) {\r\n      temp = temp.filter(({ purchasedItem }) => {\r\n        return purchasedItem.toLowerCase().includes(searchedText.toLowerCase());\r\n      });\r\n    }\r\n\r\n    this.setState({ VPOsList: temp });\r\n  };\r\n\r\n  toggleSearch = () => {\r\n    this.setState((prevState) => ({\r\n      showSearch: !prevState.showSearch,\r\n    }));\r\n  };\r\n\r\n  adminToggle = () => {\r\n    this.setState((prevState) => ({\r\n      adminSwitch: !prevState.adminSwitch,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { changeOrders, projectName } = this.props;\r\n    const { VPOsList } = this.state;\r\n    console.log(changeOrders);\r\n\r\n    return (\r\n      <div>\r\n        <TaskNav title={projectName} toggleSearch={this.toggleSearch} />\r\n        {this.state.showSearch ? (\r\n          <SearchBar\r\n            placeholder=\"Search variance POs...\"\r\n            search={this.search}\r\n          />\r\n        ) : null}\r\n\r\n        <div\r\n          style={{\r\n            padding: \"1em\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            borderBottom: \"1px solid #BCC5D3\",\r\n          }}\r\n        >\r\n          <ToggleButton\r\n            onToggleFunction={this.adminToggle}\r\n            checked={this.state.adminSwitch}\r\n            color=\"#6C5FCF\"\r\n          />\r\n          <p\r\n            style={{\r\n              fontSize: \"1em\",\r\n              color: \"#666666\",\r\n              margin: \"0\",\r\n              paddingLeft: \"0.5em\",\r\n            }}\r\n          >\r\n            Admin\r\n          </p>\r\n        </div>\r\n\r\n        {POsList.length === 0 ? (\r\n          <NoResult />\r\n        ) : this.state.adminSwitch ? (\r\n          <PurchaseOrdersListAdmin purchaseOrders={POsList} />\r\n        ) : (\r\n          <ChangeOrderList changeOrders={VPOsList} />\r\n        )}\r\n\r\n        <LowerNavBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  changeOrders: selectCurrentProjectChangeOrders,\r\n  projectName: selectCurrentProjectName,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectChangeOrders);\r\n"]},"metadata":{},"sourceType":"module"}