{"ast":null,"code":"import { CurrentProjectActionTypes } from \"./current-project.types\";\nconst INITIAL_STATE = {\n  isCurrentProjectFetching: false,\n  currentProjectId: null,\n  currentProjectName: null,\n  currentProjectStatus: null,\n  currentProjectPurchaseOrders: null,\n  currentProjectChangeOrders: null,\n  currentProjectTasks: null,\n  currentProjectMessage: null,\n  errorMessage: null,\n  isCurrentProjectDeleting: false,\n  deletionMessage: null,\n  deletionError: null\n};\n\nconst currentProjectReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START:\n      return { ...state,\n        isCurrentProjectFetching: true\n      };\n\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_SUCCESS:\n      const {\n        tasks,\n        purchaseOrders,\n        _id,\n        projectName,\n        projectStatus,\n        changeOrders\n      } = action.payload;\n      return { ...state,\n        isCurrentProjectFetching: false,\n        currentProjectStatus: projectStatus,\n        currentProjectName: projectName,\n        currentProjectTasks: tasks,\n        currentProjectPurchaseOrders: purchaseOrders,\n        currentProjectChangeOrders: changeOrders,\n        currentProjectId: _id,\n        currentProjectMessage: 'PROJECT FETCHED!'\n      };\n\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_FAILURE:\n      return { ...state,\n        isCurrentProjectFetching: false,\n        errorMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_TASK_IN_REDUCER:\n      console.log(state);\n      let updatedTasks = state.currentProjectTasks.filter(task => task._id != action.payload);\n      console.log('current project reducer', updatedTasks);\n      console.log(action.payload);\n      return { ...state,\n        currentProjectTasks: updatedTasks\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_START:\n      return {\n        isCurrentProjectDeleting: true\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_SUCCESS:\n      return {\n        isCurrentProjectDeleting: false,\n        deletionMessage: action.payload\n      };\n\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_FAILURE:\n      return {\n        isCurrentProjectDeleting: false,\n        deletionError: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default currentProjectReducer;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/current-project/current-project.reducer.js"],"names":["CurrentProjectActionTypes","INITIAL_STATE","isCurrentProjectFetching","currentProjectId","currentProjectName","currentProjectStatus","currentProjectPurchaseOrders","currentProjectChangeOrders","currentProjectTasks","currentProjectMessage","errorMessage","isCurrentProjectDeleting","deletionMessage","deletionError","currentProjectReducer","state","action","type","FETCH_CURRENT_PROJECT_START","FETCH_CURRENT_PROJECT_SUCCESS","tasks","purchaseOrders","_id","projectName","projectStatus","changeOrders","payload","FETCH_CURRENT_PROJECT_FAILURE","DELETE_CURRENT_TASK_IN_REDUCER","console","log","updatedTasks","filter","task","DELETE_CURRENT_PROJECT_START","DELETE_CURRENT_PROJECT_SUCCESS","DELETE_CURRENT_PROJECT_FAILURE"],"mappings":"AAAA,SAASA,yBAAT,QAA0C,yBAA1C;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,wBAAwB,EAAE,KADN;AAEpBC,EAAAA,gBAAgB,EAAE,IAFE;AAGpBC,EAAAA,kBAAkB,EAAE,IAHA;AAIpBC,EAAAA,oBAAoB,EAAE,IAJF;AAKpBC,EAAAA,4BAA4B,EAAE,IALV;AAMpBC,EAAAA,0BAA0B,EAAE,IANR;AAOpBC,EAAAA,mBAAmB,EAAE,IAPD;AAQpBC,EAAAA,qBAAqB,EAAE,IARH;AASpBC,EAAAA,YAAY,EAAE,IATM;AAUpBC,EAAAA,wBAAwB,EAAE,KAVN;AAWpBC,EAAAA,eAAe,EAAE,IAXG;AAYpBC,EAAAA,aAAa,EAAE;AAZK,CAAtB;;AAeA,MAAMC,qBAAqB,GAAG,CAACC,KAAK,GAAGd,aAAT,EAAwBe,MAAxB,KAAmC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,yBAAyB,CAACkB,2BAA/B;AACE,aAAO,EACL,GAAGH,KADE;AAELb,QAAAA,wBAAwB,EAAE;AAFrB,OAAP;;AAIF,SAAKF,yBAAyB,CAACmB,6BAA/B;AACE,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA,cAAR;AAAwBC,QAAAA,GAAxB;AAA6BC,QAAAA,WAA7B;AAA0CC,QAAAA,aAA1C;AAAyDC,QAAAA;AAAzD,UAAyET,MAAM,CAACU,OAAtF;AACA,aAAO,EACL,GAAGX,KADE;AAELb,QAAAA,wBAAwB,EAAE,KAFrB;AAGLG,QAAAA,oBAAoB,EAAEmB,aAHjB;AAILpB,QAAAA,kBAAkB,EAAEmB,WAJf;AAKLf,QAAAA,mBAAmB,EAAEY,KALhB;AAMLd,QAAAA,4BAA4B,EAAEe,cANzB;AAOLd,QAAAA,0BAA0B,EAAEkB,YAPvB;AAQLtB,QAAAA,gBAAgB,EAAEmB,GARb;AASLb,QAAAA,qBAAqB,EAAE;AATlB,OAAP;;AAYF,SAAKT,yBAAyB,CAAC2B,6BAA/B;AACE,aAAO,EACL,GAAGZ,KADE;AAENb,QAAAA,wBAAwB,EAAE,KAFpB;AAGNQ,QAAAA,YAAY,EAAEM,MAAM,CAACU;AAHf,OAAP;;AAMF,SAAK1B,yBAAyB,CAAC4B,8BAA/B;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACA,UAAIgB,YAAY,GAAGhB,KAAK,CAACP,mBAAN,CAA0BwB,MAA1B,CAAiCC,IAAI,IAAIA,IAAI,CAACX,GAAL,IAAYN,MAAM,CAACU,OAA5D,CAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCC,YAAvC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACU,OAAnB;AACA,aAAO,EACL,GAAGX,KADE;AAENP,QAAAA,mBAAmB,EAAEuB;AAFf,OAAP;;AAIF,SAAK/B,yBAAyB,CAACkC,4BAA/B;AACE,aAAM;AACJvB,QAAAA,wBAAwB,EAAE;AADtB,OAAN;;AAGF,SAAKX,yBAAyB,CAACmC,8BAA/B;AACE,aAAM;AACJxB,QAAAA,wBAAwB,EAAE,KADtB;AAEJC,QAAAA,eAAe,EAAEI,MAAM,CAACU;AAFpB,OAAN;;AAIF,SAAK1B,yBAAyB,CAACoC,8BAA/B;AACE,aAAM;AACJzB,QAAAA,wBAAwB,EAAE,KADtB;AAEJE,QAAAA,aAAa,EAAEG,MAAM,CAACU;AAFlB,OAAN;;AAIF;AACA,aAAOX,KAAP;AAnDF;AAqDD,CAtDD;;AAwDA,eAAeD,qBAAf","sourcesContent":["import { CurrentProjectActionTypes } from \"./current-project.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  isCurrentProjectFetching: false,\r\n  currentProjectId: null,\r\n  currentProjectName: null,\r\n  currentProjectStatus: null,\r\n  currentProjectPurchaseOrders: null,\r\n  currentProjectChangeOrders: null,\r\n  currentProjectTasks: null,\r\n  currentProjectMessage: null,\r\n  errorMessage: null,\r\n  isCurrentProjectDeleting: false,\r\n  deletionMessage: null,\r\n  deletionError: null\r\n};\r\n\r\nconst currentProjectReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        isCurrentProjectFetching: true\r\n      };\r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_SUCCESS:\r\n      const {tasks, purchaseOrders, _id, projectName, projectStatus, changeOrders} = action.payload\r\n      return {\r\n        ...state,\r\n        isCurrentProjectFetching: false,\r\n        currentProjectStatus: projectStatus,\r\n        currentProjectName: projectName,\r\n        currentProjectTasks: tasks,\r\n        currentProjectPurchaseOrders: purchaseOrders,\r\n        currentProjectChangeOrders: changeOrders,\r\n        currentProjectId: _id,\r\n        currentProjectMessage: 'PROJECT FETCHED!'\r\n      };\r\n   \r\n    case CurrentProjectActionTypes.FETCH_CURRENT_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n       isCurrentProjectFetching: false,\r\n       errorMessage: action.payload\r\n      };\r\n    \r\n    case CurrentProjectActionTypes.DELETE_CURRENT_TASK_IN_REDUCER:\r\n      console.log(state)\r\n      let updatedTasks = state.currentProjectTasks.filter(task => task._id != action.payload)\r\n      console.log('current project reducer', updatedTasks)\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n       currentProjectTasks: updatedTasks\r\n      };\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_START:\r\n      return{\r\n        isCurrentProjectDeleting: true\r\n      }\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_SUCCESS:\r\n      return{\r\n        isCurrentProjectDeleting: false,\r\n        deletionMessage: action.payload\r\n      }\r\n    case CurrentProjectActionTypes.DELETE_CURRENT_PROJECT_FAILURE:\r\n      return{\r\n        isCurrentProjectDeleting: false,\r\n        deletionError: action.payload\r\n      }\r\n    default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default currentProjectReducer;\r\n"]},"metadata":{},"sourceType":"module"}