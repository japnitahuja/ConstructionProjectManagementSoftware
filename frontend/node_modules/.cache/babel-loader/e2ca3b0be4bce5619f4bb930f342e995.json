{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\project-change-orders\\\\project-change-orders.page.js\";\nimport React, { Component } from 'react';\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport PurchaseOrderList from '../../components/purchase-orders-list/purchase-orders-list.component';\nimport { selectCurrentProjectChangeOrders, selectCurrentProjectName, selectCurrentProjectPurchaseOrders } from '../../redux/current-project/current-project.selectors';\nimport { fetchCurrentProjectStart } from '../../redux/current-project/current-project.actions';\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\nimport PurchaseOrderListContainer from '../../components/purchase-orders-list/purchase-order-lists.container';\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\nimport ChangeOrderList from '../../components/change-orders-list/change-orders-list.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectChangeOrders extends Component {\n  componentDidMount() {// const projectId = this.props.match.params.projectId;\n    // this.props.fetchProject(projectId);\n  }\n\n  render() {\n    const {\n      changeOrders,\n      projectName\n    } = this.props;\n    console.log(changeOrders);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TaskNav, {\n        title: projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        placeholder: \"Search POs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChangeOrderList, {\n        changeOrders: changeOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LowerNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  changeOrders: selectCurrentProjectChangeOrders,\n  projectName: selectCurrentProjectName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProject: projectId => dispatch(fetchCurrentProjectStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectChangeOrders);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/project-change-orders/project-change-orders.page.js"],"names":["React","Component","createStructuredSelector","connect","PurchaseOrderList","selectCurrentProjectChangeOrders","selectCurrentProjectName","selectCurrentProjectPurchaseOrders","fetchCurrentProjectStart","LowerNavBar","PurchaseOrderListContainer","TaskNav","ChangeOrderList","ProjectChangeOrders","componentDidMount","render","changeOrders","projectName","props","console","log","mapStateToProps","mapDispatchToProps","dispatch","fetchProject","projectId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,sEAA9B;AACA,SAASC,gCAAT,EAA2CC,wBAA3C,EAAqEC,kCAArE,QAA+G,uDAA/G;AACA,SAASC,wBAAT,QAAyC,qDAAzC;AACA,OAAOC,WAAP,MAAwB,wDAAxB;AACA,OAAOC,0BAAP,MAAuC,sEAAvC;AACA,SAASC,OAAT,QAAwB,8CAAxB;AACA,OAAOC,eAAP,MAA4B,kEAA5B;;;AAEA,MAAMC,mBAAN,SAAkCZ,SAAlC,CAA4C;AACxCa,EAAAA,iBAAiB,GAAE,CACf;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,YAAD;AAAeC,MAAAA;AAAf,QAA8B,KAAKC,KAAzC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AAEA,wBACK;AAAA,8BACG,QAAC,OAAD;AAAS,QAAA,KAAK,EAAIC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG,QAAC,eAAD;AAAiB,QAAA,YAAY,EAAID;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHH,eAIG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAQH;;AAlBuC;;AAqB5C,MAAMK,eAAe,GAAGnB,wBAAwB,CAAC;AAC7Cc,EAAAA,YAAY,EAAEX,gCAD+B;AAE7CY,EAAAA,WAAW,EAAEX;AAFgC,CAAD,CAAhD;;AAKE,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;AACtCC,EAAAA,YAAY,EAAGC,SAAD,IAAeF,QAAQ,CAACf,wBAAwB,CAACiB,SAAD,CAAzB;AADC,CAAf,CAA3B;;AAKA,eAAetB,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,mBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport PurchaseOrderList from '../../components/purchase-orders-list/purchase-orders-list.component';\r\nimport { selectCurrentProjectChangeOrders, selectCurrentProjectName, selectCurrentProjectPurchaseOrders } from '../../redux/current-project/current-project.selectors';\r\nimport { fetchCurrentProjectStart } from '../../redux/current-project/current-project.actions';\r\nimport LowerNavBar from '../../components/lower-nav-bar/lower-nav-bar.component';\r\nimport PurchaseOrderListContainer from '../../components/purchase-orders-list/purchase-order-lists.container';\r\nimport { TaskNav } from '../../components/task-nav/task-nav.component';\r\nimport ChangeOrderList from '../../components/change-orders-list/change-orders-list.component';\r\n\r\nclass ProjectChangeOrders extends Component {\r\n    componentDidMount(){\r\n        // const projectId = this.props.match.params.projectId;\r\n        // this.props.fetchProject(projectId);\r\n    }\r\n\r\n    render() {\r\n        const {changeOrders, projectName} = this.props;\r\n        console.log(changeOrders)\r\n        \r\n        return (\r\n             <div>\r\n                <TaskNav title = {projectName}/>\r\n                <SearchBar placeholder=\"Search POs...\"/>\r\n                <ChangeOrderList changeOrders = {changeOrders} />\r\n                <LowerNavBar />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    changeOrders: selectCurrentProjectChangeOrders,\r\n    projectName: selectCurrentProjectName\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n      fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId))\r\n    \r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ProjectChangeOrders);"]},"metadata":{},"sourceType":"module"}