{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\cost-book-item\\\\cost-book-item.page.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { createCostCodeItemStart, fetchCostBookStart } from \"../../redux/costbook/costbook.actions\";\nimport { selectCostBookDetails } from \"../../redux/costbook/costbook.selectors\";\nimport { Link } from \"react-router-dom\";\nimport CostCodeDisplayItem from \"../../components/costcode-displayitem/costcode-displayitem.component\";\nimport CostCodeEditItem from \"../../components/costcode-edititem/costcode-edititem.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CostBookItem extends Component {\n  constructor() {\n    super();\n\n    this.toggleEdit = () => {\n      this.setState(prevState => ({\n        showEdit: !prevState.showEdit\n      }));\n    };\n\n    this.itemOnChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let itemInfo = this.state.items;\n      itemInfo[name] = value;\n      this.setState({\n        items: itemInfo\n      }, () => {\n        console.log(this.state.items);\n      });\n    };\n\n    this.editItem = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      item: {},\n      showEdit: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCostBook();\n    console.log(\"component mounted\", this.props.costbook);\n    this.items();\n  }\n\n  render() {\n    const {\n      items\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.showEdit ? /*#__PURE__*/_jsxDEV(CostCodeDisplayItem, {\n        toggleEdit: this.toggleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CostCodeEditItem, {\n        toggleEdit: this.toggleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  costbook: selectCostBookDetails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCostBook: () => dispatch(fetchCostBookStart()),\n  createItem: itemDetails => dispatch(createCostCodeItemStart(itemDetails)) // createCategory: (costBookDetails) => dispatch(createCostBookCategoryStart(costBookDetails)),\n  // createCostCode: (costCodeDetails) => dispatch(createCostCodeStart(costCodeDetails))\n  //updateRoles: (payload) => dispatch(UpdateRolesInProjectStart(payload)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CostBookItem);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/cost-book-item/cost-book-item.page.js"],"names":["React","Component","connect","createStructuredSelector","createCostCodeItemStart","fetchCostBookStart","selectCostBookDetails","Link","CostCodeDisplayItem","CostCodeEditItem","CostBookItem","constructor","toggleEdit","setState","prevState","showEdit","itemOnChange","e","preventDefault","name","value","target","itemInfo","state","items","console","log","editItem","item","componentDidMount","props","fetchCostBook","costbook","render","mapStateToProps","mapDispatchToProps","dispatch","createItem","itemDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,uBADF,EAEEC,kBAFF,QAGO,uCAHP;AAIA,SAASC,qBAAT,QAAsC,yCAAtC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,gBAAP,MAA6B,gEAA7B;;;;AAEA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AACnCU,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,UAbc,GAaD,MAAM;AACjB,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,QAAAA,QAAQ,EAAE,CAACD,SAAS,CAACC;AADO,OAAhB,CAAd;AAGD,KAjBa;;AAAA,SAmCdC,YAnCc,GAmCEC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBH,CAAC,CAACI,MAA1B;AACA,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,KAA1B;AACAF,MAAAA,QAAQ,CAACH,IAAD,CAAR,GAAiBC,KAAjB;AACA,WAAKP,QAAL,CAAc;AAAEW,QAAAA,KAAK,EAAEF;AAAT,OAAd,EAAmC,MAAM;AACvCG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWC,KAAvB;AACD,OAFD;AAGD,KA3Ca;;AAAA,SA6CdG,QA7Cc,GA6CFV,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACD,KA/Ca;;AAEZ,SAAKK,KAAL,GAAa;AACXK,MAAAA,IAAI,EAAE,EADK;AAEXb,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AACDc,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,aAAX;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKI,KAAL,CAAWE,QAA5C;AACA,SAAKR,KAAL;AACD;;AAsCDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAA,gBACG,KAAKA,KAAL,CAAWR,QAAX,gBACC,QAAC,mBAAD;AAAqB,QAAA,UAAU,EAAE,KAAKH;AAAtC;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,gBAAD;AAAkB,QAAA,UAAU,EAAE,KAAKA;AAAnC;AAAA;AAAA;AAAA;AAAA;AAJJ,qBADF;AA8CD;;AAlGkC;;AAqGrC,MAAMsB,eAAe,GAAG/B,wBAAwB,CAAC;AAC/C6B,EAAAA,QAAQ,EAAE1B;AADqC,CAAD,CAAhD;;AAIA,MAAM6B,kBAAkB,GAAIC,QAAD,KAAe;AACxCL,EAAAA,aAAa,EAAE,MAAMK,QAAQ,CAAC/B,kBAAkB,EAAnB,CADW;AAExCgC,EAAAA,UAAU,EAAGC,WAAD,IAAiBF,QAAQ,CAAChC,uBAAuB,CAACkC,WAAD,CAAxB,CAFG,CAGxC;AACA;AACA;;AALwC,CAAf,CAA3B;;AAQA,eAAepC,OAAO,CAACgC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CzB,YAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createCostCodeItemStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\nimport { selectCostBookDetails } from \"../../redux/costbook/costbook.selectors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CostCodeDisplayItem from \"../../components/costcode-displayitem/costcode-displayitem.component\";\r\nimport CostCodeEditItem from \"../../components/costcode-edititem/costcode-edititem.component\";\r\n\r\nclass CostBookItem extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      item: {},\r\n      showEdit: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchCostBook();\r\n    console.log(\"component mounted\", this.props.costbook);\r\n    this.items();\r\n  }\r\n\r\n  toggleEdit = () => {\r\n    this.setState((prevState) => ({\r\n      showEdit: !prevState.showEdit,\r\n    }));\r\n  };\r\n\r\n  //   items = () => {\r\n  //     console.log(this.props.costbook, \"hi\");\r\n  //     let category = this.props.costbook.find(\r\n  //       (book) => book._id === this.props.match.params.categoryId\r\n  //     );\r\n  //     //console.log(category)\r\n  //     let costCodeItem = category.costCodes.find(\r\n  //       (id) => id._id === this.props.match.params.costCodeId\r\n  //     );\r\n  //     let item = costCodeItem.items.find(\r\n  //       (id) => id._id === this.props.match.params.itemId\r\n  //     );\r\n  //     console.log(item);\r\n  //     this.setState({ items: item }, () => console.log(this.state));\r\n  //   };\r\n\r\n  itemOnChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let itemInfo = this.state.items;\r\n    itemInfo[name] = value;\r\n    this.setState({ items: itemInfo }, () => {\r\n      console.log(this.state.items);\r\n    });\r\n  };\r\n\r\n  editItem = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { items } = this.state;\r\n    return (\r\n      <>\r\n        {this.state.showEdit ? (\r\n          <CostCodeDisplayItem toggleEdit={this.toggleEdit} />\r\n        ) : (\r\n          <CostCodeEditItem toggleEdit={this.toggleEdit} />\r\n        )}\r\n        {/* <div>\r\n          <h2>ITEM NAME</h2> <h4>{items.itemName}</h4>\r\n          <h2>PART#</h2> <h4>{items.partNo}</h4>\r\n          <h2>COST/RATE</h2>\r\n          <h4>{items.cost}</h4>\r\n          <h2>ITEM LINK</h2>\r\n          <h4>{items.link}</h4>\r\n          <h2>DESCRIPTION</h2>\r\n          <h4>{items.description}</h4>\r\n        </div>\r\n        <form onChange={this.itemOnChange}>\r\n          <h3>EDIT ITEM</h3>\r\n          <label htmlFor=\"itemName\" id=\"itemName\" name=\"itemName\">\r\n            Item Name\r\n          </label>\r\n          <input type=\"text\" id=\"itemName\" name=\"itemName\" />\r\n          <br />\r\n          <label htmlFor=\"partNo\" id=\"partNo\" name=\"partNo\">\r\n            Part No.{\" \"}\r\n          </label>\r\n          <input type=\"number\" id=\"partNo\" name=\"partNo\" />\r\n          <br />\r\n          <label htmlFor=\"cost\" id=\"cost\" name=\"cost\">\r\n            Cost\r\n          </label>\r\n          <input type=\"number\" id=\"cost\" name=\"cost\" />\r\n          <br />\r\n          <label htmlFor=\"itemLink\" id=\"itemLink\" name=\"itemLink\">\r\n            Item Link\r\n          </label>\r\n          <input type=\"text\" id=\"itemLink\" name=\"itemLink\" />\r\n          <br />\r\n          <label htmlFor=\"description\" id=\"description\" name=\"description\">\r\n            Description\r\n          </label>\r\n          <input type=\"text\" id=\"description\" name=\"description\" />\r\n        </form> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  costbook: selectCostBookDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCostBook: () => dispatch(fetchCostBookStart()),\r\n  createItem: (itemDetails) => dispatch(createCostCodeItemStart(itemDetails)),\r\n  // createCategory: (costBookDetails) => dispatch(createCostBookCategoryStart(costBookDetails)),\r\n  // createCostCode: (costCodeDetails) => dispatch(createCostCodeStart(costCodeDetails))\r\n  //updateRoles: (payload) => dispatch(UpdateRolesInProjectStart(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CostBookItem);\r\n"]},"metadata":{},"sourceType":"module"}