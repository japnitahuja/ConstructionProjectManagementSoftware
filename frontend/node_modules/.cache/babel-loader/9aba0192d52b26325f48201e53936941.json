{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\adduser-form\\\\form-dropdown.component.jsx\";\nimport React, { Component } from \"react\";\nimport { DropDownDiv, DropDownButton, DropDownContent, DropDownOption, DropDownOptionHeading, DropDownOptionDescription } from \"./form-dropdown.styles\";\nimport DownArrow from \"../../assets/down-arrow.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DropDown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOutside = event => {\n      if (this.dropdownContainer.current && !this.dropdownContainer.current.contains(event.target)) {\n        this.setState({\n          dropDownSwitch: false\n        });\n      }\n    };\n\n    this.DropDownToggle = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        dropDownSwitch: !prevState.dropDownSwitch\n      }));\n    };\n\n    this.handleOptionClick = e => {\n      e.preventDefault();\n      console.log(\"change\");\n      let {\n        permission\n      } = e.target.dataset;\n      this.props.onChangePermission(this.props.userID, permission);\n      this.setState({\n        dropDownSwitch: false,\n        selected: permission\n      });\n    };\n\n    this.dropdownContainer = /*#__PURE__*/React.createRef();\n    this.state = {\n      dropDownSwitch: false,\n      selected: this.props.selected\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  render() {\n    console.log(this.props);\n    let {\n      options\n    } = this.props;\n    let {\n      selected\n    } = this.state;\n    console.log(\"selected\", selected);\n    let selectedIndex = 0;\n    options.map((option, index) => {\n      if (option[0] === selected) {\n        selectedIndex = index;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(DropDownDiv, {\n      ref: this.dropdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(DropDownButton, {\n        onClick: this.DropDownToggle,\n        img: DownArrow,\n        children: selected != \" \" ? `${options[selectedIndex][1]}` : \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropDownContent, {\n        display: this.state.dropDownSwitch ? \"block\" : \"none\",\n        children: [selected != \" \" ? /*#__PURE__*/_jsxDEV(DropDownOption, {\n          \"data-permission\": options[selectedIndex][0],\n          onClick: this.handleOptionClick,\n          backgroundFlag: true,\n          children: [/*#__PURE__*/_jsxDEV(DropDownOptionHeading, {\n            \"data-permission\": options[selectedIndex][0],\n            onClick: this.handleOptionClick,\n            children: options[selectedIndex][1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DropDownOptionDescription, {\n            \"data-permission\": options[selectedIndex][0],\n            onClick: this.handleOptionClick,\n            children: options[selectedIndex][2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this) : null, options.map(option => {\n          let selectedFlag = false;\n\n          if (option[0] != selected) {\n            return /*#__PURE__*/_jsxDEV(DropDownOption, {\n              \"data-permission\": option[0],\n              onClick: this.handleOptionClick,\n              backgroundFlag: selectedFlag,\n              children: [/*#__PURE__*/_jsxDEV(DropDownOptionHeading, {\n                \"data-permission\": option[0],\n                onClick: this.handleOptionClick,\n                children: option[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DropDownOptionDescription, {\n                \"data-permission\": option[0],\n                onClick: this.handleOptionClick,\n                children: option[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DropDown;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/adduser-form/form-dropdown.component.jsx"],"names":["React","Component","DropDownDiv","DropDownButton","DropDownContent","DropDownOption","DropDownOptionHeading","DropDownOptionDescription","DownArrow","DropDown","constructor","props","handleClickOutside","event","dropdownContainer","current","contains","target","setState","dropDownSwitch","DropDownToggle","e","preventDefault","prevState","handleOptionClick","console","log","permission","dataset","onChangePermission","userID","selected","createRef","state","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","options","selectedIndex","map","option","index","selectedFlag"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  DropDownDiv,\r\n  DropDownButton,\r\n  DropDownContent,\r\n  DropDownOption,\r\n  DropDownOptionHeading,\r\n  DropDownOptionDescription,\r\n} from \"./form-dropdown.styles\";\r\nimport DownArrow from \"../../assets/down-arrow.png\";\r\n\r\nclass DropDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.dropdownContainer = React.createRef();\r\n    this.state = {\r\n      dropDownSwitch: false,\r\n      selected: this.props.selected,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  handleClickOutside = (event) => {\r\n    if (\r\n      this.dropdownContainer.current &&\r\n      !this.dropdownContainer.current.contains(event.target)\r\n    ) {\r\n      this.setState({\r\n        dropDownSwitch: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  DropDownToggle = (e) => {\r\n    e.preventDefault();\r\n    this.setState((prevState) => ({\r\n      dropDownSwitch: !prevState.dropDownSwitch,\r\n    }));\r\n  };\r\n\r\n  handleOptionClick = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"change\");\r\n    let { permission } = e.target.dataset;\r\n    this.props.onChangePermission(this.props.userID, permission);\r\n    this.setState({ dropDownSwitch: false, selected: permission });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    let { options } = this.props;\r\n    let { selected } = this.state;\r\n    console.log(\"selected\", selected);\r\n\r\n    let selectedIndex = 0;\r\n    options.map((option, index) => {\r\n      if (option[0] === selected) {\r\n        selectedIndex = index;\r\n      }\r\n    });\r\n    return (\r\n      <DropDownDiv ref={this.dropdownContainer}>\r\n        <DropDownButton onClick={this.DropDownToggle} img={DownArrow}>\r\n          {selected != \" \" ? `${options[selectedIndex][1]}` : \"Select\"}\r\n        </DropDownButton>\r\n        <DropDownContent display={this.state.dropDownSwitch ? \"block\" : \"none\"}>\r\n          {selected != \" \" ? (\r\n            <DropDownOption\r\n              data-permission={options[selectedIndex][0]}\r\n              onClick={this.handleOptionClick}\r\n              backgroundFlag={true}\r\n            >\r\n              <DropDownOptionHeading\r\n                data-permission={options[selectedIndex][0]}\r\n                onClick={this.handleOptionClick}\r\n              >\r\n                {options[selectedIndex][1]}\r\n              </DropDownOptionHeading>\r\n              <DropDownOptionDescription\r\n                data-permission={options[selectedIndex][0]}\r\n                onClick={this.handleOptionClick}\r\n              >\r\n                {options[selectedIndex][2]}\r\n              </DropDownOptionDescription>\r\n            </DropDownOption>\r\n          ) : null}\r\n\r\n          {options.map((option) => {\r\n            let selectedFlag = false;\r\n            if (option[0] != selected) {\r\n              return (\r\n                <DropDownOption\r\n                  data-permission={option[0]}\r\n                  onClick={this.handleOptionClick}\r\n                  backgroundFlag={selectedFlag}\r\n                >\r\n                  <DropDownOptionHeading\r\n                    data-permission={option[0]}\r\n                    onClick={this.handleOptionClick}\r\n                  >\r\n                    {option[1]}\r\n                  </DropDownOptionHeading>\r\n                  <DropDownOptionDescription\r\n                    data-permission={option[0]}\r\n                    onClick={this.handleOptionClick}\r\n                  >\r\n                    {option[2]}\r\n                  </DropDownOptionDescription>\r\n                </DropDownOption>\r\n              );\r\n            }\r\n          })}\r\n        </DropDownContent>\r\n      </DropDownDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropDown;\r\n"]},"metadata":{},"sourceType":"module"}