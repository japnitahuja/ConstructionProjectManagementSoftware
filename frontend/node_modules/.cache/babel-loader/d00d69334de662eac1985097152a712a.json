{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\project-item\\\\project-item.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { createStructuredSelector } from 'reselect';\nimport { deleteCurrentProjectStart } from '../../redux/current-project/current-project.actions';\nimport { DeleteButton } from '../delete-button/delete-button.styles';\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, UpperDiv, LowerDiv, Image, ProgressCircle } from \"./project-item.styles\";\nimport checkCircle from '../../assets/check-circle.png';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport check from '../../assets/check_box.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      projectName: this.props.projectName,\n      totalTasks: this.props.totalTasks,\n      completedTasks: this.props.completedTasks,\n      projectBudget: this.props.projectBudget,\n      published: this.props.published\n    };\n  }\n\n  deleteProject(e) {\n    console.log(\"delete button\", this.state.id);\n    let projectId = this.state.id;\n    this.props.deleteProject(projectId);\n    window.location.reload();\n  }\n\n  render() {\n    const {\n      id,\n      published,\n      projectName,\n      totalTasks,\n      completedTasks,\n      projectBudget\n    } = this.state;\n    const progress = completedTasks / totalTasks * 100;\n    console.log(progress);\n\n    if (isNan(progress)) {\n      progress = 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/project/${id}`,\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(ProjectDiv, {\n        children: [/*#__PURE__*/_jsxDEV(LeftDiv, {\n          children: [/*#__PURE__*/_jsxDEV(UpperDiv, {\n            children: [/*#__PURE__*/_jsxDEV(BigText, {\n              children: projectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SmallText, {\n              children: [\"Total: $\", projectBudget]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(LowerDiv, {\n            children: published ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: checkCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), \"PUBLISHED\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 45\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RightDiv, {\n          children: [/*#__PURE__*/_jsxDEV(UpperDiv, {\n            children: /*#__PURE__*/_jsxDEV(ProgressCircle, {\n              children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                value: progress,\n                text: `${progress}%`,\n                styles: buildStyles({\n                  // Rotation of path and trail, in number of turns (0-1)\n                  rotation: 0.25,\n                  // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                  strokeLinecap: 'round',\n                  // Text size\n                  textSize: '1em',\n                  // How long animation takes to go from one percentage to another, in seconds\n                  pathTransitionDuration: 0.5,\n                  // Can specify path transition in more detail, or remove it entirely\n                  // pathTransition: 'none',\n                  // Colors\n                  pathColor: '#429629',\n                  textColor: '#666666'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LowerDiv, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: '#BCC5D3',\n                fontWeight: 'normal',\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: check\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), completedTasks, \"/\", totalTasks, \" TASKS\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteProject: projectId => dispatch(deleteCurrentProjectStart(projectId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectItem);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/project-item/project-item.component.jsx"],"names":["React","Component","connect","Link","createStructuredSelector","deleteCurrentProjectStart","DeleteButton","ProjectDiv","LeftDiv","RightDiv","BigText","SmallText","UpperDiv","LowerDiv","Image","ProgressCircle","checkCircle","CircularProgressbar","buildStyles","check","ProjectItem","constructor","props","state","id","projectName","totalTasks","completedTasks","projectBudget","published","deleteProject","e","console","log","projectId","window","location","reload","render","progress","isNan","textDecoration","display","flexDirection","justifyContent","alignItems","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","color","fontWeight","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { deleteCurrentProjectStart } from '../../redux/current-project/current-project.actions';\r\nimport { DeleteButton } from '../delete-button/delete-button.styles';\r\nimport { ProjectDiv, LeftDiv, RightDiv, BigText, SmallText, UpperDiv, LowerDiv, Image, ProgressCircle} from \"./project-item.styles\";\r\nimport checkCircle from '../../assets/check-circle.png';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport check from '../../assets/check_box.png'\r\n\r\nclass ProjectItem extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.id,\r\n            projectName: this.props.projectName,\r\n            totalTasks: this.props.totalTasks,\r\n            completedTasks: this.props.completedTasks, \r\n            projectBudget: this.props.projectBudget,\r\n            published: this.props.published\r\n        }\r\n    }\r\n    deleteProject(e){\r\n        console.log(\"delete button\", this.state.id);\r\n        let projectId = this.state.id\r\n        this.props.deleteProject(projectId);\r\n        window.location.reload()\r\n    }\r\n    render() {\r\n        const {id, published, projectName, totalTasks, completedTasks,projectBudget} = this.state;\r\n        const progress = completedTasks/totalTasks*100;\r\n\r\n        console.log(progress)\r\n\r\n        if (isNan(progress)){\r\n            progress = 0;\r\n        }\r\n\r\n        return (\r\n            <Link to={`/project/${id}`} style={{textDecoration:'none'}}>\r\n                <ProjectDiv key={id}>\r\n                    <LeftDiv>\r\n                            <UpperDiv>\r\n                                <BigText>{projectName}</BigText>\r\n                                <SmallText>Total: ${projectBudget}</SmallText>\r\n                            </UpperDiv>\r\n                            <LowerDiv>\r\n                                {published? <div style={{display:'flex', flexDirection: 'row', justifyContent:'center', alignItems:'center'}}>\r\n                                    <Image src = {checkCircle}/>PUBLISHED\r\n                                </div>:null}\r\n                                \r\n                            </LowerDiv>\r\n                    </LeftDiv>\r\n                    \r\n                    <RightDiv>\r\n                        <UpperDiv>\r\n                            <ProgressCircle>\r\n                                <CircularProgressbar value={progress} text={`${progress}%`}\r\n                                styles={buildStyles({\r\n                                    // Rotation of path and trail, in number of turns (0-1)\r\n                                    rotation: 0.25,\r\n                                \r\n                                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                    strokeLinecap: 'round',\r\n                                \r\n                                    // Text size\r\n                                    textSize: '1em',\r\n                                \r\n                                    // How long animation takes to go from one percentage to another, in seconds\r\n                                    pathTransitionDuration: 0.5,\r\n                                \r\n                                    // Can specify path transition in more detail, or remove it entirely\r\n                                    // pathTransition: 'none',\r\n                                \r\n                                    // Colors\r\n                                    pathColor: '#429629',\r\n                                    textColor: '#666666'\r\n                                  })}/>\r\n\r\n                            </ProgressCircle>\r\n                            \r\n                        </UpperDiv>\r\n                        <LowerDiv>\r\n                            <div style={{color: '#BCC5D3', fontWeight: 'normal', display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\r\n                                <Image src={check}/>\r\n                                {completedTasks}/{totalTasks} TASKS\r\n                            </div>\r\n\r\n                            {/* <DeleteButton onClick={(e)=>this.deleteProject(e)}>DELETE</DeleteButton> */}\r\n                            \r\n                        </LowerDiv>\r\n                    </RightDiv>\r\n                </ProjectDiv>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteProject: (projectId) => dispatch(deleteCurrentProjectStart(projectId))\r\n  });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectItem)\r\n\r\n"]},"metadata":{},"sourceType":"module"}