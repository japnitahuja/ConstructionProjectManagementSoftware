{"ast":null,"code":"import { all, call, put, takeLatest, select, delay } from \"redux-saga/effects\";\nimport { createCostBookCategoryFail, createCostBookCategorySucessful, createCostCodeFailute, createCostCodeItemFailure, createCostCodeItemSuccess, createCostCodeSuccess, editCostBookCostCodeFailure, editCostBookCostCodeSucessful, editCostBookItemsFailure, editCostBookItemsSuccess, fetchCostBookFailure, fetchCostBookSuccess } from \"./costbook.actions\";\nimport { CostBookActionTypes } from \"./costbook.types\";\nexport function* fetchCostBook({\n  payload\n}) {\n  try {\n    let costBook = yield fetch(`http://127.0.0.1:5000/costbook`);\n    costBook = yield costBook.json();\n    costBook.done ? yield put(fetchCostBookSuccess(costBook.costbook)) : yield put(fetchCostBookFailure('Error.'));\n  } catch (error) {\n    fetchCostBookFailure(error);\n  }\n}\nexport function* createCostBookCategory({\n  payload\n}) {\n  console.log('in saga', payload);\n  let data = payload;\n\n  try {\n    let costbookcategory = yield fetch(`http://127.0.0.1:5000/createCostBookCategory`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    costbookcategory = yield costbookcategory.json();\n\n    if (costbookcategory.done) {\n      yield put(createCostBookCategorySucessful(costbookcategory.message));\n    } else {\n      yield put(createCostBookCategoryFail('error'));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* createCostBookCostCodeStart({\n  payload\n}) {\n  console.log('in saga', payload);\n  let data = payload;\n\n  try {\n    let resp = yield fetch(`http://127.0.0.1:5000/createCostCode`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(createCostCodeSuccess(resp.message));\n    } else {\n      yield put(createCostCodeFailute('error'));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* createCostBookCostCodeItemStart({\n  payload\n}) {\n  let data = payload;\n\n  try {\n    let resp = yield fetch(`http://127.0.0.1:5000/createCostCodeItem`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(createCostCodeItemSuccess(resp.message));\n    } else {\n      yield put(createCostCodeItemFailure('error'));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* editCostBookCostCodeStart({\n  payload\n}) {\n  const data = payload;\n\n  try {\n    let resp = yield fetch(`http://127.0.0.1:5000/editCostCode`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(editCostBookCostCodeSucessful(resp.message));\n    } else {\n      yield put(editCostBookCostCodeFailure('error'));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* editCostBookItemStart({\n  payload\n}) {\n  let data = payload;\n\n  try {\n    let resp = yield fetch(`http://127.0.0.1:5000/editCostCodeItem`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(editCostBookItemsSuccess(resp.message));\n    } else {\n      yield put(editCostBookItemsFailure('error'));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* onCostBookFetchStart() {\n  yield takeLatest(CostBookActionTypes.FETCH_COST_BOOK_START, fetchCostBook);\n}\nexport function* onCreateCostCodeStart() {\n  yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_COSTCODE_START, createCostBookCostCodeStart);\n}\nexport function* onCreateCostCodeItemStart() {\n  yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_COSTCODEITEM_START, createCostBookCostCodeItemStart);\n}\nexport function* onCreateCostCodeCategoryStart() {\n  yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_CATEGORY_START, createCostBookCategory);\n}\nexport function* onEditCostCodeStart() {\n  yield takeLatest(CostBookActionTypes.EDIT_COSTBOOK_COSTCODE_START, editCostBookCostCodeStart);\n}\nexport function* onEditCostBookItemStart() {\n  yield takeLatest(CostBookActionTypes.EDIT_COSTBOOK_ITEM_START, editCostBookItemStart);\n}\nexport function* costBookSagas() {\n  yield all([call(onCostBookFetchStart), call(onCreateCostCodeItemStart), call(onCreateCostCodeStart), call(onCreateCostCodeCategoryStart), call(onEditCostCodeStart), call(onEditCostBookItemStart)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/costbook/costbook.saga.js"],"names":["all","call","put","takeLatest","select","delay","createCostBookCategoryFail","createCostBookCategorySucessful","createCostCodeFailute","createCostCodeItemFailure","createCostCodeItemSuccess","createCostCodeSuccess","editCostBookCostCodeFailure","editCostBookCostCodeSucessful","editCostBookItemsFailure","editCostBookItemsSuccess","fetchCostBookFailure","fetchCostBookSuccess","CostBookActionTypes","fetchCostBook","payload","costBook","fetch","json","done","costbook","error","createCostBookCategory","console","log","data","costbookcategory","method","headers","body","JSON","stringify","message","createCostBookCostCodeStart","resp","createCostBookCostCodeItemStart","editCostBookCostCodeStart","editCostBookItemStart","onCostBookFetchStart","FETCH_COST_BOOK_START","onCreateCostCodeStart","CREATE_COST_BOOK_COSTCODE_START","onCreateCostCodeItemStart","CREATE_COST_BOOK_COSTCODEITEM_START","onCreateCostCodeCategoryStart","CREATE_COST_BOOK_CATEGORY_START","onEditCostCodeStart","EDIT_COSTBOOK_COSTCODE_START","onEditCostBookItemStart","EDIT_COSTBOOK_ITEM_START","costBookSagas"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest, select, delay} from \"redux-saga/effects\";\r\n    import { createCostBookCategoryFail, createCostBookCategorySucessful, createCostCodeFailute, createCostCodeItemFailure, createCostCodeItemSuccess, createCostCodeSuccess, editCostBookCostCodeFailure, editCostBookCostCodeSucessful, editCostBookItemsFailure, editCostBookItemsSuccess, fetchCostBookFailure, fetchCostBookSuccess } from \"./costbook.actions\";\r\nimport { CostBookActionTypes } from \"./costbook.types\";\r\n\r\nexport function* fetchCostBook({payload}){\r\n  try {\r\n    let costBook = yield fetch(`http://127.0.0.1:5000/costbook`)\r\n    costBook = yield costBook.json()\r\n\r\n    costBook.done\r\n    ? yield put(fetchCostBookSuccess(costBook.costbook))\r\n    : yield put(fetchCostBookFailure('Error.'))\r\n  } catch (error) {\r\n    fetchCostBookFailure(error)\r\n  }\r\n}\r\n\r\nexport function* createCostBookCategory({payload}){\r\n    console.log('in saga', payload)\r\n    let data = payload\r\n    try {\r\n        let costbookcategory = yield fetch(`http://127.0.0.1:5000/createCostBookCategory`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n          })\r\n        costbookcategory = yield costbookcategory.json()\r\n        if(costbookcategory.done){\r\n            yield put(createCostBookCategorySucessful(costbookcategory.message))\r\n        }else{\r\n            yield put(createCostBookCategoryFail('error'))\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* createCostBookCostCodeStart({payload}){\r\n  console.log('in saga', payload)\r\n    let data = payload\r\n    try {\r\n        let resp = yield fetch(`http://127.0.0.1:5000/createCostCode`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(data),\r\n            }\r\n         )\r\n         resp = yield resp.json()\r\n         if(resp.done){\r\n             yield put(createCostCodeSuccess(resp.message))\r\n         }else{\r\n             yield put(createCostCodeFailute('error'))\r\n         }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* createCostBookCostCodeItemStart({payload}){\r\n    let data = payload\r\n    try {\r\n        let resp = yield fetch(`http://127.0.0.1:5000/createCostCodeItem`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(data),\r\n            }\r\n         )\r\n         resp = yield resp.json()\r\n         if(resp.done){\r\n             yield put(createCostCodeItemSuccess(resp.message))\r\n         }else{\r\n             yield put(createCostCodeItemFailure('error'))\r\n         }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* editCostBookCostCodeStart({payload}){\r\n  const data = payload\r\n  try {\r\n    let resp = yield fetch(`http://127.0.0.1:5000/editCostCode`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(data),\r\n            }\r\n         )\r\n         resp = yield resp.json()\r\n         if(resp.done){\r\n             yield put(editCostBookCostCodeSucessful(resp.message))\r\n         }else{\r\n             yield put(editCostBookCostCodeFailure('error'))\r\n         }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function* editCostBookItemStart({payload}){\r\n  let data = payload\r\n  try {\r\n    let resp = yield fetch(`http://127.0.0.1:5000/editCostCodeItem`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(data),\r\n            }\r\n         )\r\n         resp = yield resp.json()\r\n         if(resp.done){\r\n             yield put(editCostBookItemsSuccess(resp.message))\r\n         }else{\r\n             yield put(editCostBookItemsFailure('error'))\r\n         }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function* onCostBookFetchStart(){\r\n  yield takeLatest(CostBookActionTypes.FETCH_COST_BOOK_START, fetchCostBook)\r\n}\r\n\r\nexport function* onCreateCostCodeStart(){\r\n    yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_COSTCODE_START, createCostBookCostCodeStart)\r\n}\r\n\r\nexport function* onCreateCostCodeItemStart(){\r\n    yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_COSTCODEITEM_START, createCostBookCostCodeItemStart)\r\n}\r\n\r\nexport function* onCreateCostCodeCategoryStart(){\r\n  yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_CATEGORY_START, createCostBookCategory)\r\n}\r\n\r\nexport function* onEditCostCodeStart(){\r\n yield takeLatest(CostBookActionTypes.EDIT_COSTBOOK_COSTCODE_START, editCostBookCostCodeStart)\r\n}\r\n\r\nexport function* onEditCostBookItemStart(){\r\n  yield takeLatest(CostBookActionTypes.EDIT_COSTBOOK_ITEM_START, editCostBookItemStart)\r\n}\r\n\r\nexport function* costBookSagas() {\r\n  yield all([\r\n    call(onCostBookFetchStart),\r\n    call(onCreateCostCodeItemStart),\r\n    call(onCreateCostCodeStart),\r\n    call(onCreateCostCodeCategoryStart),\r\n    call(onEditCostCodeStart),\r\n    call(onEditCostBookItemStart)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}