{"ast":null,"code":"import { all, call, put, takeLatest, select, delay } from \"redux-saga/effects\";\nimport { createCostBookCategoryFail, createCostBookCategorySucessful, createCostCodeFailute, createCostCodeItemFailure, createCostCodeItemSuccess, createCostCodeSuccess, fetchCostBookFailure, fetchCostBookSuccess } from \"./costbook.actions\";\nimport { CostBookActionTypes } from \"./costbook.types\";\nexport function* fetchCostBook({\n  payload\n}) {\n  try {\n    let costBook = yield fetch(`http://127.0.0.1:5000/costbook`);\n    costBook = yield costBook.json();\n    costBook.done ? yield put(fetchCostBookSuccess(costBook.costbook)) : yield put(fetchCostBookFailure('Error.'));\n  } catch (error) {\n    fetchCostBookFailure(error);\n  }\n}\nexport function* createCostBookCategory({\n  payload\n}) {\n  let data = payload;\n\n  try {\n    let costbookcategory = yield fetch(`http://127.0.0.1:5000/createCostBookCategory`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    costbookcategory = yield costbookcategory.json();\n\n    if (costbookcategory.done) {\n      yield put(createCostBookCategorySucessful(costbookcategory.message));\n    } else {\n      yield put(createCostBookCategoryFail('error'));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* createCostBookCostCodeStart({\n  payload\n}) {\n  let data = payload;\n\n  try {\n    let resp = yield fetch(`http://127.0.0.1:5000/createCostBookCategory/createCostCode`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(createCostCodeSuccess(resp.message));\n    } else {\n      yield put(createCostCodeFailute('error'));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* createCostBookCostCodeItemStart({\n  payload\n}) {\n  let data = payload;\n\n  try {\n    let resp = yield fetch(`http://127.0.0.1:5000/createCostBookCategory/createCostCodeItem`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    resp = yield resp.json();\n\n    if (resp.done) {\n      yield put(createCostCodeItemSuccess(resp.message));\n    } else {\n      yield put(createCostCodeItemFailure('error'));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n} // export function* onTaskCreateStart(){\n//   yield takeLatest(CostBookActionTypes.CREATE_TASK_START, createTask)\n// }\n\nexport function* onCostBookFetchStart() {\n  yield takeLatest(CostBookActionTypes.FETCH_COST_BOOK_START, fetchCostBook);\n}\nexport function* onCreateCostCodeStart() {\n  yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_COSTCODE_START, createCostBookCostCodeStart);\n}\nexport function* onCreateCostCodeItemStart() {\n  yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_COSTCODEITEM_START, createCostBookCostCodeItemStart);\n}\nexport function* costBookSagas() {\n  yield all([call(onCostBookFetchStart), call(onCreateCostCodeItemStart), call(onCreateCostCodeStart)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/costbook/costbook.saga.js"],"names":["all","call","put","takeLatest","select","delay","createCostBookCategoryFail","createCostBookCategorySucessful","createCostCodeFailute","createCostCodeItemFailure","createCostCodeItemSuccess","createCostCodeSuccess","fetchCostBookFailure","fetchCostBookSuccess","CostBookActionTypes","fetchCostBook","payload","costBook","fetch","json","done","costbook","error","createCostBookCategory","data","costbookcategory","method","headers","body","JSON","stringify","message","console","log","createCostBookCostCodeStart","resp","createCostBookCostCodeItemStart","onCostBookFetchStart","FETCH_COST_BOOK_START","onCreateCostCodeStart","CREATE_COST_BOOK_COSTCODE_START","onCreateCostCodeItemStart","CREATE_COST_BOOK_COSTCODEITEM_START","costBookSagas"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest, select, delay} from \"redux-saga/effects\";\r\n    import { createCostBookCategoryFail, createCostBookCategorySucessful, createCostCodeFailute, createCostCodeItemFailure, createCostCodeItemSuccess, createCostCodeSuccess, fetchCostBookFailure, fetchCostBookSuccess } from \"./costbook.actions\";\r\nimport { CostBookActionTypes } from \"./costbook.types\";\r\n\r\nexport function* fetchCostBook({payload}){\r\n  try {\r\n    let costBook = yield fetch(`http://127.0.0.1:5000/costbook`)\r\n    costBook = yield costBook.json()\r\n\r\n    costBook.done\r\n    ? yield put(fetchCostBookSuccess(costBook.costbook))\r\n    : yield put(fetchCostBookFailure('Error.'))\r\n  } catch (error) {\r\n    fetchCostBookFailure(error)\r\n  }\r\n}\r\n\r\nexport function* createCostBookCategory({payload}){\r\n    let data = payload\r\n    try {\r\n        let costbookcategory = yield fetch(`http://127.0.0.1:5000/createCostBookCategory`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n          })\r\n        costbookcategory = yield costbookcategory.json()\r\n        if(costbookcategory.done){\r\n            yield put(createCostBookCategorySucessful(costbookcategory.message))\r\n        }else{\r\n            yield put(createCostBookCategoryFail('error'))\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* createCostBookCostCodeStart({payload}){\r\n    let data = payload\r\n    try {\r\n        let resp = yield fetch(`http://127.0.0.1:5000/createCostBookCategory/createCostCode`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(data),\r\n            }\r\n         )\r\n         resp = yield resp.json()\r\n         if(resp.done){\r\n             yield put(createCostCodeSuccess(resp.message))\r\n         }else{\r\n             yield put(createCostCodeFailute('error'))\r\n         }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* createCostBookCostCodeItemStart({payload}){\r\n    let data = payload\r\n    try {\r\n        let resp = yield fetch(`http://127.0.0.1:5000/createCostBookCategory/createCostCodeItem`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(data),\r\n            }\r\n         )\r\n         resp = yield resp.json()\r\n         if(resp.done){\r\n             yield put(createCostCodeItemSuccess(resp.message))\r\n         }else{\r\n             yield put(createCostCodeItemFailure('error'))\r\n         }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// export function* onTaskCreateStart(){\r\n//   yield takeLatest(CostBookActionTypes.CREATE_TASK_START, createTask)\r\n// }\r\n\r\nexport function* onCostBookFetchStart(){\r\n  yield takeLatest(CostBookActionTypes.FETCH_COST_BOOK_START, fetchCostBook)\r\n}\r\n\r\nexport function* onCreateCostCodeStart(){\r\n    yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_COSTCODE_START, createCostBookCostCodeStart)\r\n}\r\n\r\nexport function* onCreateCostCodeItemStart(){\r\n    yield takeLatest(CostBookActionTypes.CREATE_COST_BOOK_COSTCODEITEM_START, createCostBookCostCodeItemStart)\r\n}\r\n\r\nexport function* costBookSagas() {\r\n  yield all([\r\n    call(onCostBookFetchStart),\r\n    call(onCreateCostCodeItemStart),\r\n    call(onCreateCostCodeStart)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}