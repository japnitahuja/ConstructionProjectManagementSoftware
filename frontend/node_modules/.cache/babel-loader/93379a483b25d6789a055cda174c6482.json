{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\project-choose-template\\\\project-choose-template.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { createProjectStart, createProjectTemplateStart, fetchProjectsStart } from \"../../redux/all-projects/all-projects.actions\";\nimport { signOut } from \"../../redux/user/user.actions\";\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\nimport { Heading, Description } from \"./project-choose-template.styles\";\nimport { selectCurrentOrganisationId } from \"../../redux/organisation/organisation.selectors\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectChooseTemplate extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: [\"Create a New Project\", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/all-projects/${this.props.orgId}`,\n          style: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              textDecoration: \"none\",\n              background: \"none\",\n              border: \"none\",\n              fontSize: \"1.4em\"\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Description, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Streamline work- flows and automate processes with ready made project templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Create Your Own\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  name: selectCurrentUserFirstName,\n  orgId: selectCurrentOrganisationId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => dispatch(signOut()),\n  createProject: projectDetails => dispatch(createProjectStart(projectDetails)),\n  createProjectTemplate: projectDetails => dispatch(createProjectTemplateStart(projectDetails)),\n  fetchProjects: () => dispatch(fetchProjectsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectChooseTemplate);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/project-choose-template/project-choose-template.component.jsx"],"names":["React","Component","connect","createStructuredSelector","createProjectStart","createProjectTemplateStart","fetchProjectsStart","signOut","selectCurrentUserFirstName","Heading","Description","selectCurrentOrganisationId","Link","ProjectChooseTemplate","constructor","props","render","padding","orgId","textDecoration","background","border","fontSize","mapStateToProps","name","mapDispatchToProps","dispatch","createProject","projectDetails","createProjectTemplate","fetchProjects"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,kBADF,EAEEC,0BAFF,EAGEC,kBAHF,QAIO,+CAJP;AAKA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,kCAArC;AACA,SAASC,2BAAT,QAA4C,iDAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,qBAAN,SAAoCZ,SAApC,CAA8C;AAC5Ca,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,8BACE,QAAC,OAAD;AAAA,wDAEE,QAAC,IAAD;AACE,UAAA,EAAE,EAAG,iBAAgB,KAAKF,KAAL,CAAWG,KAAM,EADxC;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,cAAc,EAAE;AAAlB,WAFT;AAAA,iCAIE;AACE,YAAA,KAAK,EAAE;AACLA,cAAAA,cAAc,EAAE,MADX;AAELC,cAAAA,UAAU,EAAE,MAFP;AAGLC,cAAAA,MAAM,EAAE,MAHH;AAILC,cAAAA,QAAQ,EAAE;AAJL,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAoBE,QAAC,WAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AArC2C;;AAwC9C,MAAMC,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CqB,EAAAA,IAAI,EAAEhB,0BADyC;AAE/CU,EAAAA,KAAK,EAAEP;AAFwC,CAAD,CAAhD;;AAKA,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,OAAO,EAAE,MAAMmB,QAAQ,CAACnB,OAAO,EAAR,CADiB;AAExCoB,EAAAA,aAAa,EAAGC,cAAD,IACbF,QAAQ,CAACtB,kBAAkB,CAACwB,cAAD,CAAnB,CAH8B;AAIxCC,EAAAA,qBAAqB,EAAGD,cAAD,IACrBF,QAAQ,CAACrB,0BAA0B,CAACuB,cAAD,CAA3B,CAL8B;AAMxCE,EAAAA,aAAa,EAAE,MAAMJ,QAAQ,CAACpB,kBAAkB,EAAnB;AANW,CAAf,CAA3B;;AASA,eAAeJ,OAAO,CACpBqB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbZ,qBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createProjectStart,\r\n  createProjectTemplateStart,\r\n  fetchProjectsStart,\r\n} from \"../../redux/all-projects/all-projects.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\r\nimport { Heading, Description } from \"./project-choose-template.styles\";\r\nimport { selectCurrentOrganisationId } from \"../../redux/organisation/organisation.selectors\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ProjectChooseTemplate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: \"1em\" }}>\r\n        <Heading>\r\n          Create a New Project\r\n          <Link\r\n            to={`/all-projects/${this.props.orgId}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <button\r\n              style={{\r\n                textDecoration: \"none\",\r\n                background: \"none\",\r\n                border: \"none\",\r\n                fontSize: \"1.4em\",\r\n              }}\r\n            >\r\n              &times;\r\n            </button>\r\n          </Link>\r\n        </Heading>\r\n\r\n        <Description>\r\n          <div>\r\n            Streamline work- flows and automate processes with ready made\r\n            project templates\r\n          </div>\r\n          <div>OR</div>\r\n          <div>Create Your Own</div>\r\n        </Description>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  name: selectCurrentUserFirstName,\r\n  orgId: selectCurrentOrganisationId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createProject: (projectDetails) =>\r\n    dispatch(createProjectStart(projectDetails)),\r\n  createProjectTemplate: (projectDetails) =>\r\n    dispatch(createProjectTemplateStart(projectDetails)),\r\n  fetchProjects: () => dispatch(fetchProjectsStart()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectChooseTemplate);\r\n"]},"metadata":{},"sourceType":"module"}