{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\cost-book-item\\\\cost-book-item.page.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { createCostCodeItemStart, fetchCostBookStart } from \"../../redux/costbook/costbook.actions\";\nimport { selectCostBookDetails } from \"../../redux/costbook/costbook.selectors\";\nimport { Link } from \"react-router-dom\";\nimport CostCodeDisplayItem from \"../../components/costcode-displayitem/costcode-displayitem.component\";\nimport CostCodeEditItem from \"../../components/costcode-edititem/costcode-edititem.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CostBookItem extends Component {\n  constructor() {\n    super();\n\n    this.toggleEdit = () => {\n      this.setState(prevState => ({\n        showEdit: !prevState.showEdit\n      }));\n    };\n\n    this.items = () => {\n      console.log(this.props.costbook, \"hi\");\n      let category = this.props.costbook.find(book => book._id === this.props.match.params.categoryId); //console.log(category)\n\n      let costCodeItem = category.costCodes.find(id => id._id === this.props.match.params.costCodeId);\n      let item = costCodeItem.items.find(id => id._id === this.props.match.params.itemId);\n      console.log(item);\n      this.setState({\n        items: item\n      }, () => console.log(this.state));\n    };\n\n    this.itemOnChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let itemInfo = this.state.items;\n      itemInfo[name] = value;\n      this.setState({\n        items: itemInfo\n      }, () => {\n        console.log(this.state.items);\n      });\n    };\n\n    this.editItem = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      item: {},\n      showEdit: false\n    };\n  } //   componentDidMount() {\n  //     this.props.fetchCostBook();\n  //     console.log(\"component mounted\", this.props.costbook);\n  //     this.items();\n  //   }\n\n\n  render() {\n    const {\n      items\n    } = this.state;\n    console.log(items);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.showEdit ? /*#__PURE__*/_jsxDEV(CostCodeEditItem, {\n        toggleEdit: this.toggleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CostCodeDisplayItem, {\n        toggleEdit: this.toggleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  costbook: selectCostBookDetails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCostBook: () => dispatch(fetchCostBookStart()),\n  createItem: itemDetails => dispatch(createCostCodeItemStart(itemDetails))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CostBookItem);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/cost-book-item/cost-book-item.page.js"],"names":["React","Component","connect","createStructuredSelector","createCostCodeItemStart","fetchCostBookStart","selectCostBookDetails","Link","CostCodeDisplayItem","CostCodeEditItem","CostBookItem","constructor","toggleEdit","setState","prevState","showEdit","items","console","log","props","costbook","category","find","book","_id","match","params","categoryId","costCodeItem","costCodes","id","costCodeId","item","itemId","state","itemOnChange","e","preventDefault","name","value","target","itemInfo","editItem","render","mapStateToProps","mapDispatchToProps","dispatch","fetchCostBook","createItem","itemDetails"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  createCostCodeItemStart,\r\n  fetchCostBookStart,\r\n} from \"../../redux/costbook/costbook.actions\";\r\nimport { selectCostBookDetails } from \"../../redux/costbook/costbook.selectors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CostCodeDisplayItem from \"../../components/costcode-displayitem/costcode-displayitem.component\";\r\nimport CostCodeEditItem from \"../../components/costcode-edititem/costcode-edititem.component\";\r\n\r\nclass CostBookItem extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      item: {},\r\n      showEdit: false,\r\n    };\r\n  }\r\n  //   componentDidMount() {\r\n  //     this.props.fetchCostBook();\r\n  //     console.log(\"component mounted\", this.props.costbook);\r\n  //     this.items();\r\n  //   }\r\n\r\n  toggleEdit = () => {\r\n    this.setState((prevState) => ({\r\n      showEdit: !prevState.showEdit,\r\n    }));\r\n  };\r\n\r\n  items = () => {\r\n    console.log(this.props.costbook, \"hi\");\r\n    let category = this.props.costbook.find(\r\n      (book) => book._id === this.props.match.params.categoryId\r\n    );\r\n    //console.log(category)\r\n    let costCodeItem = category.costCodes.find(\r\n      (id) => id._id === this.props.match.params.costCodeId\r\n    );\r\n    let item = costCodeItem.items.find(\r\n      (id) => id._id === this.props.match.params.itemId\r\n    );\r\n    console.log(item);\r\n    this.setState({ items: item }, () => console.log(this.state));\r\n  };\r\n\r\n  itemOnChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let itemInfo = this.state.items;\r\n    itemInfo[name] = value;\r\n    this.setState({ items: itemInfo }, () => {\r\n      console.log(this.state.items);\r\n    });\r\n  };\r\n\r\n  editItem = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { items } = this.state;\r\n    console.log(items);\r\n    return (\r\n      <>\r\n        {this.state.showEdit ? (\r\n          <CostCodeEditItem toggleEdit={this.toggleEdit} />\r\n        ) : (\r\n          <CostCodeDisplayItem toggleEdit={this.toggleEdit} />\r\n        )}\r\n        {/* <div>\r\n          <h2>ITEM NAME</h2> <h4>{items.itemName}</h4>\r\n          <h2>PART#</h2> <h4>{items.partNo}</h4>\r\n          <h2>COST/RATE</h2>\r\n          <h4>{items.cost}</h4>\r\n          <h2>ITEM LINK</h2>\r\n          <h4>{items.link}</h4>\r\n          <h2>DESCRIPTION</h2>\r\n          <h4>{items.description}</h4>\r\n        </div>\r\n        <form onChange={this.itemOnChange}>\r\n          <h3>EDIT ITEM</h3>\r\n          <label htmlFor=\"itemName\" id=\"itemName\" name=\"itemName\">\r\n            Item Name\r\n          </label>\r\n          <input type=\"text\" id=\"itemName\" name=\"itemName\" />\r\n          <br />\r\n          <label htmlFor=\"partNo\" id=\"partNo\" name=\"partNo\">\r\n            Part No.{\" \"}\r\n          </label>\r\n          <input type=\"number\" id=\"partNo\" name=\"partNo\" />\r\n          <br />\r\n          <label htmlFor=\"cost\" id=\"cost\" name=\"cost\">\r\n            Cost\r\n          </label>\r\n          <input type=\"number\" id=\"cost\" name=\"cost\" />\r\n          <br />\r\n          <label htmlFor=\"itemLink\" id=\"itemLink\" name=\"itemLink\">\r\n            Item Link\r\n          </label>\r\n          <input type=\"text\" id=\"itemLink\" name=\"itemLink\" />\r\n          <br />\r\n          <label htmlFor=\"description\" id=\"description\" name=\"description\">\r\n            Description\r\n          </label>\r\n          <input type=\"text\" id=\"description\" name=\"description\" />\r\n        </form> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  costbook: selectCostBookDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCostBook: () => dispatch(fetchCostBookStart()),\r\n  createItem: (itemDetails) => dispatch(createCostCodeItemStart(itemDetails)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CostBookItem);\r\n"]},"metadata":{},"sourceType":"module"}