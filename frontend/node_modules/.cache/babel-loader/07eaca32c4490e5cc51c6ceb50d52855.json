{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\components\\\\create-task-form\\\\create-task-form.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createTaskStart } from \"../../redux/all-tasks/all-tasks.actions\";\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\nimport { signOut } from \"../../redux/user/user.actions\";\nimport { Container, InfoInput, InfoTitle, InfoDiv, LongInput, LowerNavDiv, OneHalfDiv, NavBar, OneThirdDiv, Overlay } from \"./create-task-form.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateTaskForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      let task = this.state.taskDetails;\n      task[name] = value;\n      this.setState({\n        taskDetails: task\n      });\n    };\n\n    this.createTask = async e => {\n      e.preventDefault();\n      let taskDetails = this.state.taskDetails;\n      await this.props.createTask(taskDetails);\n    };\n\n    this.handleOnClick = e => {\n      let {\n        key\n      } = e.target.dataset;\n      this.setState({\n        active: key\n      });\n    };\n\n    this.state = {\n      taskDetails: {\n        taskName: \"\",\n        taskStartDate: \"\",\n        taskEndDate: \"\",\n        projectId: this.props.projectId.toString()\n      },\n      active: \"Info\"\n    };\n  }\n\n  render() {\n    let {\n      active\n    } = this.state;\n    let {\n      projectId\n    } = this.state.taskDetails;\n    return /*#__PURE__*/_jsxDEV(Overlay, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        children: [/*#__PURE__*/_jsxDEV(OneThirdDiv, {\n          align: \"flex-start\",\n          color: \"#205284\",\n          onClick: this.exit,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/project/${projectId}`,\n            style: {\n              textDecoration: 'none',\n              color: \"#205284\"\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OneThirdDiv, {\n          align: \"center\",\n          style: {\n            fontWeight: \"600\"\n          },\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OneThirdDiv, {\n          align: \"flex-end\",\n          color: \"#205284\",\n          onClick: this.createTask,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LowerNavDiv, {\n        children: [/*#__PURE__*/_jsxDEV(OneHalfDiv, {\n          \"data-key\": \"Info\",\n          onClick: this.handleOnClick,\n          active: active === 'Info',\n          children: \"INFO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(OneHalfDiv, {\n          \"data-key\": \"Steps\",\n          onClick: this.handleOnClick,\n          active: active === 'Steps',\n          children: \"STEPS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), this.state.active === 'Info' ? /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        onChange: e => this.handleOnChange(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(LongInput, {\n            type: \"text\",\n            value: this.state.taskDetails.taskName,\n            name: \"taskName\",\n            id: \"taskName\",\n            placeholder: \"Task Title\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(InfoDiv, {\n            children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(InfoInput, {\n              type: \"date\",\n              value: this.state.taskDetails.taskStartDate,\n              name: \"taskStartDate\",\n              id: \"taskStartDate\",\n              onChange: e => this.handleOnChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InfoDiv, {\n            children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(InfoInput, {\n              type: \"date\",\n              value: this.state.taskDetails.taskEndDate,\n              name: \"taskEndDate\",\n              id: \"taskEndDate\",\n              onChange: e => this.handleOnChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => dispatch(signOut()),\n  createTask: taskDetails => dispatch(createTaskStart(taskDetails)),\n  fetchProject: projectId => dispatch(fetchCurrentProjectStart(projectId))\n});\n\nexport default connect(null, mapDispatchToProps)(CreateTaskForm);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/components/create-task-form/create-task-form.component.jsx"],"names":["React","Component","connect","Link","createTaskStart","fetchCurrentProjectStart","signOut","Container","InfoInput","InfoTitle","InfoDiv","LongInput","LowerNavDiv","OneHalfDiv","NavBar","OneThirdDiv","Overlay","CreateTaskForm","constructor","props","handleOnChange","e","name","value","target","task","state","taskDetails","setState","createTask","preventDefault","handleOnClick","key","dataset","active","taskName","taskStartDate","taskEndDate","projectId","toString","render","exit","textDecoration","color","fontWeight","display","flexDirection","mapDispatchToProps","dispatch","fetchProject"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createTaskStart} from \"../../redux/all-tasks/all-tasks.actions\";\r\nimport { fetchCurrentProjectStart } from \"../../redux/current-project/current-project.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport {Container, InfoInput, InfoTitle, InfoDiv, LongInput, LowerNavDiv, OneHalfDiv, NavBar, OneThirdDiv, Overlay} from \"./create-task-form.styles\"\r\n\r\n\r\nclass CreateTaskForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskDetails: {\r\n        taskName: \"\",\r\n        taskStartDate: \"\",\r\n        taskEndDate: \"\",\r\n        projectId: this.props.projectId.toString(),\r\n      },\r\n      active: \"Info\",\r\n    };\r\n  }\r\n\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let task = this.state.taskDetails;\r\n    task[name] = value;\r\n\r\n    this.setState({ taskDetails: task });\r\n  };\r\n\r\n  createTask = async (e) => {\r\n    e.preventDefault();\r\n    let taskDetails = this.state.taskDetails;\r\n    await this.props.createTask(taskDetails);\r\n  };\r\n\r\n  handleOnClick = (e) => {\r\n    let {key} = e.target.dataset\r\n\r\n    this.setState({\r\n        active: key\r\n    })\r\n}\r\n\r\n\r\n  render() {\r\n    let {active} = this.state\r\n    let {projectId} = this.state.taskDetails\r\n    \r\n\r\n    return (\r\n      <Overlay>\r\n        <NavBar>\r\n          <OneThirdDiv align=\"flex-start\" color=\"#205284\" onClick={this.exit}>\r\n            \r\n            <Link to = {`/project/${projectId}`} style={{textDecoration:'none', color:\"#205284\"}}>\r\n            Cancel\r\n            </Link>\r\n\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"center\" style={{fontWeight: \"600\"}}>\r\n            New Task\r\n          </OneThirdDiv>\r\n          <OneThirdDiv align=\"flex-end\" color=\"#205284\" onClick={this.createTask}>\r\n            Save\r\n          </OneThirdDiv>\r\n        </NavBar>\r\n        <LowerNavDiv>\r\n            <OneHalfDiv  data-key='Info' onClick={this.handleOnClick} active={active === 'Info'}>\r\n                INFO\r\n            </OneHalfDiv>\r\n            <OneHalfDiv data-key='Steps' onClick={this.handleOnClick} active={active === 'Steps'} >\r\n                STEPS\r\n            </OneHalfDiv>\r\n            \r\n        </LowerNavDiv>\r\n        \r\n        {\r\n          this.state.active==='Info'?\r\n        \r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n        >\r\n          <div>\r\n            <LongInput\r\n              type=\"text\"\r\n              value={this.state.taskDetails.taskName}\r\n              name=\"taskName\"\r\n              id=\"taskName\"\r\n              placeholder=\"Task Title\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required/>\r\n          </div>\r\n\r\n          <Container>\r\n\r\n                <InfoDiv>\r\n                    <InfoTitle>\r\n                        Start Date\r\n                    </InfoTitle>\r\n                    <InfoInput\r\n                    type=\"date\"\r\n                    value={this.state.taskDetails.taskStartDate}\r\n                    name=\"taskStartDate\"\r\n                    id=\"taskStartDate\"\r\n                    onChange={(e) => this.handleOnChange(e)}\r\n                    required/>\r\n \r\n                </InfoDiv>\r\n\r\n                <InfoDiv>\r\n                    <InfoTitle>\r\n                        End Date\r\n                    </InfoTitle>\r\n                    <InfoInput\r\n                    type=\"date\"\r\n                    value={this.state.taskDetails.taskEndDate}\r\n                    name=\"taskEndDate\"\r\n                    id=\"taskEndDate\"\r\n                    onChange={(e) => this.handleOnChange(e)}\r\n                    required/>\r\n \r\n                </InfoDiv>\r\n\r\n         \r\n            </Container>\r\n\r\n        </form>:\r\n\r\n        <div></div>\r\n\r\n        }   \r\n\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createTask: (taskDetails) => dispatch(createTaskStart(taskDetails)),\r\n  fetchProject: (projectId) => dispatch(fetchCurrentProjectStart(projectId))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateTaskForm);\r\n"]},"metadata":{},"sourceType":"module"}