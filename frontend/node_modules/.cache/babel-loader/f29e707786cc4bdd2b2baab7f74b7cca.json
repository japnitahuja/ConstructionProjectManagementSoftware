{"ast":null,"code":"import { TaskActionTypes } from \"./all-tasks.types\";\nconst INITIAL_STATE = {\n  createTaskStart: false,\n  createTaskSuccessful: false,\n  createTaskFail: false,\n  fetchTaskStart: false,\n  fetchTaskSuccess: false,\n  fetchTaskFailure: false,\n  errorMessage: undefined,\n  message: null,\n  tasks: null\n};\n\nconst taskReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TaskActionTypes.CLEAR_TASKS_DATA:\n      return {\n        createTaskStart: false,\n        createTaskSuccessful: false,\n        createTaskFail: false,\n        fetchTaskStart: false,\n        fetchTaskSuccess: false,\n        fetchTaskFailure: false,\n        errorMessage: undefined,\n        message: null,\n        tasks: null\n      };\n\n    case TaskActionTypes.CREATE_TASK_START:\n      return { ...state,\n        createTaskStart: true,\n        createTaskFail: false,\n        createTaskSuccessful: false,\n        errorMessage: null\n      };\n\n    case TaskActionTypes.CREATE_TASK_SUCCESS:\n      return { ...state,\n        createTaskStart: false,\n        createTaskSuccessful: true,\n        message: \"TASK CREATED SUCCESSFULLY!\"\n      };\n\n    case TaskActionTypes.CREATE_TASK_FAILURE:\n      return { ...state,\n        createTaskStart: false,\n        createTaskFail: true,\n        createTaskSuccessful: false,\n        errorMessage: action.payload\n      };\n\n    case TaskActionTypes.FETCH_TASKS_START:\n      return { ...state,\n        fetchTaskStart: true,\n        fetchTaskFailure: false,\n        fetchTaskSuccess: false\n      };\n\n    case TaskActionTypes.FETCH_TASKS_SUCCESS:\n      return { ...state,\n        fetchTaskStart: false,\n        fetchTaskSuccess: true,\n        tasks: action.payload\n      };\n\n    case TaskActionTypes.FETCH_TASKS_START:\n      return { ...state,\n        fetchTaskStart: false,\n        fetchTaskFailure: true,\n        errorMessage: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/all-tasks/all-tasks.reducer.js"],"names":["TaskActionTypes","INITIAL_STATE","createTaskStart","createTaskSuccessful","createTaskFail","fetchTaskStart","fetchTaskSuccess","fetchTaskFailure","errorMessage","undefined","message","tasks","taskReducer","state","action","type","CLEAR_TASKS_DATA","CREATE_TASK_START","CREATE_TASK_SUCCESS","CREATE_TASK_FAILURE","payload","FETCH_TASKS_START","FETCH_TASKS_SUCCESS"],"mappings":"AAAA,SAASA,eAAT,QAAgC,mBAAhC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,eAAe,EAAE,KADG;AAEpBC,EAAAA,oBAAoB,EAAE,KAFF;AAGpBC,EAAAA,cAAc,EAAE,KAHI;AAIpBC,EAAAA,cAAc,EAAE,KAJI;AAKpBC,EAAAA,gBAAgB,EAAE,KALE;AAMpBC,EAAAA,gBAAgB,EAAE,KANE;AAOpBC,EAAAA,YAAY,EAAEC,SAPM;AAQpBC,EAAAA,OAAO,EAAE,IARW;AASpBC,EAAAA,KAAK,EAAE;AATa,CAAtB;;AAYA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGZ,aAAT,EAAwBa,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,eAAe,CAACgB,gBAArB;AACE,aAAO;AACLd,QAAAA,eAAe,EAAE,KADZ;AAELC,QAAAA,oBAAoB,EAAE,KAFjB;AAGLC,QAAAA,cAAc,EAAE,KAHX;AAILC,QAAAA,cAAc,EAAE,KAJX;AAKLC,QAAAA,gBAAgB,EAAE,KALb;AAMLC,QAAAA,gBAAgB,EAAE,KANb;AAOLC,QAAAA,YAAY,EAAEC,SAPT;AAQLC,QAAAA,OAAO,EAAE,IARJ;AASLC,QAAAA,KAAK,EAAE;AATF,OAAP;;AAWF,SAAKX,eAAe,CAACiB,iBAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAELX,QAAAA,eAAe,EAAE,IAFZ;AAGLE,QAAAA,cAAc,EAAE,KAHX;AAILD,QAAAA,oBAAoB,EAAE,KAJjB;AAKLK,QAAAA,YAAY,EAAE;AALT,OAAP;;AAOF,SAAKR,eAAe,CAACkB,mBAArB;AACE,aAAO,EACL,GAAGL,KADE;AAELX,QAAAA,eAAe,EAAE,KAFZ;AAGLC,QAAAA,oBAAoB,EAAE,IAHjB;AAILO,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF,SAAKV,eAAe,CAACmB,mBAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELX,QAAAA,eAAe,EAAE,KAFZ;AAGLE,QAAAA,cAAc,EAAE,IAHX;AAILD,QAAAA,oBAAoB,EAAE,KAJjB;AAKLK,QAAAA,YAAY,EAAEM,MAAM,CAACM;AALhB,OAAP;;AAOF,SAAKpB,eAAe,CAACqB,iBAArB;AACE,aAAO,EACL,GAAGR,KADE;AAELR,QAAAA,cAAc,EAAE,IAFX;AAGLE,QAAAA,gBAAgB,EAAE,KAHb;AAILD,QAAAA,gBAAgB,EAAE;AAJb,OAAP;;AAMF,SAAKN,eAAe,CAACsB,mBAArB;AACE,aAAO,EACL,GAAGT,KADE;AAELR,QAAAA,cAAc,EAAE,KAFX;AAGLC,QAAAA,gBAAgB,EAAE,IAHb;AAILK,QAAAA,KAAK,EAAEG,MAAM,CAACM;AAJT,OAAP;;AAMF,SAAKpB,eAAe,CAACqB,iBAArB;AACE,aAAO,EACL,GAAGR,KADE;AAELR,QAAAA,cAAc,EAAE,KAFX;AAGLE,QAAAA,gBAAgB,EAAE,IAHb;AAILC,QAAAA,YAAY,EAAEM,MAAM,CAACM;AAJhB,OAAP;;AAMF;AACE,aAAOP,KAAP;AA3DJ;AA6DD,CA9DD;;AAgEA,eAAeD,WAAf","sourcesContent":["import { TaskActionTypes } from \"./all-tasks.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  createTaskStart: false,\r\n  createTaskSuccessful: false,\r\n  createTaskFail: false,\r\n  fetchTaskStart: false,\r\n  fetchTaskSuccess: false,\r\n  fetchTaskFailure: false,\r\n  errorMessage: undefined,\r\n  message: null,\r\n  tasks: null,\r\n};\r\n\r\nconst taskReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case TaskActionTypes.CLEAR_TASKS_DATA:\r\n      return {\r\n        createTaskStart: false,\r\n        createTaskSuccessful: false,\r\n        createTaskFail: false,\r\n        fetchTaskStart: false,\r\n        fetchTaskSuccess: false,\r\n        fetchTaskFailure: false,\r\n        errorMessage: undefined,\r\n        message: null,\r\n        tasks: null,\r\n      };\r\n    case TaskActionTypes.CREATE_TASK_START:\r\n      return {\r\n        ...state,\r\n        createTaskStart: true,\r\n        createTaskFail: false,\r\n        createTaskSuccessful: false,\r\n        errorMessage: null,\r\n      };\r\n    case TaskActionTypes.CREATE_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createTaskStart: false,\r\n        createTaskSuccessful: true,\r\n        message: \"TASK CREATED SUCCESSFULLY!\",\r\n      };\r\n\r\n    case TaskActionTypes.CREATE_TASK_FAILURE:\r\n      return {\r\n        ...state,\r\n        createTaskStart: false,\r\n        createTaskFail: true,\r\n        createTaskSuccessful: false,\r\n        errorMessage: action.payload,\r\n      };\r\n    case TaskActionTypes.FETCH_TASKS_START:\r\n      return {\r\n        ...state,\r\n        fetchTaskStart: true,\r\n        fetchTaskFailure: false,\r\n        fetchTaskSuccess: false,\r\n      };\r\n    case TaskActionTypes.FETCH_TASKS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetchTaskStart: false,\r\n        fetchTaskSuccess: true,\r\n        tasks: action.payload,\r\n      };\r\n    case TaskActionTypes.FETCH_TASKS_START:\r\n      return {\r\n        ...state,\r\n        fetchTaskStart: false,\r\n        fetchTaskFailure: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\n"]},"metadata":{},"sourceType":"module"}