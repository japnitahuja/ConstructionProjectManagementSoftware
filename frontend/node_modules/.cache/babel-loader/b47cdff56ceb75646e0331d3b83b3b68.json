{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GitHub\\\\myles-website\\\\frontend\\\\src\\\\pages\\\\all-projects\\\\all-projects.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport ProjectList from \"../../components/projects-list/projects-list.component\";\nimport { createProjectStart, fetchProjectsStart } from \"../../redux/all-projects/all-projects.actions\";\nimport { selectAreProjectsFetching, selectUserProjects } from \"../../redux/all-projects/all-projects.selectors\";\nimport { signOut } from \"../../redux/user/user.actions\";\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\nimport CreateProjectForm from \"../../components/create-project-form/create-project-form.component\";\nimport ProjectsNav from \"../../components/projects-nav/projects-nav.component\";\nimport ProjectListContainer from \"../../components/projects-list/projects-list.container\";\nimport { GenericButton } from \"../../components/generic-button/generic-button.styles\";\nimport AddUserForm from \"../../components/adduser-form/adduser-form.component\";\nimport SearchBar from \"../../components/search-bar/search-bar.component\";\nimport NoResult from \"../../components/no-result/no-result.component\";\nimport { Overlay } from \"../../components/admin-panel-task-page/admin-panel-task-page.styles\";\nimport ProjectsFilter from \"../../components/projects-filter/projects-filter.component\";\nimport { selectIsProjectFetching } from \"../../redux/current-project/current-project.selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllProjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.search = searchedText => {\n      let temp = this.props.projects;\n\n      if (searchedText) {\n        temp = temp.filter(({\n          projectName\n        }) => {\n          return projectName.toLowerCase().includes(searchedText.toLowerCase());\n        });\n      }\n\n      this.setState({\n        projectsList: temp\n      });\n    };\n\n    this.filter = filters => {\n      console.log(\"filters\", filters);\n      let temp = this.props.projects;\n\n      for (let filter in filters) {\n        if (filters[filter] != \"\") {\n          temp = temp.filter(project => {\n            console.log(project[filter], filter, filters, filters[filter]);\n            return project[filter] == filters[filter];\n          });\n        }\n      }\n\n      this.setState({\n        projectsList: temp,\n        filters: filters\n      });\n    };\n\n    this.toggleSearchBar = () => {\n      this.setState(prevState => ({\n        showSearch: !prevState.showSearch\n      }));\n    };\n\n    this.toggleFilter = () => {\n      this.setState(prevState => ({\n        showFilter: !prevState.showFilter\n      }));\n    };\n\n    this.state = {\n      projectsList: [],\n      //will change based on search\n      showSearch: false,\n      showFilter: false,\n      filters: {}\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      fetchProjects\n    } = this.props;\n    fetchProjects();\n    this.setState({\n      projectsList: this.props.projects\n    }, console.log(this.state));\n  }\n\n  render() {\n    let {\n      projectsList\n    } = this.state;\n    let {\n      areProjectsFetching\n    } = this.props;\n\n    if (areProjectsFetching) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ProjectsNav, {\n        title: \"Projects\",\n        toggleSearchBar: this.toggleSearchBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), console.log(projectsList), projectsList.length === 0 ? /*#__PURE__*/_jsxDEV(NoResult, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ProjectListContainer, {\n        projects: projectsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), this.state.showFilter ? /*#__PURE__*/_jsxDEV(Overlay, {\n        backgroundcolor: \"rgba(0,0,0,0.3)\",\n        style: {\n          bottom: \"0\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ProjectsFilter, {\n          exit: this.toggleFilter,\n          onSubmit: this.filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  name: selectCurrentUserFirstName,\n  projects: selectUserProjects,\n  areProjectsFetching: selectAreProjectsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => dispatch(signOut()),\n  createProject: projectDetails => dispatch(createProjectStart(projectDetails)),\n  fetchProjects: () => dispatch(fetchProjectsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllProjects);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/pages/all-projects/all-projects.js"],"names":["React","Component","connect","createStructuredSelector","ProjectList","createProjectStart","fetchProjectsStart","selectAreProjectsFetching","selectUserProjects","signOut","selectCurrentUserFirstName","CreateProjectForm","ProjectsNav","ProjectListContainer","GenericButton","AddUserForm","SearchBar","NoResult","Overlay","ProjectsFilter","selectIsProjectFetching","AllProjects","constructor","props","search","searchedText","temp","projects","filter","projectName","toLowerCase","includes","setState","projectsList","filters","console","log","project","toggleSearchBar","prevState","showSearch","toggleFilter","showFilter","state","componentDidMount","fetchProjects","render","areProjectsFetching","length","bottom","height","display","flexDirection","justifyContent","alignItems","mapStateToProps","name","mapDispatchToProps","dispatch","createProject","projectDetails"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport ProjectList from \"../../components/projects-list/projects-list.component\";\r\nimport {\r\n  createProjectStart,\r\n  fetchProjectsStart,\r\n} from \"../../redux/all-projects/all-projects.actions\";\r\nimport {\r\n  selectAreProjectsFetching,\r\n  selectUserProjects,\r\n} from \"../../redux/all-projects/all-projects.selectors\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\r\nimport CreateProjectForm from \"../../components/create-project-form/create-project-form.component\";\r\nimport ProjectsNav from \"../../components/projects-nav/projects-nav.component\";\r\nimport ProjectListContainer from \"../../components/projects-list/projects-list.container\";\r\nimport { GenericButton } from \"../../components/generic-button/generic-button.styles\";\r\nimport AddUserForm from \"../../components/adduser-form/adduser-form.component\";\r\nimport SearchBar from \"../../components/search-bar/search-bar.component\";\r\nimport NoResult from \"../../components/no-result/no-result.component\";\r\nimport { Overlay } from \"../../components/admin-panel-task-page/admin-panel-task-page.styles\";\r\nimport ProjectsFilter from \"../../components/projects-filter/projects-filter.component\";\r\nimport { selectIsProjectFetching } from \"../../redux/current-project/current-project.selectors\";\r\nclass AllProjects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectsList: [], //will change based on search\r\n      showSearch: false,\r\n      showFilter: false,\r\n      filters: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { fetchProjects } = this.props;\r\n    fetchProjects();\r\n    this.setState(\r\n      { projectsList: this.props.projects },\r\n      console.log(this.state)\r\n    );\r\n  }\r\n\r\n  search = (searchedText) => {\r\n    let temp = this.props.projects;\r\n\r\n    if (searchedText) {\r\n      temp = temp.filter(({ projectName }) => {\r\n        return projectName.toLowerCase().includes(searchedText.toLowerCase());\r\n      });\r\n    }\r\n\r\n    this.setState({ projectsList: temp });\r\n  };\r\n\r\n  filter = (filters) => {\r\n    console.log(\"filters\", filters);\r\n\r\n    let temp = this.props.projects;\r\n\r\n    for (let filter in filters) {\r\n      if (filters[filter] != \"\") {\r\n        temp = temp.filter((project) => {\r\n          console.log(project[filter], filter, filters, filters[filter]);\r\n          return project[filter] == filters[filter];\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({ projectsList: temp, filters: filters });\r\n  };\r\n\r\n  toggleSearchBar = () => {\r\n    this.setState((prevState) => ({\r\n      showSearch: !prevState.showSearch,\r\n    }));\r\n  };\r\n\r\n  toggleFilter = () => {\r\n    this.setState((prevState) => ({\r\n      showFilter: !prevState.showFilter,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { projectsList } = this.state;\r\n    let { areProjectsFetching } = this.props;\r\n\r\n    if (areProjectsFetching) {\r\n      return <div> Loading... </div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <ProjectsNav title=\"Projects\" toggleSearchBar={this.toggleSearchBar} />\r\n        {/* {this.state.showSearch ? (\r\n          <SearchBar\r\n            placeholder=\"Search Projects...\"\r\n            search={this.search}\r\n            toggleFilter={this.toggleFilter}\r\n          />\r\n        ) : null} */}\r\n        {console.log(projectsList)}\r\n        {projectsList.length === 0 ? (\r\n          <NoResult />\r\n        ) : (\r\n          <ProjectListContainer projects={projectsList} />\r\n        )}\r\n\r\n        {this.state.showFilter ? (\r\n          <Overlay\r\n            backgroundcolor=\"rgba(0,0,0,0.3)\"\r\n            style={{\r\n              bottom: \"0\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <ProjectsFilter exit={this.toggleFilter} onSubmit={this.filter} />\r\n          </Overlay>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  name: selectCurrentUserFirstName,\r\n  projects: selectUserProjects,\r\n  areProjectsFetching: selectAreProjectsFetching,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createProject: (projectDetails) =>\r\n    dispatch(createProjectStart(projectDetails)),\r\n  fetchProjects: () => dispatch(fetchProjectsStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllProjects);\r\n"]},"metadata":{},"sourceType":"module"}