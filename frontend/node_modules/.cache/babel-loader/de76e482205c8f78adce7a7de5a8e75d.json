{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistStore\n};","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/GitHub/myles-website/frontend/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","createSagaMiddleware","persistStore","rootSaga","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,MAAMI,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,UAAU,CAACI,IAAX,CAAgBV,MAAhB;AACH;;AAED,MAAMW,KAAK,GAAGb,WAAW,CAACG,WAAD,EAAaF,eAAe,CAAC,GAAGO,UAAJ,CAA5B,CAAzB;AAEAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AACA,OAAO,MAAMS,SAAS,GAAGV,YAAY,CAACQ,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQR,EAAAA;AAAR,CAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\r\nimport {logger} from 'redux-logger';\r\nimport rootReducer from './root-reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { persistStore } from 'redux-persist';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middleware.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(...middleware))\r\n\r\nsagaMiddleware.run(rootSaga);\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {store, persistStore};"]},"metadata":{},"sourceType":"module"}