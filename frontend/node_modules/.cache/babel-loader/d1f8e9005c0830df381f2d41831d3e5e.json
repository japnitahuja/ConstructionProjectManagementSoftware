{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\desktop\\\\github\\\\myles-website\\\\frontend\\\\src\\\\components\\\\create-project-form\\\\create-project-form.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { createTaskStart } from \"../../redux/all-tasks/all-tasks.actions\";\nimport { signOut } from \"../../redux/user/user.actions\";\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateTaskForm extends Component {\n  constructor() {\n    super();\n\n    this.signOut = () => {\n      const {\n        history,\n        signOut\n      } = this.props;\n      signOut();\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      history.push(\"/login\");\n    };\n\n    this.handleOnChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      let task = this.state.taskDetails;\n      task[name] = value;\n      this.setState({\n        taskDetails: task\n      });\n    };\n\n    this.createTask = e => {\n      e.preventDefault();\n      let taskDetails = this.state.taskDetails;\n      this.props.createTask(taskDetails);\n    };\n\n    this.state = {\n      taskDetails: {\n        taskName: \"\",\n        taskStartDate: \"\",\n        taskEndDate: \"\"\n      }\n    };\n  }\n\n  render() {\n    const {\n      name,\n      tasks\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"hi \", name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        onChange: e => this.handleOnChange(e),\n        onSubmit: this.createTask,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskName\",\n            children: \" Task Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.taskDetails.taskName,\n            name: \"taskName\",\n            id: \"taskName\",\n            onChange: e => this.handleOnChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskStatus\",\n            children: \" Task Status: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: this.state.taskDetails.taskStatus,\n            name: \"taskStatus\",\n            id: \"taskStatus\",\n            onChange: e => this.handleOnChange(e),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please choose an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ACTIVE\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PLANNED\",\n              children: \"Planned\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"COMPLETED\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.signOut,\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  name: selectCurrentUserFirstName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => dispatch(signOut()),\n  createTask: taskDetails => dispatch(createTaskStart(taskDetails))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTaskForm);","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/components/create-project-form/create-project-form.component.jsx"],"names":["React","Component","connect","createStructuredSelector","createTaskStart","signOut","selectCurrentUserFirstName","CreateTaskForm","constructor","history","props","localStorage","removeItem","push","handleOnChange","e","name","value","target","task","state","taskDetails","setState","createTask","preventDefault","taskName","taskStartDate","taskEndDate","render","tasks","display","flexDirection","taskStatus","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { createTaskStart} from \"../../redux/all-tasks/all-tasks.actions\";\r\nimport { signOut } from \"../../redux/user/user.actions\";\r\nimport { selectCurrentUserFirstName } from \"../../redux/user/user.selectors\";\r\n\r\nclass CreateTaskForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      taskDetails: {\r\n        taskName: \"\",\r\n        taskStartDate: \"\",\r\n        taskEndDate: \"\"\r\n      },\r\n    };\r\n  }\r\n\r\n  signOut = () => {\r\n    const { history, signOut } = this.props;\r\n    signOut();\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let task = this.state.taskDetails;\r\n    task[name] = value;\r\n\r\n    this.setState({ taskDetails: task });\r\n  };\r\n\r\n  createTask = (e) => {\r\n    e.preventDefault();\r\n    let taskDetails = this.state.taskDetails;\r\n    this.props.createTask(taskDetails);\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    const { name, tasks } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <h1>hi {name}!</h1>\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onChange={(e) => this.handleOnChange(e)}\r\n          onSubmit={this.createTask}\r\n        >\r\n          <div>\r\n            <label htmlFor=\"taskName\"> Task Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.taskDetails.taskName}\r\n              name=\"taskName\"\r\n              id=\"taskName\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"taskStatus\"> Task Status: </label>\r\n            <select\r\n              value={this.state.taskDetails.taskStatus}\r\n              name=\"taskStatus\"\r\n              id=\"taskStatus\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              required\r\n            >\r\n              <option value=\"\">Please choose an option</option>\r\n              <option value=\"ACTIVE\">Active</option>\r\n              <option value=\"PLANNED\">Planned</option>\r\n              <option value=\"COMPLETED\">Completed</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <input type=\"submit\" value=\"Create Task\" />\r\n   \r\n          </div>\r\n        </form>\r\n\r\n        <button onClick={this.signOut}>Sign out</button>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  name: selectCurrentUserFirstName\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n  createTask: (taskDetails) => dispatch(createTaskStart(taskDetails))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTaskForm);\r\n"]},"metadata":{},"sourceType":"module"}