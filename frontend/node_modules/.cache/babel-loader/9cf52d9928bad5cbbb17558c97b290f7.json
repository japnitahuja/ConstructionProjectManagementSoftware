{"ast":null,"code":"import { all, call, put, takeLatest, select, delay } from \"redux-saga/effects\";\nimport { selectCurrentProjectId } from \"../current-project/current-project.selectors\";\nimport { fetchCurrentTaskStart } from \"../current-task/current-task.actions\";\nimport { fetchCurrentTask } from \"../current-task/current-task.sagas\";\nimport { selectUserId } from \"../user/user.selectors\";\nimport { createCOitemFailure, createCOitemSuccess, createChangeOrderFailure, createChangeOrderSuccess, fetchCurrentChangeOrderFailure, fetchCurrentChangeOrderStart, fetchCurrentChangeOrderSuccess } from './current-change-order.actions';\nimport { selectCurrentCOId } from \"./current-change-order.selectors\";\nimport { CurrentChangeOrderActionTypes } from \"./current-change-order.types\";\nexport function* createChangeOrderStart({\n  payload\n}) {\n  try {\n    let data = payload;\n    const projectId = yield select(selectCurrentProjectId);\n    const userId = yield select(selectUserId);\n    console.log(projectId);\n    const taskId = data.taskId;\n    data['projectId'] = projectId;\n    data['userId'] = userId;\n    console.log(data);\n    let changeOrderCreation = yield fetch(`http://127.0.0.1:5000/create-change-order/${taskId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    changeOrderCreation = yield changeOrderCreation.json();\n    changeOrderCreation.done ? yield put(createChangeOrderSuccess(changeOrderCreation.message)) : yield put(createChangeOrderFailure('ERROR'));\n    yield delay(500);\n    yield put(fetchCurrentTaskStart(taskId));\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* fetchCurrentCOStart({\n  payload\n}) {\n  let COid = payload;\n\n  try {\n    let CO = yield fetch(`http://127.0.0.1:5000/changeOrder/${COid}`);\n    CO = yield CO.json();\n    CO.done ? yield put(fetchCurrentChangeOrderSuccess(CO.CO)) : yield put(fetchCurrentChangeOrderFailure('error'));\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* createCOitem({\n  payload\n}) {\n  let data = payload;\n  let COid = data.coId;\n  console.log(COid, 'saga co id');\n\n  try {\n    let COitem = yield fetch(`http://127.0.0.1:5000/create-change-order-items/${COid}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    COitem = yield COitem.json();\n    COitem.done ? yield put(createCOitemSuccess(COitem.message)) : yield put(createCOitemFailure('ERROR'));\n    yield delay(500);\n    yield put(fetchCurrentChangeOrderStart(COid));\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* onCreateChangeOrderStart() {\n  yield takeLatest(CurrentChangeOrderActionTypes.CREATE_CHANGE_ORDER_START, createChangeOrderStart);\n}\nexport function* onFetchCurrentChangeOrderStart() {\n  yield takeLatest(CurrentChangeOrderActionTypes.FETCH_CURRENT_CHANGE_ORDER_START, fetchCurrentCOStart);\n}\nexport function* onCreateCOitemStart() {\n  yield takeLatest(CurrentChangeOrderActionTypes.CREATE_CURRENT_CO_ITEM_START, createCOitem);\n}\nexport function* currentChangeOrderSagas() {\n  yield all([call(onCreateChangeOrderStart), call(onFetchCurrentChangeOrderStart), call(onCreateCOitemStart)]);\n}","map":{"version":3,"sources":["C:/Users/lenovo/desktop/github/myles-website/frontend/src/redux/current-change-order/current-change-order.sagas.js"],"names":["all","call","put","takeLatest","select","delay","selectCurrentProjectId","fetchCurrentTaskStart","fetchCurrentTask","selectUserId","createCOitemFailure","createCOitemSuccess","createChangeOrderFailure","createChangeOrderSuccess","fetchCurrentChangeOrderFailure","fetchCurrentChangeOrderStart","fetchCurrentChangeOrderSuccess","selectCurrentCOId","CurrentChangeOrderActionTypes","createChangeOrderStart","payload","data","projectId","userId","console","log","taskId","changeOrderCreation","fetch","method","headers","body","JSON","stringify","json","done","message","error","fetchCurrentCOStart","COid","CO","createCOitem","coId","COitem","onCreateChangeOrderStart","CREATE_CHANGE_ORDER_START","onFetchCurrentChangeOrderStart","FETCH_CURRENT_CHANGE_ORDER_START","onCreateCOitemStart","CREATE_CURRENT_CO_ITEM_START","currentChangeOrderSagas"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest, select, delay} from \"redux-saga/effects\";\r\nimport { selectCurrentProjectId } from \"../current-project/current-project.selectors\";\r\nimport { fetchCurrentTaskStart } from \"../current-task/current-task.actions\";\r\nimport { fetchCurrentTask } from \"../current-task/current-task.sagas\";\r\nimport { selectUserId } from \"../user/user.selectors\";\r\nimport {createCOitemFailure, createCOitemSuccess, createChangeOrderFailure, createChangeOrderSuccess, fetchCurrentChangeOrderFailure, fetchCurrentChangeOrderStart, fetchCurrentChangeOrderSuccess} from './current-change-order.actions'\r\nimport { selectCurrentCOId } from \"./current-change-order.selectors\";\r\nimport { CurrentChangeOrderActionTypes } from \"./current-change-order.types\";\r\n\r\nexport function* createChangeOrderStart({payload}){\r\n  try {\r\n      let data = payload\r\n      const projectId = yield select(selectCurrentProjectId)\r\n      const userId = yield select(selectUserId)\r\n      console.log(projectId)\r\n      const taskId = data.taskId\r\n      data['projectId'] = projectId\r\n      data['userId'] = userId\r\n      console.log(data)\r\n    let changeOrderCreation = yield fetch(`http://127.0.0.1:5000/create-change-order/${taskId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n      changeOrderCreation = yield changeOrderCreation.json()\r\n      changeOrderCreation.done ? \r\n      yield put(createChangeOrderSuccess(changeOrderCreation.message)):\r\n      yield put(createChangeOrderFailure('ERROR'))\r\n      yield delay(500)\r\n      yield put(fetchCurrentTaskStart(taskId))\r\n  } catch (error) {\r\n      console.log(error)\r\n  }\r\n}\r\n\r\nexport function* fetchCurrentCOStart({payload}){\r\n    let COid = payload\r\n    try {\r\n        let CO = yield fetch(`http://127.0.0.1:5000/changeOrder/${COid}`)\r\n        CO = yield CO.json()\r\n        CO.done?\r\n        yield put(fetchCurrentChangeOrderSuccess(CO.CO)):\r\n        yield put(fetchCurrentChangeOrderFailure('error'))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* createCOitem({payload}){\r\n    let data = payload\r\n    let COid = data.coId\r\n    console.log(COid, 'saga co id')\r\n    try {\r\n        \r\n        let COitem = yield fetch(`http://127.0.0.1:5000/create-change-order-items/${COid}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n      COitem = yield COitem.json()\r\n      COitem.done ? \r\n      yield put(createCOitemSuccess(COitem.message)):\r\n      yield put(createCOitemFailure('ERROR'))\r\n      yield delay(500)\r\n      yield put(fetchCurrentChangeOrderStart(COid))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* onCreateChangeOrderStart(){\r\n  yield takeLatest(CurrentChangeOrderActionTypes.CREATE_CHANGE_ORDER_START , createChangeOrderStart)\r\n}\r\n\r\nexport function* onFetchCurrentChangeOrderStart(){\r\n    yield takeLatest(CurrentChangeOrderActionTypes.FETCH_CURRENT_CHANGE_ORDER_START, fetchCurrentCOStart)\r\n}\r\n\r\nexport function* onCreateCOitemStart(){\r\n    yield takeLatest(CurrentChangeOrderActionTypes.CREATE_CURRENT_CO_ITEM_START, createCOitem)\r\n}\r\n\r\nexport function* currentChangeOrderSagas() {\r\n  yield all([\r\n    call(onCreateChangeOrderStart),\r\n    call(onFetchCurrentChangeOrderStart),\r\n    call(onCreateCOitemStart)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}